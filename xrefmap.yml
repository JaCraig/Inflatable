### YamlMime:XRefMap
sorted: true
references:
- uid: Inflatable
  name: Inflatable
  href: api/Inflatable.html
  commentId: N:Inflatable
  fullName: Inflatable
  nameWithType: Inflatable
- uid: Inflatable.Aspect
  name: Inflatable.Aspect
  href: api/Inflatable.Aspect.html
  commentId: N:Inflatable.Aspect
  fullName: Inflatable.Aspect
  nameWithType: Inflatable.Aspect
- uid: Inflatable.Aspect.EndMethod
  name: Inflatable.Aspect.EndMethod
  href: api/Inflatable.Aspect.EndMethod.html
  commentId: N:Inflatable.Aspect.EndMethod
  fullName: Inflatable.Aspect.EndMethod
  nameWithType: Inflatable.Aspect.EndMethod
- uid: Inflatable.Aspect.EndMethod.IListProperty
  name: IListProperty
  href: api/Inflatable.Aspect.EndMethod.IListProperty.html
  commentId: T:Inflatable.Aspect.EndMethod.IListProperty
  fullName: Inflatable.Aspect.EndMethod.IListProperty
  nameWithType: IListProperty
- uid: Inflatable.Aspect.EndMethod.IListProperty.Setup(System.String,System.Reflection.MethodInfo,Inflatable.Interfaces.IMapping,System.Text.StringBuilder)
  name: Setup(string, MethodInfo, IMapping, StringBuilder)
  href: api/Inflatable.Aspect.EndMethod.IListProperty.html#Inflatable_Aspect_EndMethod_IListProperty_Setup_System_String_System_Reflection_MethodInfo_Inflatable_Interfaces_IMapping_System_Text_StringBuilder_
  commentId: M:Inflatable.Aspect.EndMethod.IListProperty.Setup(System.String,System.Reflection.MethodInfo,Inflatable.Interfaces.IMapping,System.Text.StringBuilder)
  name.vb: Setup(String, MethodInfo, IMapping, StringBuilder)
  fullName: Inflatable.Aspect.EndMethod.IListProperty.Setup(string, System.Reflection.MethodInfo, Inflatable.Interfaces.IMapping, System.Text.StringBuilder)
  fullName.vb: Inflatable.Aspect.EndMethod.IListProperty.Setup(String, System.Reflection.MethodInfo, Inflatable.Interfaces.IMapping, System.Text.StringBuilder)
  nameWithType: IListProperty.Setup(string, MethodInfo, IMapping, StringBuilder)
  nameWithType.vb: IListProperty.Setup(String, MethodInfo, IMapping, StringBuilder)
- uid: Inflatable.Aspect.EndMethod.IListProperty.Setup*
  name: Setup
  href: api/Inflatable.Aspect.EndMethod.IListProperty.html#Inflatable_Aspect_EndMethod_IListProperty_Setup_
  commentId: Overload:Inflatable.Aspect.EndMethod.IListProperty.Setup
  isSpec: "True"
  fullName: Inflatable.Aspect.EndMethod.IListProperty.Setup
  nameWithType: IListProperty.Setup
- uid: Inflatable.Aspect.EndMethod.IManyToOnePropertyLazyLoad
  name: IManyToOnePropertyLazyLoad
  href: api/Inflatable.Aspect.EndMethod.IManyToOnePropertyLazyLoad.html
  commentId: T:Inflatable.Aspect.EndMethod.IManyToOnePropertyLazyLoad
  fullName: Inflatable.Aspect.EndMethod.IManyToOnePropertyLazyLoad
  nameWithType: IManyToOnePropertyLazyLoad
- uid: Inflatable.Aspect.EndMethod.IManyToOnePropertyLazyLoad.Setup(System.String,System.Reflection.MethodInfo,Inflatable.Interfaces.IMapping,System.Text.StringBuilder)
  name: Setup(string, MethodInfo, IMapping, StringBuilder)
  href: api/Inflatable.Aspect.EndMethod.IManyToOnePropertyLazyLoad.html#Inflatable_Aspect_EndMethod_IManyToOnePropertyLazyLoad_Setup_System_String_System_Reflection_MethodInfo_Inflatable_Interfaces_IMapping_System_Text_StringBuilder_
  commentId: M:Inflatable.Aspect.EndMethod.IManyToOnePropertyLazyLoad.Setup(System.String,System.Reflection.MethodInfo,Inflatable.Interfaces.IMapping,System.Text.StringBuilder)
  name.vb: Setup(String, MethodInfo, IMapping, StringBuilder)
  fullName: Inflatable.Aspect.EndMethod.IManyToOnePropertyLazyLoad.Setup(string, System.Reflection.MethodInfo, Inflatable.Interfaces.IMapping, System.Text.StringBuilder)
  fullName.vb: Inflatable.Aspect.EndMethod.IManyToOnePropertyLazyLoad.Setup(String, System.Reflection.MethodInfo, Inflatable.Interfaces.IMapping, System.Text.StringBuilder)
  nameWithType: IManyToOnePropertyLazyLoad.Setup(string, MethodInfo, IMapping, StringBuilder)
  nameWithType.vb: IManyToOnePropertyLazyLoad.Setup(String, MethodInfo, IMapping, StringBuilder)
- uid: Inflatable.Aspect.EndMethod.IManyToOnePropertyLazyLoad.Setup*
  name: Setup
  href: api/Inflatable.Aspect.EndMethod.IManyToOnePropertyLazyLoad.html#Inflatable_Aspect_EndMethod_IManyToOnePropertyLazyLoad_Setup_
  commentId: Overload:Inflatable.Aspect.EndMethod.IManyToOnePropertyLazyLoad.Setup
  isSpec: "True"
  fullName: Inflatable.Aspect.EndMethod.IManyToOnePropertyLazyLoad.Setup
  nameWithType: IManyToOnePropertyLazyLoad.Setup
- uid: Inflatable.Aspect.EndMethod.SingleProperty
  name: SingleProperty
  href: api/Inflatable.Aspect.EndMethod.SingleProperty.html
  commentId: T:Inflatable.Aspect.EndMethod.SingleProperty
  fullName: Inflatable.Aspect.EndMethod.SingleProperty
  nameWithType: SingleProperty
- uid: Inflatable.Aspect.EndMethod.SingleProperty.Setup(System.String,System.Reflection.MethodInfo,Inflatable.Interfaces.IMapping,System.Text.StringBuilder)
  name: Setup(string, MethodInfo, IMapping, StringBuilder)
  href: api/Inflatable.Aspect.EndMethod.SingleProperty.html#Inflatable_Aspect_EndMethod_SingleProperty_Setup_System_String_System_Reflection_MethodInfo_Inflatable_Interfaces_IMapping_System_Text_StringBuilder_
  commentId: M:Inflatable.Aspect.EndMethod.SingleProperty.Setup(System.String,System.Reflection.MethodInfo,Inflatable.Interfaces.IMapping,System.Text.StringBuilder)
  name.vb: Setup(String, MethodInfo, IMapping, StringBuilder)
  fullName: Inflatable.Aspect.EndMethod.SingleProperty.Setup(string, System.Reflection.MethodInfo, Inflatable.Interfaces.IMapping, System.Text.StringBuilder)
  fullName.vb: Inflatable.Aspect.EndMethod.SingleProperty.Setup(String, System.Reflection.MethodInfo, Inflatable.Interfaces.IMapping, System.Text.StringBuilder)
  nameWithType: SingleProperty.Setup(string, MethodInfo, IMapping, StringBuilder)
  nameWithType.vb: SingleProperty.Setup(String, MethodInfo, IMapping, StringBuilder)
- uid: Inflatable.Aspect.EndMethod.SingleProperty.Setup*
  name: Setup
  href: api/Inflatable.Aspect.EndMethod.SingleProperty.html#Inflatable_Aspect_EndMethod_SingleProperty_Setup_
  commentId: Overload:Inflatable.Aspect.EndMethod.SingleProperty.Setup
  isSpec: "True"
  fullName: Inflatable.Aspect.EndMethod.SingleProperty.Setup
  nameWithType: SingleProperty.Setup
- uid: Inflatable.Aspect.InterfaceImplementation
  name: Inflatable.Aspect.InterfaceImplementation
  href: api/Inflatable.Aspect.InterfaceImplementation.html
  commentId: N:Inflatable.Aspect.InterfaceImplementation
  fullName: Inflatable.Aspect.InterfaceImplementation
  nameWithType: Inflatable.Aspect.InterfaceImplementation
- uid: Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod
  name: SetupIORMInitializationMethod
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod.html
  commentId: T:Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod
  nameWithType: SetupIORMInitializationMethod
- uid: Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod.Order
  name: Order
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod.html#Inflatable_Aspect_InterfaceImplementation_SetupIORMInitializationMethod_Order
  commentId: P:Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod.Order
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod.Order
  nameWithType: SetupIORMInitializationMethod.Order
- uid: Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod.Order*
  name: Order
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod.html#Inflatable_Aspect_InterfaceImplementation_SetupIORMInitializationMethod_Order_
  commentId: Overload:Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod.Order
  isSpec: "True"
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod.Order
  nameWithType: SetupIORMInitializationMethod.Order
- uid: Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod.Setup(System.Type,Inflatable.Aspect.ORMAspect,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: Setup(Type, ORMAspect, ObjectPool<StringBuilder>)
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod.html#Inflatable_Aspect_InterfaceImplementation_SetupIORMInitializationMethod_Setup_System_Type_Inflatable_Aspect_ORMAspect_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod.Setup(System.Type,Inflatable.Aspect.ORMAspect,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: Setup(Type, ORMAspect, ObjectPool(Of StringBuilder))
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod.Setup(System.Type, Inflatable.Aspect.ORMAspect, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod.Setup(System.Type, Inflatable.Aspect.ORMAspect, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: SetupIORMInitializationMethod.Setup(Type, ORMAspect, ObjectPool<StringBuilder>)
  nameWithType.vb: SetupIORMInitializationMethod.Setup(Type, ORMAspect, ObjectPool(Of StringBuilder))
- uid: Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod.Setup*
  name: Setup
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod.html#Inflatable_Aspect_InterfaceImplementation_SetupIORMInitializationMethod_Setup_
  commentId: Overload:Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod.Setup
  isSpec: "True"
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupIORMInitializationMethod.Setup
  nameWithType: SetupIORMInitializationMethod.Setup
- uid: Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties
  name: SetupIORMObjectProperties
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties.html
  commentId: T:Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties
  nameWithType: SetupIORMObjectProperties
- uid: Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties.Order
  name: Order
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties.html#Inflatable_Aspect_InterfaceImplementation_SetupIORMObjectProperties_Order
  commentId: P:Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties.Order
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties.Order
  nameWithType: SetupIORMObjectProperties.Order
- uid: Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties.Order*
  name: Order
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties.html#Inflatable_Aspect_InterfaceImplementation_SetupIORMObjectProperties_Order_
  commentId: Overload:Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties.Order
  isSpec: "True"
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties.Order
  nameWithType: SetupIORMObjectProperties.Order
- uid: Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties.Setup(System.Type,Inflatable.Aspect.ORMAspect,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: Setup(Type, ORMAspect, ObjectPool<StringBuilder>)
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties.html#Inflatable_Aspect_InterfaceImplementation_SetupIORMObjectProperties_Setup_System_Type_Inflatable_Aspect_ORMAspect_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties.Setup(System.Type,Inflatable.Aspect.ORMAspect,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: Setup(Type, ORMAspect, ObjectPool(Of StringBuilder))
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties.Setup(System.Type, Inflatable.Aspect.ORMAspect, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties.Setup(System.Type, Inflatable.Aspect.ORMAspect, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: SetupIORMObjectProperties.Setup(Type, ORMAspect, ObjectPool<StringBuilder>)
  nameWithType.vb: SetupIORMObjectProperties.Setup(Type, ORMAspect, ObjectPool(Of StringBuilder))
- uid: Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties.Setup*
  name: Setup
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties.html#Inflatable_Aspect_InterfaceImplementation_SetupIORMObjectProperties_Setup_
  commentId: Overload:Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties.Setup
  isSpec: "True"
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupIORMObjectProperties.Setup
  nameWithType: SetupIORMObjectProperties.Setup
- uid: Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields
  name: SetupManyToManyFields
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields.html
  commentId: T:Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields
  nameWithType: SetupManyToManyFields
- uid: Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields.Order
  name: Order
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields.html#Inflatable_Aspect_InterfaceImplementation_SetupManyToManyFields_Order
  commentId: P:Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields.Order
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields.Order
  nameWithType: SetupManyToManyFields.Order
- uid: Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields.Order*
  name: Order
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields.html#Inflatable_Aspect_InterfaceImplementation_SetupManyToManyFields_Order_
  commentId: Overload:Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields.Order
  isSpec: "True"
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields.Order
  nameWithType: SetupManyToManyFields.Order
- uid: Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields.Setup(System.Type,Inflatable.Aspect.ORMAspect,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: Setup(Type, ORMAspect, ObjectPool<StringBuilder>)
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields.html#Inflatable_Aspect_InterfaceImplementation_SetupManyToManyFields_Setup_System_Type_Inflatable_Aspect_ORMAspect_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields.Setup(System.Type,Inflatable.Aspect.ORMAspect,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: Setup(Type, ORMAspect, ObjectPool(Of StringBuilder))
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields.Setup(System.Type, Inflatable.Aspect.ORMAspect, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields.Setup(System.Type, Inflatable.Aspect.ORMAspect, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: SetupManyToManyFields.Setup(Type, ORMAspect, ObjectPool<StringBuilder>)
  nameWithType.vb: SetupManyToManyFields.Setup(Type, ORMAspect, ObjectPool(Of StringBuilder))
- uid: Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields.Setup*
  name: Setup
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields.html#Inflatable_Aspect_InterfaceImplementation_SetupManyToManyFields_Setup_
  commentId: Overload:Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields.Setup
  isSpec: "True"
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupManyToManyFields.Setup
  nameWithType: SetupManyToManyFields.Setup
- uid: Inflatable.Aspect.InterfaceImplementation.SetupMapFields
  name: SetupMapFields
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupMapFields.html
  commentId: T:Inflatable.Aspect.InterfaceImplementation.SetupMapFields
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupMapFields
  nameWithType: SetupMapFields
- uid: Inflatable.Aspect.InterfaceImplementation.SetupMapFields.Order
  name: Order
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupMapFields.html#Inflatable_Aspect_InterfaceImplementation_SetupMapFields_Order
  commentId: P:Inflatable.Aspect.InterfaceImplementation.SetupMapFields.Order
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupMapFields.Order
  nameWithType: SetupMapFields.Order
- uid: Inflatable.Aspect.InterfaceImplementation.SetupMapFields.Order*
  name: Order
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupMapFields.html#Inflatable_Aspect_InterfaceImplementation_SetupMapFields_Order_
  commentId: Overload:Inflatable.Aspect.InterfaceImplementation.SetupMapFields.Order
  isSpec: "True"
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupMapFields.Order
  nameWithType: SetupMapFields.Order
- uid: Inflatable.Aspect.InterfaceImplementation.SetupMapFields.Setup(System.Type,Inflatable.Aspect.ORMAspect,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: Setup(Type, ORMAspect, ObjectPool<StringBuilder>)
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupMapFields.html#Inflatable_Aspect_InterfaceImplementation_SetupMapFields_Setup_System_Type_Inflatable_Aspect_ORMAspect_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.Aspect.InterfaceImplementation.SetupMapFields.Setup(System.Type,Inflatable.Aspect.ORMAspect,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: Setup(Type, ORMAspect, ObjectPool(Of StringBuilder))
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupMapFields.Setup(System.Type, Inflatable.Aspect.ORMAspect, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.Aspect.InterfaceImplementation.SetupMapFields.Setup(System.Type, Inflatable.Aspect.ORMAspect, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: SetupMapFields.Setup(Type, ORMAspect, ObjectPool<StringBuilder>)
  nameWithType.vb: SetupMapFields.Setup(Type, ORMAspect, ObjectPool(Of StringBuilder))
- uid: Inflatable.Aspect.InterfaceImplementation.SetupMapFields.Setup*
  name: Setup
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupMapFields.html#Inflatable_Aspect_InterfaceImplementation_SetupMapFields_Setup_
  commentId: Overload:Inflatable.Aspect.InterfaceImplementation.SetupMapFields.Setup
  isSpec: "True"
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupMapFields.Setup
  nameWithType: SetupMapFields.Setup
- uid: Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields
  name: SetupReferenceFields
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields.html
  commentId: T:Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields
  nameWithType: SetupReferenceFields
- uid: Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields.Order
  name: Order
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields.html#Inflatable_Aspect_InterfaceImplementation_SetupReferenceFields_Order
  commentId: P:Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields.Order
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields.Order
  nameWithType: SetupReferenceFields.Order
- uid: Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields.Order*
  name: Order
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields.html#Inflatable_Aspect_InterfaceImplementation_SetupReferenceFields_Order_
  commentId: Overload:Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields.Order
  isSpec: "True"
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields.Order
  nameWithType: SetupReferenceFields.Order
- uid: Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields.Setup(System.Type,Inflatable.Aspect.ORMAspect,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: Setup(Type, ORMAspect, ObjectPool<StringBuilder>)
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields.html#Inflatable_Aspect_InterfaceImplementation_SetupReferenceFields_Setup_System_Type_Inflatable_Aspect_ORMAspect_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields.Setup(System.Type,Inflatable.Aspect.ORMAspect,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: Setup(Type, ORMAspect, ObjectPool(Of StringBuilder))
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields.Setup(System.Type, Inflatable.Aspect.ORMAspect, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields.Setup(System.Type, Inflatable.Aspect.ORMAspect, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: SetupReferenceFields.Setup(Type, ORMAspect, ObjectPool<StringBuilder>)
  nameWithType.vb: SetupReferenceFields.Setup(Type, ORMAspect, ObjectPool(Of StringBuilder))
- uid: Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields.Setup*
  name: Setup
  href: api/Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields.html#Inflatable_Aspect_InterfaceImplementation_SetupReferenceFields_Setup_
  commentId: Overload:Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields.Setup
  isSpec: "True"
  fullName: Inflatable.Aspect.InterfaceImplementation.SetupReferenceFields.Setup
  nameWithType: SetupReferenceFields.Setup
- uid: Inflatable.Aspect.Interfaces
  name: Inflatable.Aspect.Interfaces
  href: api/Inflatable.Aspect.Interfaces.html
  commentId: N:Inflatable.Aspect.Interfaces
  fullName: Inflatable.Aspect.Interfaces
  nameWithType: Inflatable.Aspect.Interfaces
- uid: Inflatable.Aspect.Interfaces.IEndMethodHelper
  name: IEndMethodHelper
  href: api/Inflatable.Aspect.Interfaces.IEndMethodHelper.html
  commentId: T:Inflatable.Aspect.Interfaces.IEndMethodHelper
  fullName: Inflatable.Aspect.Interfaces.IEndMethodHelper
  nameWithType: IEndMethodHelper
- uid: Inflatable.Aspect.Interfaces.IEndMethodHelper.Setup(System.String,System.Reflection.MethodInfo,Inflatable.Interfaces.IMapping,System.Text.StringBuilder)
  name: Setup(string, MethodInfo, IMapping, StringBuilder)
  href: api/Inflatable.Aspect.Interfaces.IEndMethodHelper.html#Inflatable_Aspect_Interfaces_IEndMethodHelper_Setup_System_String_System_Reflection_MethodInfo_Inflatable_Interfaces_IMapping_System_Text_StringBuilder_
  commentId: M:Inflatable.Aspect.Interfaces.IEndMethodHelper.Setup(System.String,System.Reflection.MethodInfo,Inflatable.Interfaces.IMapping,System.Text.StringBuilder)
  name.vb: Setup(String, MethodInfo, IMapping, StringBuilder)
  fullName: Inflatable.Aspect.Interfaces.IEndMethodHelper.Setup(string, System.Reflection.MethodInfo, Inflatable.Interfaces.IMapping, System.Text.StringBuilder)
  fullName.vb: Inflatable.Aspect.Interfaces.IEndMethodHelper.Setup(String, System.Reflection.MethodInfo, Inflatable.Interfaces.IMapping, System.Text.StringBuilder)
  nameWithType: IEndMethodHelper.Setup(string, MethodInfo, IMapping, StringBuilder)
  nameWithType.vb: IEndMethodHelper.Setup(String, MethodInfo, IMapping, StringBuilder)
- uid: Inflatable.Aspect.Interfaces.IEndMethodHelper.Setup*
  name: Setup
  href: api/Inflatable.Aspect.Interfaces.IEndMethodHelper.html#Inflatable_Aspect_Interfaces_IEndMethodHelper_Setup_
  commentId: Overload:Inflatable.Aspect.Interfaces.IEndMethodHelper.Setup
  isSpec: "True"
  fullName: Inflatable.Aspect.Interfaces.IEndMethodHelper.Setup
  nameWithType: IEndMethodHelper.Setup
- uid: Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper
  name: IInterfaceImplementationHelper
  href: api/Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper.html
  commentId: T:Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper
  fullName: Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper
  nameWithType: IInterfaceImplementationHelper
- uid: Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper.Order
  name: Order
  href: api/Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper.html#Inflatable_Aspect_Interfaces_IInterfaceImplementationHelper_Order
  commentId: P:Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper.Order
  fullName: Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper.Order
  nameWithType: IInterfaceImplementationHelper.Order
- uid: Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper.Order*
  name: Order
  href: api/Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper.html#Inflatable_Aspect_Interfaces_IInterfaceImplementationHelper_Order_
  commentId: Overload:Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper.Order
  isSpec: "True"
  fullName: Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper.Order
  nameWithType: IInterfaceImplementationHelper.Order
- uid: Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper.Setup(System.Type,Inflatable.Aspect.ORMAspect,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: Setup(Type, ORMAspect, ObjectPool<StringBuilder>)
  href: api/Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper.html#Inflatable_Aspect_Interfaces_IInterfaceImplementationHelper_Setup_System_Type_Inflatable_Aspect_ORMAspect_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper.Setup(System.Type,Inflatable.Aspect.ORMAspect,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: Setup(Type, ORMAspect, ObjectPool(Of StringBuilder))
  fullName: Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper.Setup(System.Type, Inflatable.Aspect.ORMAspect, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper.Setup(System.Type, Inflatable.Aspect.ORMAspect, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: IInterfaceImplementationHelper.Setup(Type, ORMAspect, ObjectPool<StringBuilder>)
  nameWithType.vb: IInterfaceImplementationHelper.Setup(Type, ORMAspect, ObjectPool(Of StringBuilder))
- uid: Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper.Setup*
  name: Setup
  href: api/Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper.html#Inflatable_Aspect_Interfaces_IInterfaceImplementationHelper_Setup_
  commentId: Overload:Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper.Setup
  isSpec: "True"
  fullName: Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper.Setup
  nameWithType: IInterfaceImplementationHelper.Setup
- uid: Inflatable.Aspect.Interfaces.IORMObject
  name: IORMObject
  href: api/Inflatable.Aspect.Interfaces.IORMObject.html
  commentId: T:Inflatable.Aspect.Interfaces.IORMObject
  fullName: Inflatable.Aspect.Interfaces.IORMObject
  nameWithType: IORMObject
- uid: Inflatable.Aspect.Interfaces.IORMObject.InitializeORMObject0(Inflatable.Sessions.ISession)
  name: InitializeORMObject0(ISession)
  href: api/Inflatable.Aspect.Interfaces.IORMObject.html#Inflatable_Aspect_Interfaces_IORMObject_InitializeORMObject0_Inflatable_Sessions_ISession_
  commentId: M:Inflatable.Aspect.Interfaces.IORMObject.InitializeORMObject0(Inflatable.Sessions.ISession)
  fullName: Inflatable.Aspect.Interfaces.IORMObject.InitializeORMObject0(Inflatable.Sessions.ISession)
  nameWithType: IORMObject.InitializeORMObject0(ISession)
- uid: Inflatable.Aspect.Interfaces.IORMObject.InitializeORMObject0*
  name: InitializeORMObject0
  href: api/Inflatable.Aspect.Interfaces.IORMObject.html#Inflatable_Aspect_Interfaces_IORMObject_InitializeORMObject0_
  commentId: Overload:Inflatable.Aspect.Interfaces.IORMObject.InitializeORMObject0
  isSpec: "True"
  fullName: Inflatable.Aspect.Interfaces.IORMObject.InitializeORMObject0
  nameWithType: IORMObject.InitializeORMObject0
- uid: Inflatable.Aspect.Interfaces.IORMObject.PropertiesChanged0
  name: PropertiesChanged0
  href: api/Inflatable.Aspect.Interfaces.IORMObject.html#Inflatable_Aspect_Interfaces_IORMObject_PropertiesChanged0
  commentId: P:Inflatable.Aspect.Interfaces.IORMObject.PropertiesChanged0
  fullName: Inflatable.Aspect.Interfaces.IORMObject.PropertiesChanged0
  nameWithType: IORMObject.PropertiesChanged0
- uid: Inflatable.Aspect.Interfaces.IORMObject.PropertiesChanged0*
  name: PropertiesChanged0
  href: api/Inflatable.Aspect.Interfaces.IORMObject.html#Inflatable_Aspect_Interfaces_IORMObject_PropertiesChanged0_
  commentId: Overload:Inflatable.Aspect.Interfaces.IORMObject.PropertiesChanged0
  isSpec: "True"
  fullName: Inflatable.Aspect.Interfaces.IORMObject.PropertiesChanged0
  nameWithType: IORMObject.PropertiesChanged0
- uid: Inflatable.Aspect.Interfaces.IORMObject.Session0
  name: Session0
  href: api/Inflatable.Aspect.Interfaces.IORMObject.html#Inflatable_Aspect_Interfaces_IORMObject_Session0
  commentId: P:Inflatable.Aspect.Interfaces.IORMObject.Session0
  fullName: Inflatable.Aspect.Interfaces.IORMObject.Session0
  nameWithType: IORMObject.Session0
- uid: Inflatable.Aspect.Interfaces.IORMObject.Session0*
  name: Session0
  href: api/Inflatable.Aspect.Interfaces.IORMObject.html#Inflatable_Aspect_Interfaces_IORMObject_Session0_
  commentId: Overload:Inflatable.Aspect.Interfaces.IORMObject.Session0
  isSpec: "True"
  fullName: Inflatable.Aspect.Interfaces.IORMObject.Session0
  nameWithType: IORMObject.Session0
- uid: Inflatable.Aspect.Interfaces.IStartMethodHelper
  name: IStartMethodHelper
  href: api/Inflatable.Aspect.Interfaces.IStartMethodHelper.html
  commentId: T:Inflatable.Aspect.Interfaces.IStartMethodHelper
  fullName: Inflatable.Aspect.Interfaces.IStartMethodHelper
  nameWithType: IStartMethodHelper
- uid: Inflatable.Aspect.Interfaces.IStartMethodHelper.Setup(System.Reflection.MethodInfo,Inflatable.Interfaces.IMapping,System.Text.StringBuilder)
  name: Setup(MethodInfo, IMapping, StringBuilder)
  href: api/Inflatable.Aspect.Interfaces.IStartMethodHelper.html#Inflatable_Aspect_Interfaces_IStartMethodHelper_Setup_System_Reflection_MethodInfo_Inflatable_Interfaces_IMapping_System_Text_StringBuilder_
  commentId: M:Inflatable.Aspect.Interfaces.IStartMethodHelper.Setup(System.Reflection.MethodInfo,Inflatable.Interfaces.IMapping,System.Text.StringBuilder)
  fullName: Inflatable.Aspect.Interfaces.IStartMethodHelper.Setup(System.Reflection.MethodInfo, Inflatable.Interfaces.IMapping, System.Text.StringBuilder)
  nameWithType: IStartMethodHelper.Setup(MethodInfo, IMapping, StringBuilder)
- uid: Inflatable.Aspect.Interfaces.IStartMethodHelper.Setup*
  name: Setup
  href: api/Inflatable.Aspect.Interfaces.IStartMethodHelper.html#Inflatable_Aspect_Interfaces_IStartMethodHelper_Setup_
  commentId: Overload:Inflatable.Aspect.Interfaces.IStartMethodHelper.Setup
  isSpec: "True"
  fullName: Inflatable.Aspect.Interfaces.IStartMethodHelper.Setup
  nameWithType: IStartMethodHelper.Setup
- uid: Inflatable.Aspect.ORMAspect
  name: ORMAspect
  href: api/Inflatable.Aspect.ORMAspect.html
  commentId: T:Inflatable.Aspect.ORMAspect
  fullName: Inflatable.Aspect.ORMAspect
  nameWithType: ORMAspect
- uid: Inflatable.Aspect.ORMAspect.#ctor(Inflatable.ClassMapper.MappingManager,System.Collections.Generic.IEnumerable{Inflatable.Aspect.Interfaces.IStartMethodHelper},System.Collections.Generic.IEnumerable{Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper},System.Collections.Generic.IEnumerable{Inflatable.Aspect.Interfaces.IEndMethodHelper},Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: ORMAspect(MappingManager, IEnumerable<IStartMethodHelper>, IEnumerable<IInterfaceImplementationHelper>, IEnumerable<IEndMethodHelper>, ObjectPool<StringBuilder>)
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect__ctor_Inflatable_ClassMapper_MappingManager_System_Collections_Generic_IEnumerable_Inflatable_Aspect_Interfaces_IStartMethodHelper__System_Collections_Generic_IEnumerable_Inflatable_Aspect_Interfaces_IInterfaceImplementationHelper__System_Collections_Generic_IEnumerable_Inflatable_Aspect_Interfaces_IEndMethodHelper__Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.Aspect.ORMAspect.#ctor(Inflatable.ClassMapper.MappingManager,System.Collections.Generic.IEnumerable{Inflatable.Aspect.Interfaces.IStartMethodHelper},System.Collections.Generic.IEnumerable{Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper},System.Collections.Generic.IEnumerable{Inflatable.Aspect.Interfaces.IEndMethodHelper},Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: New(MappingManager, IEnumerable(Of IStartMethodHelper), IEnumerable(Of IInterfaceImplementationHelper), IEnumerable(Of IEndMethodHelper), ObjectPool(Of StringBuilder))
  fullName: Inflatable.Aspect.ORMAspect.ORMAspect(Inflatable.ClassMapper.MappingManager, System.Collections.Generic.IEnumerable<Inflatable.Aspect.Interfaces.IStartMethodHelper>, System.Collections.Generic.IEnumerable<Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper>, System.Collections.Generic.IEnumerable<Inflatable.Aspect.Interfaces.IEndMethodHelper>, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.Aspect.ORMAspect.New(Inflatable.ClassMapper.MappingManager, System.Collections.Generic.IEnumerable(Of Inflatable.Aspect.Interfaces.IStartMethodHelper), System.Collections.Generic.IEnumerable(Of Inflatable.Aspect.Interfaces.IInterfaceImplementationHelper), System.Collections.Generic.IEnumerable(Of Inflatable.Aspect.Interfaces.IEndMethodHelper), Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: ORMAspect.ORMAspect(MappingManager, IEnumerable<IStartMethodHelper>, IEnumerable<IInterfaceImplementationHelper>, IEnumerable<IEndMethodHelper>, ObjectPool<StringBuilder>)
  nameWithType.vb: ORMAspect.New(MappingManager, IEnumerable(Of IStartMethodHelper), IEnumerable(Of IInterfaceImplementationHelper), IEnumerable(Of IEndMethodHelper), ObjectPool(Of StringBuilder))
- uid: Inflatable.Aspect.ORMAspect.#ctor*
  name: ORMAspect
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect__ctor_
  commentId: Overload:Inflatable.Aspect.ORMAspect.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.Aspect.ORMAspect.ORMAspect
  fullName.vb: Inflatable.Aspect.ORMAspect.New
  nameWithType: ORMAspect.ORMAspect
  nameWithType.vb: ORMAspect.New
- uid: Inflatable.Aspect.ORMAspect.AssembliesUsing
  name: AssembliesUsing
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_AssembliesUsing
  commentId: P:Inflatable.Aspect.ORMAspect.AssembliesUsing
  fullName: Inflatable.Aspect.ORMAspect.AssembliesUsing
  nameWithType: ORMAspect.AssembliesUsing
- uid: Inflatable.Aspect.ORMAspect.AssembliesUsing*
  name: AssembliesUsing
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_AssembliesUsing_
  commentId: Overload:Inflatable.Aspect.ORMAspect.AssembliesUsing
  isSpec: "True"
  fullName: Inflatable.Aspect.ORMAspect.AssembliesUsing
  nameWithType: ORMAspect.AssembliesUsing
- uid: Inflatable.Aspect.ORMAspect.ClassManager
  name: ClassManager
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_ClassManager
  commentId: P:Inflatable.Aspect.ORMAspect.ClassManager
  fullName: Inflatable.Aspect.ORMAspect.ClassManager
  nameWithType: ORMAspect.ClassManager
- uid: Inflatable.Aspect.ORMAspect.ClassManager*
  name: ClassManager
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_ClassManager_
  commentId: Overload:Inflatable.Aspect.ORMAspect.ClassManager
  isSpec: "True"
  fullName: Inflatable.Aspect.ORMAspect.ClassManager
  nameWithType: ORMAspect.ClassManager
- uid: Inflatable.Aspect.ORMAspect.EndMethodHelpers
  name: EndMethodHelpers
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_EndMethodHelpers
  commentId: P:Inflatable.Aspect.ORMAspect.EndMethodHelpers
  fullName: Inflatable.Aspect.ORMAspect.EndMethodHelpers
  nameWithType: ORMAspect.EndMethodHelpers
- uid: Inflatable.Aspect.ORMAspect.EndMethodHelpers*
  name: EndMethodHelpers
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_EndMethodHelpers_
  commentId: Overload:Inflatable.Aspect.ORMAspect.EndMethodHelpers
  isSpec: "True"
  fullName: Inflatable.Aspect.ORMAspect.EndMethodHelpers
  nameWithType: ORMAspect.EndMethodHelpers
- uid: Inflatable.Aspect.ORMAspect.IDFields
  name: IDFields
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_IDFields
  commentId: P:Inflatable.Aspect.ORMAspect.IDFields
  fullName: Inflatable.Aspect.ORMAspect.IDFields
  nameWithType: ORMAspect.IDFields
- uid: Inflatable.Aspect.ORMAspect.IDFields*
  name: IDFields
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_IDFields_
  commentId: Overload:Inflatable.Aspect.ORMAspect.IDFields
  isSpec: "True"
  fullName: Inflatable.Aspect.ORMAspect.IDFields
  nameWithType: ORMAspect.IDFields
- uid: Inflatable.Aspect.ORMAspect.InterfaceImplementationHelpers
  name: InterfaceImplementationHelpers
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_InterfaceImplementationHelpers
  commentId: P:Inflatable.Aspect.ORMAspect.InterfaceImplementationHelpers
  fullName: Inflatable.Aspect.ORMAspect.InterfaceImplementationHelpers
  nameWithType: ORMAspect.InterfaceImplementationHelpers
- uid: Inflatable.Aspect.ORMAspect.InterfaceImplementationHelpers*
  name: InterfaceImplementationHelpers
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_InterfaceImplementationHelpers_
  commentId: Overload:Inflatable.Aspect.ORMAspect.InterfaceImplementationHelpers
  isSpec: "True"
  fullName: Inflatable.Aspect.ORMAspect.InterfaceImplementationHelpers
  nameWithType: ORMAspect.InterfaceImplementationHelpers
- uid: Inflatable.Aspect.ORMAspect.InterfacesUsing
  name: InterfacesUsing
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_InterfacesUsing
  commentId: P:Inflatable.Aspect.ORMAspect.InterfacesUsing
  fullName: Inflatable.Aspect.ORMAspect.InterfacesUsing
  nameWithType: ORMAspect.InterfacesUsing
- uid: Inflatable.Aspect.ORMAspect.InterfacesUsing*
  name: InterfacesUsing
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_InterfacesUsing_
  commentId: Overload:Inflatable.Aspect.ORMAspect.InterfacesUsing
  isSpec: "True"
  fullName: Inflatable.Aspect.ORMAspect.InterfacesUsing
  nameWithType: ORMAspect.InterfacesUsing
- uid: Inflatable.Aspect.ORMAspect.ManyToManyFields
  name: ManyToManyFields
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_ManyToManyFields
  commentId: P:Inflatable.Aspect.ORMAspect.ManyToManyFields
  fullName: Inflatable.Aspect.ORMAspect.ManyToManyFields
  nameWithType: ORMAspect.ManyToManyFields
- uid: Inflatable.Aspect.ORMAspect.ManyToManyFields*
  name: ManyToManyFields
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_ManyToManyFields_
  commentId: Overload:Inflatable.Aspect.ORMAspect.ManyToManyFields
  isSpec: "True"
  fullName: Inflatable.Aspect.ORMAspect.ManyToManyFields
  nameWithType: ORMAspect.ManyToManyFields
- uid: Inflatable.Aspect.ORMAspect.ManyToOneFields
  name: ManyToOneFields
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_ManyToOneFields
  commentId: P:Inflatable.Aspect.ORMAspect.ManyToOneFields
  fullName: Inflatable.Aspect.ORMAspect.ManyToOneFields
  nameWithType: ORMAspect.ManyToOneFields
- uid: Inflatable.Aspect.ORMAspect.ManyToOneFields*
  name: ManyToOneFields
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_ManyToOneFields_
  commentId: Overload:Inflatable.Aspect.ORMAspect.ManyToOneFields
  isSpec: "True"
  fullName: Inflatable.Aspect.ORMAspect.ManyToOneFields
  nameWithType: ORMAspect.ManyToOneFields
- uid: Inflatable.Aspect.ORMAspect.MapFields
  name: MapFields
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_MapFields
  commentId: P:Inflatable.Aspect.ORMAspect.MapFields
  fullName: Inflatable.Aspect.ORMAspect.MapFields
  nameWithType: ORMAspect.MapFields
- uid: Inflatable.Aspect.ORMAspect.MapFields*
  name: MapFields
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_MapFields_
  commentId: Overload:Inflatable.Aspect.ORMAspect.MapFields
  isSpec: "True"
  fullName: Inflatable.Aspect.ORMAspect.MapFields
  nameWithType: ORMAspect.MapFields
- uid: Inflatable.Aspect.ORMAspect.ObjectPool
  name: ObjectPool
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_ObjectPool
  commentId: P:Inflatable.Aspect.ORMAspect.ObjectPool
  fullName: Inflatable.Aspect.ORMAspect.ObjectPool
  nameWithType: ORMAspect.ObjectPool
- uid: Inflatable.Aspect.ORMAspect.ObjectPool*
  name: ObjectPool
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_ObjectPool_
  commentId: Overload:Inflatable.Aspect.ORMAspect.ObjectPool
  isSpec: "True"
  fullName: Inflatable.Aspect.ORMAspect.ObjectPool
  nameWithType: ORMAspect.ObjectPool
- uid: Inflatable.Aspect.ORMAspect.ReferenceFields
  name: ReferenceFields
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_ReferenceFields
  commentId: P:Inflatable.Aspect.ORMAspect.ReferenceFields
  fullName: Inflatable.Aspect.ORMAspect.ReferenceFields
  nameWithType: ORMAspect.ReferenceFields
- uid: Inflatable.Aspect.ORMAspect.ReferenceFields*
  name: ReferenceFields
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_ReferenceFields_
  commentId: Overload:Inflatable.Aspect.ORMAspect.ReferenceFields
  isSpec: "True"
  fullName: Inflatable.Aspect.ORMAspect.ReferenceFields
  nameWithType: ORMAspect.ReferenceFields
- uid: Inflatable.Aspect.ORMAspect.Setup(System.Object)
  name: Setup(object)
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_Setup_System_Object_
  commentId: M:Inflatable.Aspect.ORMAspect.Setup(System.Object)
  name.vb: Setup(Object)
  fullName: Inflatable.Aspect.ORMAspect.Setup(object)
  fullName.vb: Inflatable.Aspect.ORMAspect.Setup(Object)
  nameWithType: ORMAspect.Setup(object)
  nameWithType.vb: ORMAspect.Setup(Object)
- uid: Inflatable.Aspect.ORMAspect.Setup*
  name: Setup
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_Setup_
  commentId: Overload:Inflatable.Aspect.ORMAspect.Setup
  isSpec: "True"
  fullName: Inflatable.Aspect.ORMAspect.Setup
  nameWithType: ORMAspect.Setup
- uid: Inflatable.Aspect.ORMAspect.SetupDefaultConstructor(System.Type)
  name: SetupDefaultConstructor(Type)
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_SetupDefaultConstructor_System_Type_
  commentId: M:Inflatable.Aspect.ORMAspect.SetupDefaultConstructor(System.Type)
  fullName: Inflatable.Aspect.ORMAspect.SetupDefaultConstructor(System.Type)
  nameWithType: ORMAspect.SetupDefaultConstructor(Type)
- uid: Inflatable.Aspect.ORMAspect.SetupDefaultConstructor*
  name: SetupDefaultConstructor
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_SetupDefaultConstructor_
  commentId: Overload:Inflatable.Aspect.ORMAspect.SetupDefaultConstructor
  isSpec: "True"
  fullName: Inflatable.Aspect.ORMAspect.SetupDefaultConstructor
  nameWithType: ORMAspect.SetupDefaultConstructor
- uid: Inflatable.Aspect.ORMAspect.SetupEndMethod(System.Reflection.MethodInfo,System.Type,System.String)
  name: SetupEndMethod(MethodInfo, Type, string)
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_SetupEndMethod_System_Reflection_MethodInfo_System_Type_System_String_
  commentId: M:Inflatable.Aspect.ORMAspect.SetupEndMethod(System.Reflection.MethodInfo,System.Type,System.String)
  name.vb: SetupEndMethod(MethodInfo, Type, String)
  fullName: Inflatable.Aspect.ORMAspect.SetupEndMethod(System.Reflection.MethodInfo, System.Type, string)
  fullName.vb: Inflatable.Aspect.ORMAspect.SetupEndMethod(System.Reflection.MethodInfo, System.Type, String)
  nameWithType: ORMAspect.SetupEndMethod(MethodInfo, Type, string)
  nameWithType.vb: ORMAspect.SetupEndMethod(MethodInfo, Type, String)
- uid: Inflatable.Aspect.ORMAspect.SetupEndMethod*
  name: SetupEndMethod
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_SetupEndMethod_
  commentId: Overload:Inflatable.Aspect.ORMAspect.SetupEndMethod
  isSpec: "True"
  fullName: Inflatable.Aspect.ORMAspect.SetupEndMethod
  nameWithType: ORMAspect.SetupEndMethod
- uid: Inflatable.Aspect.ORMAspect.SetupExceptionMethod(System.Reflection.MethodInfo,System.Type)
  name: SetupExceptionMethod(MethodInfo, Type)
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_SetupExceptionMethod_System_Reflection_MethodInfo_System_Type_
  commentId: M:Inflatable.Aspect.ORMAspect.SetupExceptionMethod(System.Reflection.MethodInfo,System.Type)
  fullName: Inflatable.Aspect.ORMAspect.SetupExceptionMethod(System.Reflection.MethodInfo, System.Type)
  nameWithType: ORMAspect.SetupExceptionMethod(MethodInfo, Type)
- uid: Inflatable.Aspect.ORMAspect.SetupExceptionMethod*
  name: SetupExceptionMethod
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_SetupExceptionMethod_
  commentId: Overload:Inflatable.Aspect.ORMAspect.SetupExceptionMethod
  isSpec: "True"
  fullName: Inflatable.Aspect.ORMAspect.SetupExceptionMethod
  nameWithType: ORMAspect.SetupExceptionMethod
- uid: Inflatable.Aspect.ORMAspect.SetupInterfaces(System.Type)
  name: SetupInterfaces(Type)
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_SetupInterfaces_System_Type_
  commentId: M:Inflatable.Aspect.ORMAspect.SetupInterfaces(System.Type)
  fullName: Inflatable.Aspect.ORMAspect.SetupInterfaces(System.Type)
  nameWithType: ORMAspect.SetupInterfaces(Type)
- uid: Inflatable.Aspect.ORMAspect.SetupInterfaces*
  name: SetupInterfaces
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_SetupInterfaces_
  commentId: Overload:Inflatable.Aspect.ORMAspect.SetupInterfaces
  isSpec: "True"
  fullName: Inflatable.Aspect.ORMAspect.SetupInterfaces
  nameWithType: ORMAspect.SetupInterfaces
- uid: Inflatable.Aspect.ORMAspect.SetupStartMethod(System.Reflection.MethodInfo,System.Type)
  name: SetupStartMethod(MethodInfo, Type)
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_SetupStartMethod_System_Reflection_MethodInfo_System_Type_
  commentId: M:Inflatable.Aspect.ORMAspect.SetupStartMethod(System.Reflection.MethodInfo,System.Type)
  fullName: Inflatable.Aspect.ORMAspect.SetupStartMethod(System.Reflection.MethodInfo, System.Type)
  nameWithType: ORMAspect.SetupStartMethod(MethodInfo, Type)
- uid: Inflatable.Aspect.ORMAspect.SetupStartMethod*
  name: SetupStartMethod
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_SetupStartMethod_
  commentId: Overload:Inflatable.Aspect.ORMAspect.SetupStartMethod
  isSpec: "True"
  fullName: Inflatable.Aspect.ORMAspect.SetupStartMethod
  nameWithType: ORMAspect.SetupStartMethod
- uid: Inflatable.Aspect.ORMAspect.StartMethodHelpers
  name: StartMethodHelpers
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_StartMethodHelpers
  commentId: P:Inflatable.Aspect.ORMAspect.StartMethodHelpers
  fullName: Inflatable.Aspect.ORMAspect.StartMethodHelpers
  nameWithType: ORMAspect.StartMethodHelpers
- uid: Inflatable.Aspect.ORMAspect.StartMethodHelpers*
  name: StartMethodHelpers
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_StartMethodHelpers_
  commentId: Overload:Inflatable.Aspect.ORMAspect.StartMethodHelpers
  isSpec: "True"
  fullName: Inflatable.Aspect.ORMAspect.StartMethodHelpers
  nameWithType: ORMAspect.StartMethodHelpers
- uid: Inflatable.Aspect.ORMAspect.Usings
  name: Usings
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_Usings
  commentId: P:Inflatable.Aspect.ORMAspect.Usings
  fullName: Inflatable.Aspect.ORMAspect.Usings
  nameWithType: ORMAspect.Usings
- uid: Inflatable.Aspect.ORMAspect.Usings*
  name: Usings
  href: api/Inflatable.Aspect.ORMAspect.html#Inflatable_Aspect_ORMAspect_Usings_
  commentId: Overload:Inflatable.Aspect.ORMAspect.Usings
  isSpec: "True"
  fullName: Inflatable.Aspect.ORMAspect.Usings
  nameWithType: ORMAspect.Usings
- uid: Inflatable.Aspect.StartMethod
  name: Inflatable.Aspect.StartMethod
  href: api/Inflatable.Aspect.StartMethod.html
  commentId: N:Inflatable.Aspect.StartMethod
  fullName: Inflatable.Aspect.StartMethod
  nameWithType: Inflatable.Aspect.StartMethod
- uid: Inflatable.Aspect.StartMethod.IDStartMethod
  name: IDStartMethod
  href: api/Inflatable.Aspect.StartMethod.IDStartMethod.html
  commentId: T:Inflatable.Aspect.StartMethod.IDStartMethod
  fullName: Inflatable.Aspect.StartMethod.IDStartMethod
  nameWithType: IDStartMethod
- uid: Inflatable.Aspect.StartMethod.IDStartMethod.Setup(System.Reflection.MethodInfo,Inflatable.Interfaces.IMapping,System.Text.StringBuilder)
  name: Setup(MethodInfo, IMapping, StringBuilder)
  href: api/Inflatable.Aspect.StartMethod.IDStartMethod.html#Inflatable_Aspect_StartMethod_IDStartMethod_Setup_System_Reflection_MethodInfo_Inflatable_Interfaces_IMapping_System_Text_StringBuilder_
  commentId: M:Inflatable.Aspect.StartMethod.IDStartMethod.Setup(System.Reflection.MethodInfo,Inflatable.Interfaces.IMapping,System.Text.StringBuilder)
  fullName: Inflatable.Aspect.StartMethod.IDStartMethod.Setup(System.Reflection.MethodInfo, Inflatable.Interfaces.IMapping, System.Text.StringBuilder)
  nameWithType: IDStartMethod.Setup(MethodInfo, IMapping, StringBuilder)
- uid: Inflatable.Aspect.StartMethod.IDStartMethod.Setup*
  name: Setup
  href: api/Inflatable.Aspect.StartMethod.IDStartMethod.html#Inflatable_Aspect_StartMethod_IDStartMethod_Setup_
  commentId: Overload:Inflatable.Aspect.StartMethod.IDStartMethod.Setup
  isSpec: "True"
  fullName: Inflatable.Aspect.StartMethod.IDStartMethod.Setup
  nameWithType: IDStartMethod.Setup
- uid: Inflatable.Aspect.StartMethod.MapStartMethod
  name: MapStartMethod
  href: api/Inflatable.Aspect.StartMethod.MapStartMethod.html
  commentId: T:Inflatable.Aspect.StartMethod.MapStartMethod
  fullName: Inflatable.Aspect.StartMethod.MapStartMethod
  nameWithType: MapStartMethod
- uid: Inflatable.Aspect.StartMethod.MapStartMethod.Setup(System.Reflection.MethodInfo,Inflatable.Interfaces.IMapping,System.Text.StringBuilder)
  name: Setup(MethodInfo, IMapping, StringBuilder)
  href: api/Inflatable.Aspect.StartMethod.MapStartMethod.html#Inflatable_Aspect_StartMethod_MapStartMethod_Setup_System_Reflection_MethodInfo_Inflatable_Interfaces_IMapping_System_Text_StringBuilder_
  commentId: M:Inflatable.Aspect.StartMethod.MapStartMethod.Setup(System.Reflection.MethodInfo,Inflatable.Interfaces.IMapping,System.Text.StringBuilder)
  fullName: Inflatable.Aspect.StartMethod.MapStartMethod.Setup(System.Reflection.MethodInfo, Inflatable.Interfaces.IMapping, System.Text.StringBuilder)
  nameWithType: MapStartMethod.Setup(MethodInfo, IMapping, StringBuilder)
- uid: Inflatable.Aspect.StartMethod.MapStartMethod.Setup*
  name: Setup
  href: api/Inflatable.Aspect.StartMethod.MapStartMethod.html#Inflatable_Aspect_StartMethod_MapStartMethod_Setup_
  commentId: Overload:Inflatable.Aspect.StartMethod.MapStartMethod.Setup
  isSpec: "True"
  fullName: Inflatable.Aspect.StartMethod.MapStartMethod.Setup
  nameWithType: MapStartMethod.Setup
- uid: Inflatable.Aspect.StartMethod.ReferenceStartMethod
  name: ReferenceStartMethod
  href: api/Inflatable.Aspect.StartMethod.ReferenceStartMethod.html
  commentId: T:Inflatable.Aspect.StartMethod.ReferenceStartMethod
  fullName: Inflatable.Aspect.StartMethod.ReferenceStartMethod
  nameWithType: ReferenceStartMethod
- uid: Inflatable.Aspect.StartMethod.ReferenceStartMethod.Setup(System.Reflection.MethodInfo,Inflatable.Interfaces.IMapping,System.Text.StringBuilder)
  name: Setup(MethodInfo, IMapping, StringBuilder)
  href: api/Inflatable.Aspect.StartMethod.ReferenceStartMethod.html#Inflatable_Aspect_StartMethod_ReferenceStartMethod_Setup_System_Reflection_MethodInfo_Inflatable_Interfaces_IMapping_System_Text_StringBuilder_
  commentId: M:Inflatable.Aspect.StartMethod.ReferenceStartMethod.Setup(System.Reflection.MethodInfo,Inflatable.Interfaces.IMapping,System.Text.StringBuilder)
  fullName: Inflatable.Aspect.StartMethod.ReferenceStartMethod.Setup(System.Reflection.MethodInfo, Inflatable.Interfaces.IMapping, System.Text.StringBuilder)
  nameWithType: ReferenceStartMethod.Setup(MethodInfo, IMapping, StringBuilder)
- uid: Inflatable.Aspect.StartMethod.ReferenceStartMethod.Setup*
  name: Setup
  href: api/Inflatable.Aspect.StartMethod.ReferenceStartMethod.html#Inflatable_Aspect_StartMethod_ReferenceStartMethod_Setup_
  commentId: Overload:Inflatable.Aspect.StartMethod.ReferenceStartMethod.Setup
  isSpec: "True"
  fullName: Inflatable.Aspect.StartMethod.ReferenceStartMethod.Setup
  nameWithType: ReferenceStartMethod.Setup
- uid: Inflatable.BaseClasses
  name: Inflatable.BaseClasses
  href: api/Inflatable.BaseClasses.html
  commentId: N:Inflatable.BaseClasses
  fullName: Inflatable.BaseClasses
  nameWithType: Inflatable.BaseClasses
- uid: Inflatable.BaseClasses.MappingBaseClass`2
  name: MappingBaseClass<TClassType, TDatabaseType>
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html
  commentId: T:Inflatable.BaseClasses.MappingBaseClass`2
  name.vb: MappingBaseClass(Of TClassType, TDatabaseType)
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType)
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType)
- uid: Inflatable.BaseClasses.MappingBaseClass`2.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Boolean)
  name: MappingBaseClass(string, string, string, string, int, bool)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2__ctor_System_String_System_String_System_String_System_String_System_Int32_System_Boolean_
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Boolean)
  name.vb: New(String, String, String, String, Integer, Boolean)
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.MappingBaseClass(string, string, string, string, int, bool)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).New(String, String, String, String, Integer, Boolean)
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.MappingBaseClass(string, string, string, string, int, bool)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).New(String, String, String, String, Integer, Boolean)
- uid: Inflatable.BaseClasses.MappingBaseClass`2.#ctor*
  name: MappingBaseClass
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2__ctor_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.MappingBaseClass
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).New
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.MappingBaseClass
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).New
- uid: Inflatable.BaseClasses.MappingBaseClass`2.AddAutoKey
  name: AddAutoKey()
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_AddAutoKey
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.AddAutoKey
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.AddAutoKey()
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).AddAutoKey()
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.AddAutoKey()
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).AddAutoKey()
- uid: Inflatable.BaseClasses.MappingBaseClass`2.AddAutoKey*
  name: AddAutoKey
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_AddAutoKey_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.AddAutoKey
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.AddAutoKey
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).AddAutoKey
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.AddAutoKey
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).AddAutoKey
- uid: Inflatable.BaseClasses.MappingBaseClass`2.AutoIDProperties
  name: AutoIDProperties
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_AutoIDProperties
  commentId: P:Inflatable.BaseClasses.MappingBaseClass`2.AutoIDProperties
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.AutoIDProperties
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).AutoIDProperties
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.AutoIDProperties
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).AutoIDProperties
- uid: Inflatable.BaseClasses.MappingBaseClass`2.AutoIDProperties*
  name: AutoIDProperties
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_AutoIDProperties_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.AutoIDProperties
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.AutoIDProperties
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).AutoIDProperties
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.AutoIDProperties
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).AutoIDProperties
- uid: Inflatable.BaseClasses.MappingBaseClass`2.ContainsProperty(System.String)
  name: ContainsProperty(string)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_ContainsProperty_System_String_
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.ContainsProperty(System.String)
  name.vb: ContainsProperty(String)
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.ContainsProperty(string)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).ContainsProperty(String)
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.ContainsProperty(string)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).ContainsProperty(String)
- uid: Inflatable.BaseClasses.MappingBaseClass`2.ContainsProperty*
  name: ContainsProperty
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_ContainsProperty_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.ContainsProperty
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.ContainsProperty
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).ContainsProperty
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.ContainsProperty
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).ContainsProperty
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Copy(Inflatable.Interfaces.IMapping)
  name: Copy(IMapping)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Copy_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.Copy(Inflatable.Interfaces.IMapping)
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Copy(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Copy(Inflatable.Interfaces.IMapping)
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Copy(IMapping)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Copy(IMapping)
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Copy*
  name: Copy
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Copy_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.Copy
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Copy
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Copy
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Copy
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Copy
- uid: Inflatable.BaseClasses.MappingBaseClass`2.CopyProperty(Inflatable.ClassMapper.Interfaces.IIDProperty)
  name: CopyProperty(IIDProperty)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_CopyProperty_Inflatable_ClassMapper_Interfaces_IIDProperty_
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.CopyProperty(Inflatable.ClassMapper.Interfaces.IIDProperty)
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.CopyProperty(Inflatable.ClassMapper.Interfaces.IIDProperty)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).CopyProperty(Inflatable.ClassMapper.Interfaces.IIDProperty)
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.CopyProperty(IIDProperty)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).CopyProperty(IIDProperty)
- uid: Inflatable.BaseClasses.MappingBaseClass`2.CopyProperty(Inflatable.ClassMapper.Interfaces.IManyToManyProperty)
  name: CopyProperty(IManyToManyProperty)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_CopyProperty_Inflatable_ClassMapper_Interfaces_IManyToManyProperty_
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.CopyProperty(Inflatable.ClassMapper.Interfaces.IManyToManyProperty)
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.CopyProperty(Inflatable.ClassMapper.Interfaces.IManyToManyProperty)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).CopyProperty(Inflatable.ClassMapper.Interfaces.IManyToManyProperty)
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.CopyProperty(IManyToManyProperty)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).CopyProperty(IManyToManyProperty)
- uid: Inflatable.BaseClasses.MappingBaseClass`2.CopyProperty(Inflatable.ClassMapper.Interfaces.IManyToOneProperty)
  name: CopyProperty(IManyToOneProperty)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_CopyProperty_Inflatable_ClassMapper_Interfaces_IManyToOneProperty_
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.CopyProperty(Inflatable.ClassMapper.Interfaces.IManyToOneProperty)
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.CopyProperty(Inflatable.ClassMapper.Interfaces.IManyToOneProperty)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).CopyProperty(Inflatable.ClassMapper.Interfaces.IManyToOneProperty)
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.CopyProperty(IManyToOneProperty)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).CopyProperty(IManyToOneProperty)
- uid: Inflatable.BaseClasses.MappingBaseClass`2.CopyProperty(Inflatable.ClassMapper.Interfaces.IMapProperty)
  name: CopyProperty(IMapProperty)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_CopyProperty_Inflatable_ClassMapper_Interfaces_IMapProperty_
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.CopyProperty(Inflatable.ClassMapper.Interfaces.IMapProperty)
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.CopyProperty(Inflatable.ClassMapper.Interfaces.IMapProperty)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).CopyProperty(Inflatable.ClassMapper.Interfaces.IMapProperty)
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.CopyProperty(IMapProperty)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).CopyProperty(IMapProperty)
- uid: Inflatable.BaseClasses.MappingBaseClass`2.CopyProperty(Inflatable.ClassMapper.Interfaces.IProperty)
  name: CopyProperty(IProperty)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_CopyProperty_Inflatable_ClassMapper_Interfaces_IProperty_
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.CopyProperty(Inflatable.ClassMapper.Interfaces.IProperty)
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.CopyProperty(Inflatable.ClassMapper.Interfaces.IProperty)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).CopyProperty(Inflatable.ClassMapper.Interfaces.IProperty)
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.CopyProperty(IProperty)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).CopyProperty(IProperty)
- uid: Inflatable.BaseClasses.MappingBaseClass`2.CopyProperty*
  name: CopyProperty
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_CopyProperty_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.CopyProperty
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.CopyProperty
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).CopyProperty
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.CopyProperty
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).CopyProperty
- uid: Inflatable.BaseClasses.MappingBaseClass`2.DatabaseConfigType
  name: DatabaseConfigType
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_DatabaseConfigType
  commentId: P:Inflatable.BaseClasses.MappingBaseClass`2.DatabaseConfigType
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.DatabaseConfigType
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).DatabaseConfigType
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.DatabaseConfigType
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).DatabaseConfigType
- uid: Inflatable.BaseClasses.MappingBaseClass`2.DatabaseConfigType*
  name: DatabaseConfigType
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_DatabaseConfigType_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.DatabaseConfigType
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.DatabaseConfigType
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).DatabaseConfigType
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.DatabaseConfigType
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).DatabaseConfigType
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Equals(System.Object)
  name: Equals(object?)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Equals_System_Object_
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Equals(object?)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Equals(Object)
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Equals(object?)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Equals(Object)
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Equals*
  name: Equals
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Equals_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.Equals
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Equals
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Equals
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Equals
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Equals
- uid: Inflatable.BaseClasses.MappingBaseClass`2.GetColumnName(System.String)
  name: GetColumnName(string)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_GetColumnName_System_String_
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.GetColumnName(System.String)
  name.vb: GetColumnName(String)
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.GetColumnName(string)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).GetColumnName(String)
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.GetColumnName(string)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).GetColumnName(String)
- uid: Inflatable.BaseClasses.MappingBaseClass`2.GetColumnName*
  name: GetColumnName
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_GetColumnName_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.GetColumnName
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.GetColumnName
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).GetColumnName
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.GetColumnName
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).GetColumnName
- uid: Inflatable.BaseClasses.MappingBaseClass`2.GetHashCode
  name: GetHashCode()
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_GetHashCode
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.GetHashCode
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.GetHashCode()
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).GetHashCode()
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.GetHashCode()
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).GetHashCode()
- uid: Inflatable.BaseClasses.MappingBaseClass`2.GetHashCode*
  name: GetHashCode
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_GetHashCode_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.GetHashCode
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.GetHashCode
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).GetHashCode
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.GetHashCode
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).GetHashCode
- uid: Inflatable.BaseClasses.MappingBaseClass`2.ID*
  name: ID
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_ID_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.ID
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.ID
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).ID
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.ID
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).ID
- uid: Inflatable.BaseClasses.MappingBaseClass`2.ID``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  name: ID<TDataType>(Expression<Func<TClassType, TDataType>>)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_ID__1_System_Linq_Expressions_Expression_System_Func__0___0___
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.ID``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  name.vb: ID(Of TDataType)(Expression(Of Func(Of TClassType, TDataType)))
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.ID<TDataType>(System.Linq.Expressions.Expression<System.Func<TClassType, TDataType>>)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).ID(Of TDataType)(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, TDataType)))
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.ID<TDataType>(Expression<Func<TClassType, TDataType>>)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).ID(Of TDataType)(Expression(Of Func(Of TClassType, TDataType)))
- uid: Inflatable.BaseClasses.MappingBaseClass`2.IDProperties
  name: IDProperties
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_IDProperties
  commentId: P:Inflatable.BaseClasses.MappingBaseClass`2.IDProperties
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.IDProperties
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).IDProperties
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.IDProperties
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).IDProperties
- uid: Inflatable.BaseClasses.MappingBaseClass`2.IDProperties*
  name: IDProperties
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_IDProperties_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.IDProperties
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.IDProperties
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).IDProperties
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.IDProperties
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).IDProperties
- uid: Inflatable.BaseClasses.MappingBaseClass`2.ManyToMany*
  name: ManyToMany
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_ManyToMany_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.ManyToMany
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.ManyToMany
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).ManyToMany
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.ManyToMany
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).ManyToMany
- uid: Inflatable.BaseClasses.MappingBaseClass`2.ManyToMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{``0}}})
  name: ManyToMany<TDataType>(Expression<Func<TClassType, IList<TDataType>>>)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_ManyToMany__1_System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_IList___0____
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.ManyToMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{``0}}})
  name.vb: ManyToMany(Of TDataType)(Expression(Of Func(Of TClassType, IList(Of TDataType))))
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.ManyToMany<TDataType>(System.Linq.Expressions.Expression<System.Func<TClassType, System.Collections.Generic.IList<TDataType>>>)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).ManyToMany(Of TDataType)(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, System.Collections.Generic.IList(Of TDataType))))
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.ManyToMany<TDataType>(Expression<Func<TClassType, IList<TDataType>>>)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).ManyToMany(Of TDataType)(Expression(Of Func(Of TClassType, IList(Of TDataType))))
- uid: Inflatable.BaseClasses.MappingBaseClass`2.ManyToManyProperties
  name: ManyToManyProperties
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_ManyToManyProperties
  commentId: P:Inflatable.BaseClasses.MappingBaseClass`2.ManyToManyProperties
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.ManyToManyProperties
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).ManyToManyProperties
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.ManyToManyProperties
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).ManyToManyProperties
- uid: Inflatable.BaseClasses.MappingBaseClass`2.ManyToManyProperties*
  name: ManyToManyProperties
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_ManyToManyProperties_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.ManyToManyProperties
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.ManyToManyProperties
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).ManyToManyProperties
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.ManyToManyProperties
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).ManyToManyProperties
- uid: Inflatable.BaseClasses.MappingBaseClass`2.ManyToOne*
  name: ManyToOne
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_ManyToOne_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.ManyToOne
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.ManyToOne
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).ManyToOne
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.ManyToOne
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).ManyToOne
- uid: Inflatable.BaseClasses.MappingBaseClass`2.ManyToOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  name: ManyToOne<TDataType>(Expression<Func<TClassType, TDataType?>>)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_ManyToOne__1_System_Linq_Expressions_Expression_System_Func__0___0___
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.ManyToOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  name.vb: ManyToOne(Of TDataType)(Expression(Of Func(Of TClassType, TDataType)))
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.ManyToOne<TDataType>(System.Linq.Expressions.Expression<System.Func<TClassType, TDataType?>>)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).ManyToOne(Of TDataType)(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, TDataType)))
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.ManyToOne<TDataType>(Expression<Func<TClassType, TDataType?>>)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).ManyToOne(Of TDataType)(Expression(Of Func(Of TClassType, TDataType)))
- uid: Inflatable.BaseClasses.MappingBaseClass`2.ManyToOne``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{``0}}})
  name: ManyToOne<TDataType>(Expression<Func<TClassType, IList<TDataType>>>)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_ManyToOne__1_System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_IList___0____
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.ManyToOne``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{``0}}})
  name.vb: ManyToOne(Of TDataType)(Expression(Of Func(Of TClassType, IList(Of TDataType))))
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.ManyToOne<TDataType>(System.Linq.Expressions.Expression<System.Func<TClassType, System.Collections.Generic.IList<TDataType>>>)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).ManyToOne(Of TDataType)(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, System.Collections.Generic.IList(Of TDataType))))
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.ManyToOne<TDataType>(Expression<Func<TClassType, IList<TDataType>>>)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).ManyToOne(Of TDataType)(Expression(Of Func(Of TClassType, IList(Of TDataType))))
- uid: Inflatable.BaseClasses.MappingBaseClass`2.ManyToOneProperties
  name: ManyToOneProperties
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_ManyToOneProperties
  commentId: P:Inflatable.BaseClasses.MappingBaseClass`2.ManyToOneProperties
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.ManyToOneProperties
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).ManyToOneProperties
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.ManyToOneProperties
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).ManyToOneProperties
- uid: Inflatable.BaseClasses.MappingBaseClass`2.ManyToOneProperties*
  name: ManyToOneProperties
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_ManyToOneProperties_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.ManyToOneProperties
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.ManyToOneProperties
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).ManyToOneProperties
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.ManyToOneProperties
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).ManyToOneProperties
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Map*
  name: Map
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Map_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.Map
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Map
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Map
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Map
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Map
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Map``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  name: Map<TDataType>(Expression<Func<TClassType, TDataType?>>)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Map__1_System_Linq_Expressions_Expression_System_Func__0___0___
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.Map``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  name.vb: Map(Of TDataType)(Expression(Of Func(Of TClassType, TDataType)))
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Map<TDataType>(System.Linq.Expressions.Expression<System.Func<TClassType, TDataType?>>)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Map(Of TDataType)(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, TDataType)))
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Map<TDataType>(Expression<Func<TClassType, TDataType?>>)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Map(Of TDataType)(Expression(Of Func(Of TClassType, TDataType)))
- uid: Inflatable.BaseClasses.MappingBaseClass`2.MapProperties
  name: MapProperties
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_MapProperties
  commentId: P:Inflatable.BaseClasses.MappingBaseClass`2.MapProperties
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.MapProperties
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).MapProperties
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.MapProperties
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).MapProperties
- uid: Inflatable.BaseClasses.MappingBaseClass`2.MapProperties*
  name: MapProperties
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_MapProperties_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.MapProperties
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.MapProperties
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).MapProperties
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.MapProperties
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).MapProperties
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Merge
  name: Merge
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Merge
  commentId: P:Inflatable.BaseClasses.MappingBaseClass`2.Merge
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Merge
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Merge
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Merge
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Merge
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Merge*
  name: Merge
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Merge_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.Merge
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Merge
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Merge
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Merge
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Merge
- uid: Inflatable.BaseClasses.MappingBaseClass`2.ObjectType
  name: ObjectType
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_ObjectType
  commentId: P:Inflatable.BaseClasses.MappingBaseClass`2.ObjectType
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.ObjectType
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).ObjectType
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.ObjectType
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).ObjectType
- uid: Inflatable.BaseClasses.MappingBaseClass`2.ObjectType*
  name: ObjectType
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_ObjectType_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.ObjectType
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.ObjectType
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).ObjectType
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.ObjectType
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).ObjectType
- uid: Inflatable.BaseClasses.MappingBaseClass`2.op_Equality(Inflatable.BaseClasses.MappingBaseClass{`0,`1},Inflatable.BaseClasses.MappingBaseClass{`0,`1})
  name: operator ==(MappingBaseClass<TClassType, TDatabaseType>?, MappingBaseClass<TClassType, TDatabaseType>?)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_op_Equality_Inflatable_BaseClasses_MappingBaseClass__0__1__Inflatable_BaseClasses_MappingBaseClass__0__1__
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.op_Equality(Inflatable.BaseClasses.MappingBaseClass{`0,`1},Inflatable.BaseClasses.MappingBaseClass{`0,`1})
  name.vb: =(MappingBaseClass(Of TClassType, TDatabaseType), MappingBaseClass(Of TClassType, TDatabaseType))
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.operator ==(Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>?, Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>?)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).=(Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType), Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType))
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.operator ==(MappingBaseClass<TClassType, TDatabaseType>?, MappingBaseClass<TClassType, TDatabaseType>?)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).=(MappingBaseClass(Of TClassType, TDatabaseType), MappingBaseClass(Of TClassType, TDatabaseType))
- uid: Inflatable.BaseClasses.MappingBaseClass`2.op_Equality*
  name: operator ==
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_op_Equality_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.operator ==
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).=
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.operator ==
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).=
- uid: Inflatable.BaseClasses.MappingBaseClass`2.op_Inequality(Inflatable.BaseClasses.MappingBaseClass{`0,`1},Inflatable.BaseClasses.MappingBaseClass{`0,`1})
  name: operator !=(MappingBaseClass<TClassType, TDatabaseType>?, MappingBaseClass<TClassType, TDatabaseType>?)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_op_Inequality_Inflatable_BaseClasses_MappingBaseClass__0__1__Inflatable_BaseClasses_MappingBaseClass__0__1__
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.op_Inequality(Inflatable.BaseClasses.MappingBaseClass{`0,`1},Inflatable.BaseClasses.MappingBaseClass{`0,`1})
  name.vb: <>(MappingBaseClass(Of TClassType, TDatabaseType), MappingBaseClass(Of TClassType, TDatabaseType))
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.operator !=(Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>?, Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>?)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).<>(Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType), Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType))
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.operator !=(MappingBaseClass<TClassType, TDatabaseType>?, MappingBaseClass<TClassType, TDatabaseType>?)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).<>(MappingBaseClass(Of TClassType, TDatabaseType), MappingBaseClass(Of TClassType, TDatabaseType))
- uid: Inflatable.BaseClasses.MappingBaseClass`2.op_Inequality*
  name: operator !=
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_op_Inequality_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.operator !=
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).<>
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.operator !=
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).<>
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Order
  name: Order
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Order
  commentId: P:Inflatable.BaseClasses.MappingBaseClass`2.Order
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Order
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Order
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Order
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Order
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Order*
  name: Order
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Order_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.Order
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Order
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Order
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Order
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Order
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Prefix
  name: Prefix
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Prefix
  commentId: P:Inflatable.BaseClasses.MappingBaseClass`2.Prefix
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Prefix
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Prefix
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Prefix
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Prefix
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Prefix*
  name: Prefix
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Prefix_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.Prefix
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Prefix
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Prefix
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Prefix
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Prefix
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Queries
  name: Queries
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Queries
  commentId: P:Inflatable.BaseClasses.MappingBaseClass`2.Queries
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Queries
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Queries
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Queries
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Queries
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Queries*
  name: Queries
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Queries_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.Queries
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Queries
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Queries
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Queries
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Queries
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Reduce(Inflatable.Interfaces.IMapping,Microsoft.Extensions.Logging.ILogger)
  name: Reduce(IMapping, ILogger)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Reduce_Inflatable_Interfaces_IMapping_Microsoft_Extensions_Logging_ILogger_
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.Reduce(Inflatable.Interfaces.IMapping,Microsoft.Extensions.Logging.ILogger)
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Reduce(Inflatable.Interfaces.IMapping, Microsoft.Extensions.Logging.ILogger)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Reduce(Inflatable.Interfaces.IMapping, Microsoft.Extensions.Logging.ILogger)
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Reduce(IMapping, ILogger)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Reduce(IMapping, ILogger)
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Reduce(Microsoft.Extensions.Logging.ILogger)
  name: Reduce(ILogger)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Reduce_Microsoft_Extensions_Logging_ILogger_
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.Reduce(Microsoft.Extensions.Logging.ILogger)
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Reduce(Microsoft.Extensions.Logging.ILogger)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Reduce(Microsoft.Extensions.Logging.ILogger)
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Reduce(ILogger)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Reduce(ILogger)
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Reduce*
  name: Reduce
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Reduce_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.Reduce
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Reduce
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Reduce
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Reduce
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Reduce
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Reference*
  name: Reference
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Reference_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.Reference
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Reference
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Reference
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Reference
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Reference
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Reference``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  name: Reference<TDataType>(Expression<Func<TClassType, TDataType>>)
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Reference__1_System_Linq_Expressions_Expression_System_Func__0___0___
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.Reference``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  name.vb: Reference(Of TDataType)(Expression(Of Func(Of TClassType, TDataType)))
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Reference<TDataType>(System.Linq.Expressions.Expression<System.Func<TClassType, TDataType>>)
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Reference(Of TDataType)(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, TDataType)))
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Reference<TDataType>(Expression<Func<TClassType, TDataType>>)
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Reference(Of TDataType)(Expression(Of Func(Of TClassType, TDataType)))
- uid: Inflatable.BaseClasses.MappingBaseClass`2.ReferenceProperties
  name: ReferenceProperties
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_ReferenceProperties
  commentId: P:Inflatable.BaseClasses.MappingBaseClass`2.ReferenceProperties
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.ReferenceProperties
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).ReferenceProperties
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.ReferenceProperties
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).ReferenceProperties
- uid: Inflatable.BaseClasses.MappingBaseClass`2.ReferenceProperties*
  name: ReferenceProperties
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_ReferenceProperties_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.ReferenceProperties
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.ReferenceProperties
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).ReferenceProperties
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.ReferenceProperties
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).ReferenceProperties
- uid: Inflatable.BaseClasses.MappingBaseClass`2.SchemaName
  name: SchemaName
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_SchemaName
  commentId: P:Inflatable.BaseClasses.MappingBaseClass`2.SchemaName
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.SchemaName
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).SchemaName
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.SchemaName
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).SchemaName
- uid: Inflatable.BaseClasses.MappingBaseClass`2.SchemaName*
  name: SchemaName
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_SchemaName_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.SchemaName
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.SchemaName
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).SchemaName
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.SchemaName
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).SchemaName
- uid: Inflatable.BaseClasses.MappingBaseClass`2.SetQuery(Inflatable.QueryProvider.Enums.QueryType,System.String,System.Data.CommandType,SQLHelperDB.HelperClasses.Interfaces.IParameter[])
  name: SetQuery(QueryType, string, CommandType, params IParameter[])
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_SetQuery_Inflatable_QueryProvider_Enums_QueryType_System_String_System_Data_CommandType_SQLHelperDB_HelperClasses_Interfaces_IParameter___
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.SetQuery(Inflatable.QueryProvider.Enums.QueryType,System.String,System.Data.CommandType,SQLHelperDB.HelperClasses.Interfaces.IParameter[])
  name.vb: SetQuery(QueryType, String, CommandType, ParamArray IParameter())
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.SetQuery(Inflatable.QueryProvider.Enums.QueryType, string, System.Data.CommandType, params SQLHelperDB.HelperClasses.Interfaces.IParameter[])
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).SetQuery(Inflatable.QueryProvider.Enums.QueryType, String, System.Data.CommandType, ParamArray SQLHelperDB.HelperClasses.Interfaces.IParameter())
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.SetQuery(QueryType, string, CommandType, params IParameter[])
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).SetQuery(QueryType, String, CommandType, ParamArray IParameter())
- uid: Inflatable.BaseClasses.MappingBaseClass`2.SetQuery*
  name: SetQuery
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_SetQuery_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.SetQuery
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.SetQuery
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).SetQuery
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.SetQuery
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).SetQuery
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Setup
  name: Setup()
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Setup
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.Setup
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Setup()
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Setup()
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Setup()
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Setup()
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Setup*
  name: Setup
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Setup_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.Setup
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Setup
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Setup
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Setup
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Setup
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Suffix
  name: Suffix
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Suffix
  commentId: P:Inflatable.BaseClasses.MappingBaseClass`2.Suffix
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Suffix
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Suffix
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Suffix
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Suffix
- uid: Inflatable.BaseClasses.MappingBaseClass`2.Suffix*
  name: Suffix
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_Suffix_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.Suffix
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.Suffix
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).Suffix
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.Suffix
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).Suffix
- uid: Inflatable.BaseClasses.MappingBaseClass`2.TableName
  name: TableName
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_TableName
  commentId: P:Inflatable.BaseClasses.MappingBaseClass`2.TableName
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.TableName
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).TableName
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.TableName
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).TableName
- uid: Inflatable.BaseClasses.MappingBaseClass`2.TableName*
  name: TableName
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_TableName_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.TableName
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.TableName
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).TableName
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.TableName
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).TableName
- uid: Inflatable.BaseClasses.MappingBaseClass`2.ToString
  name: ToString()
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_ToString
  commentId: M:Inflatable.BaseClasses.MappingBaseClass`2.ToString
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.ToString()
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).ToString()
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.ToString()
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).ToString()
- uid: Inflatable.BaseClasses.MappingBaseClass`2.ToString*
  name: ToString
  href: api/Inflatable.BaseClasses.MappingBaseClass-2.html#Inflatable_BaseClasses_MappingBaseClass_2_ToString_
  commentId: Overload:Inflatable.BaseClasses.MappingBaseClass`2.ToString
  isSpec: "True"
  fullName: Inflatable.BaseClasses.MappingBaseClass<TClassType, TDatabaseType>.ToString
  fullName.vb: Inflatable.BaseClasses.MappingBaseClass(Of TClassType, TDatabaseType).ToString
  nameWithType: MappingBaseClass<TClassType, TDatabaseType>.ToString
  nameWithType.vb: MappingBaseClass(Of TClassType, TDatabaseType).ToString
- uid: Inflatable.BaseClasses.ObjectBaseClass`2
  name: ObjectBaseClass<TObjectType, TIDType>
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html
  commentId: T:Inflatable.BaseClasses.ObjectBaseClass`2
  name.vb: ObjectBaseClass(Of TObjectType, TIDType)
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType)
  nameWithType: ObjectBaseClass<TObjectType, TIDType>
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType)
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.#ctor
  name: ObjectBaseClass()
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2__ctor
  commentId: M:Inflatable.BaseClasses.ObjectBaseClass`2.#ctor
  name.vb: New()
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.ObjectBaseClass()
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).New()
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.ObjectBaseClass()
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).New()
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.#ctor*
  name: ObjectBaseClass
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2__ctor_
  commentId: Overload:Inflatable.BaseClasses.ObjectBaseClass`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.ObjectBaseClass
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).New
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.ObjectBaseClass
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).New
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.Active
  name: Active
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_Active
  commentId: P:Inflatable.BaseClasses.ObjectBaseClass`2.Active
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.Active
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).Active
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.Active
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).Active
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.Active*
  name: Active
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_Active_
  commentId: Overload:Inflatable.BaseClasses.ObjectBaseClass`2.Active
  isSpec: "True"
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.Active
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).Active
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.Active
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).Active
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.CompareTo(`0)
  name: CompareTo(TObjectType?)
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_CompareTo__0_
  commentId: M:Inflatable.BaseClasses.ObjectBaseClass`2.CompareTo(`0)
  name.vb: CompareTo(TObjectType)
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.CompareTo(TObjectType?)
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).CompareTo(TObjectType)
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.CompareTo(TObjectType?)
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).CompareTo(TObjectType)
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.CompareTo(System.Object)
  name: CompareTo(object?)
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_CompareTo_System_Object_
  commentId: M:Inflatable.BaseClasses.ObjectBaseClass`2.CompareTo(System.Object)
  name.vb: CompareTo(Object)
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.CompareTo(object?)
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).CompareTo(Object)
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.CompareTo(object?)
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).CompareTo(Object)
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.CompareTo*
  name: CompareTo
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_CompareTo_
  commentId: Overload:Inflatable.BaseClasses.ObjectBaseClass`2.CompareTo
  isSpec: "True"
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.CompareTo
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).CompareTo
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.CompareTo
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).CompareTo
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.DateCreated
  name: DateCreated
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_DateCreated
  commentId: P:Inflatable.BaseClasses.ObjectBaseClass`2.DateCreated
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.DateCreated
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).DateCreated
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.DateCreated
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).DateCreated
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.DateCreated*
  name: DateCreated
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_DateCreated_
  commentId: Overload:Inflatable.BaseClasses.ObjectBaseClass`2.DateCreated
  isSpec: "True"
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.DateCreated
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).DateCreated
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.DateCreated
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).DateCreated
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.DateModified
  name: DateModified
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_DateModified
  commentId: P:Inflatable.BaseClasses.ObjectBaseClass`2.DateModified
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.DateModified
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).DateModified
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.DateModified
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).DateModified
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.DateModified*
  name: DateModified
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_DateModified_
  commentId: Overload:Inflatable.BaseClasses.ObjectBaseClass`2.DateModified
  isSpec: "True"
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.DateModified
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).DateModified
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.DateModified
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).DateModified
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.Equals(System.Object)
  name: Equals(object?)
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_Equals_System_Object_
  commentId: M:Inflatable.BaseClasses.ObjectBaseClass`2.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.Equals(object?)
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).Equals(Object)
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.Equals(object?)
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).Equals(Object)
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.Equals*
  name: Equals
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_Equals_
  commentId: Overload:Inflatable.BaseClasses.ObjectBaseClass`2.Equals
  isSpec: "True"
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.Equals
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).Equals
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.Equals
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).Equals
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.GetHashCode
  name: GetHashCode()
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_GetHashCode
  commentId: M:Inflatable.BaseClasses.ObjectBaseClass`2.GetHashCode
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.GetHashCode()
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).GetHashCode()
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.GetHashCode()
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).GetHashCode()
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.GetHashCode*
  name: GetHashCode
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_GetHashCode_
  commentId: Overload:Inflatable.BaseClasses.ObjectBaseClass`2.GetHashCode
  isSpec: "True"
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.GetHashCode
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).GetHashCode
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.GetHashCode
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).GetHashCode
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.ID
  name: ID
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_ID
  commentId: P:Inflatable.BaseClasses.ObjectBaseClass`2.ID
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.ID
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).ID
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.ID
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).ID
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.ID*
  name: ID
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_ID_
  commentId: Overload:Inflatable.BaseClasses.ObjectBaseClass`2.ID
  isSpec: "True"
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.ID
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).ID
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.ID
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).ID
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.op_Equality(Inflatable.BaseClasses.ObjectBaseClass{`0,`1},Inflatable.BaseClasses.ObjectBaseClass{`0,`1})
  name: operator ==(ObjectBaseClass<TObjectType, TIDType>, ObjectBaseClass<TObjectType, TIDType>)
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_op_Equality_Inflatable_BaseClasses_ObjectBaseClass__0__1__Inflatable_BaseClasses_ObjectBaseClass__0__1__
  commentId: M:Inflatable.BaseClasses.ObjectBaseClass`2.op_Equality(Inflatable.BaseClasses.ObjectBaseClass{`0,`1},Inflatable.BaseClasses.ObjectBaseClass{`0,`1})
  name.vb: =(ObjectBaseClass(Of TObjectType, TIDType), ObjectBaseClass(Of TObjectType, TIDType))
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.operator ==(Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>, Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>)
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).=(Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType), Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType))
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.operator ==(ObjectBaseClass<TObjectType, TIDType>, ObjectBaseClass<TObjectType, TIDType>)
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).=(ObjectBaseClass(Of TObjectType, TIDType), ObjectBaseClass(Of TObjectType, TIDType))
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.op_Equality*
  name: operator ==
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_op_Equality_
  commentId: Overload:Inflatable.BaseClasses.ObjectBaseClass`2.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.operator ==
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).=
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.operator ==
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).=
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.op_GreaterThan(Inflatable.BaseClasses.ObjectBaseClass{`0,`1},Inflatable.BaseClasses.ObjectBaseClass{`0,`1})
  name: operator >(ObjectBaseClass<TObjectType, TIDType>, ObjectBaseClass<TObjectType, TIDType>)
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_op_GreaterThan_Inflatable_BaseClasses_ObjectBaseClass__0__1__Inflatable_BaseClasses_ObjectBaseClass__0__1__
  commentId: M:Inflatable.BaseClasses.ObjectBaseClass`2.op_GreaterThan(Inflatable.BaseClasses.ObjectBaseClass{`0,`1},Inflatable.BaseClasses.ObjectBaseClass{`0,`1})
  name.vb: '>(ObjectBaseClass(Of TObjectType, TIDType), ObjectBaseClass(Of TObjectType, TIDType))'
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.operator >(Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>, Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>)
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).>(Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType), Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType))
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.operator >(ObjectBaseClass<TObjectType, TIDType>, ObjectBaseClass<TObjectType, TIDType>)
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).>(ObjectBaseClass(Of TObjectType, TIDType), ObjectBaseClass(Of TObjectType, TIDType))
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.op_GreaterThan*
  name: operator >
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_op_GreaterThan_
  commentId: Overload:Inflatable.BaseClasses.ObjectBaseClass`2.op_GreaterThan
  isSpec: "True"
  name.vb: '>'
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.operator >
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).>
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.operator >
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).>
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.op_GreaterThanOrEqual(Inflatable.BaseClasses.ObjectBaseClass{`0,`1},Inflatable.BaseClasses.ObjectBaseClass{`0,`1})
  name: operator >=(ObjectBaseClass<TObjectType, TIDType>, ObjectBaseClass<TObjectType, TIDType>)
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_op_GreaterThanOrEqual_Inflatable_BaseClasses_ObjectBaseClass__0__1__Inflatable_BaseClasses_ObjectBaseClass__0__1__
  commentId: M:Inflatable.BaseClasses.ObjectBaseClass`2.op_GreaterThanOrEqual(Inflatable.BaseClasses.ObjectBaseClass{`0,`1},Inflatable.BaseClasses.ObjectBaseClass{`0,`1})
  name.vb: '>=(ObjectBaseClass(Of TObjectType, TIDType), ObjectBaseClass(Of TObjectType, TIDType))'
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.operator >=(Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>, Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>)
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).>=(Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType), Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType))
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.operator >=(ObjectBaseClass<TObjectType, TIDType>, ObjectBaseClass<TObjectType, TIDType>)
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).>=(ObjectBaseClass(Of TObjectType, TIDType), ObjectBaseClass(Of TObjectType, TIDType))
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.op_GreaterThanOrEqual*
  name: operator >=
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_op_GreaterThanOrEqual_
  commentId: Overload:Inflatable.BaseClasses.ObjectBaseClass`2.op_GreaterThanOrEqual
  isSpec: "True"
  name.vb: '>='
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.operator >=
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).>=
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.operator >=
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).>=
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.op_Inequality(Inflatable.BaseClasses.ObjectBaseClass{`0,`1},Inflatable.BaseClasses.ObjectBaseClass{`0,`1})
  name: operator !=(ObjectBaseClass<TObjectType, TIDType>, ObjectBaseClass<TObjectType, TIDType>)
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_op_Inequality_Inflatable_BaseClasses_ObjectBaseClass__0__1__Inflatable_BaseClasses_ObjectBaseClass__0__1__
  commentId: M:Inflatable.BaseClasses.ObjectBaseClass`2.op_Inequality(Inflatable.BaseClasses.ObjectBaseClass{`0,`1},Inflatable.BaseClasses.ObjectBaseClass{`0,`1})
  name.vb: <>(ObjectBaseClass(Of TObjectType, TIDType), ObjectBaseClass(Of TObjectType, TIDType))
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.operator !=(Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>, Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>)
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).<>(Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType), Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType))
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.operator !=(ObjectBaseClass<TObjectType, TIDType>, ObjectBaseClass<TObjectType, TIDType>)
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).<>(ObjectBaseClass(Of TObjectType, TIDType), ObjectBaseClass(Of TObjectType, TIDType))
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.op_Inequality*
  name: operator !=
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_op_Inequality_
  commentId: Overload:Inflatable.BaseClasses.ObjectBaseClass`2.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.operator !=
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).<>
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.operator !=
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).<>
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.op_LessThan(Inflatable.BaseClasses.ObjectBaseClass{`0,`1},Inflatable.BaseClasses.ObjectBaseClass{`0,`1})
  name: operator <(ObjectBaseClass<TObjectType, TIDType>, ObjectBaseClass<TObjectType, TIDType>)
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_op_LessThan_Inflatable_BaseClasses_ObjectBaseClass__0__1__Inflatable_BaseClasses_ObjectBaseClass__0__1__
  commentId: M:Inflatable.BaseClasses.ObjectBaseClass`2.op_LessThan(Inflatable.BaseClasses.ObjectBaseClass{`0,`1},Inflatable.BaseClasses.ObjectBaseClass{`0,`1})
  name.vb: <(ObjectBaseClass(Of TObjectType, TIDType), ObjectBaseClass(Of TObjectType, TIDType))
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.operator <(Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>, Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>)
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).<(Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType), Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType))
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.operator <(ObjectBaseClass<TObjectType, TIDType>, ObjectBaseClass<TObjectType, TIDType>)
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).<(ObjectBaseClass(Of TObjectType, TIDType), ObjectBaseClass(Of TObjectType, TIDType))
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.op_LessThan*
  name: operator <
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_op_LessThan_
  commentId: Overload:Inflatable.BaseClasses.ObjectBaseClass`2.op_LessThan
  isSpec: "True"
  name.vb: <
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.operator <
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).<
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.operator <
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).<
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.op_LessThanOrEqual(Inflatable.BaseClasses.ObjectBaseClass{`0,`1},Inflatable.BaseClasses.ObjectBaseClass{`0,`1})
  name: operator <=(ObjectBaseClass<TObjectType, TIDType>, ObjectBaseClass<TObjectType, TIDType>)
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_op_LessThanOrEqual_Inflatable_BaseClasses_ObjectBaseClass__0__1__Inflatable_BaseClasses_ObjectBaseClass__0__1__
  commentId: M:Inflatable.BaseClasses.ObjectBaseClass`2.op_LessThanOrEqual(Inflatable.BaseClasses.ObjectBaseClass{`0,`1},Inflatable.BaseClasses.ObjectBaseClass{`0,`1})
  name.vb: <=(ObjectBaseClass(Of TObjectType, TIDType), ObjectBaseClass(Of TObjectType, TIDType))
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.operator <=(Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>, Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>)
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).<=(Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType), Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType))
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.operator <=(ObjectBaseClass<TObjectType, TIDType>, ObjectBaseClass<TObjectType, TIDType>)
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).<=(ObjectBaseClass(Of TObjectType, TIDType), ObjectBaseClass(Of TObjectType, TIDType))
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.op_LessThanOrEqual*
  name: operator <=
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_op_LessThanOrEqual_
  commentId: Overload:Inflatable.BaseClasses.ObjectBaseClass`2.op_LessThanOrEqual
  isSpec: "True"
  name.vb: <=
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.operator <=
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).<=
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.operator <=
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).<=
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.SetupObject
  name: SetupObject()
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_SetupObject
  commentId: M:Inflatable.BaseClasses.ObjectBaseClass`2.SetupObject
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.SetupObject()
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).SetupObject()
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.SetupObject()
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).SetupObject()
- uid: Inflatable.BaseClasses.ObjectBaseClass`2.SetupObject*
  name: SetupObject
  href: api/Inflatable.BaseClasses.ObjectBaseClass-2.html#Inflatable_BaseClasses_ObjectBaseClass_2_SetupObject_
  commentId: Overload:Inflatable.BaseClasses.ObjectBaseClass`2.SetupObject
  isSpec: "True"
  fullName: Inflatable.BaseClasses.ObjectBaseClass<TObjectType, TIDType>.SetupObject
  fullName.vb: Inflatable.BaseClasses.ObjectBaseClass(Of TObjectType, TIDType).SetupObject
  nameWithType: ObjectBaseClass<TObjectType, TIDType>.SetupObject
  nameWithType.vb: ObjectBaseClass(Of TObjectType, TIDType).SetupObject
- uid: Inflatable.ClassMapper
  name: Inflatable.ClassMapper
  href: api/Inflatable.ClassMapper.html
  commentId: N:Inflatable.ClassMapper
  fullName: Inflatable.ClassMapper
  nameWithType: Inflatable.ClassMapper
- uid: Inflatable.ClassMapper.BaseClasses
  name: Inflatable.ClassMapper.BaseClasses
  href: api/Inflatable.ClassMapper.BaseClasses.html
  commentId: N:Inflatable.ClassMapper.BaseClasses
  fullName: Inflatable.ClassMapper.BaseClasses
  nameWithType: Inflatable.ClassMapper.BaseClasses
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3
  name: IDPropertyBase<TClassType, TDataType, TReturnType>
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html
  commentId: T:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3
  name.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType)
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType)
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType)
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},Inflatable.Interfaces.IMapping)
  name: IDPropertyBase(Expression<Func<TClassType, TDataType>>, IMapping)
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3__ctor_System_Linq_Expressions_Expression_System_Func__0__1___Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},Inflatable.Interfaces.IMapping)
  name.vb: New(Expression(Of Func(Of TClassType, TDataType)), IMapping)
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.IDPropertyBase(System.Linq.Expressions.Expression<System.Func<TClassType, TDataType>>, Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).New(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, TDataType)), Inflatable.Interfaces.IMapping)
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.IDPropertyBase(Expression<Func<TClassType, TDataType>>, IMapping)
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).New(Expression(Of Func(Of TClassType, TDataType)), IMapping)
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.#ctor*
  name: IDPropertyBase
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3__ctor_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.IDPropertyBase
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).New
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.IDPropertyBase
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).New
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.AddToChildTable(Data.Modeler.Providers.Interfaces.ITable)
  name: AddToChildTable(ITable)
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_AddToChildTable_Data_Modeler_Providers_Interfaces_ITable_
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.AddToChildTable(Data.Modeler.Providers.Interfaces.ITable)
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.AddToChildTable(Data.Modeler.Providers.Interfaces.ITable)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).AddToChildTable(Data.Modeler.Providers.Interfaces.ITable)
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.AddToChildTable(ITable)
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).AddToChildTable(ITable)
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.AddToChildTable*
  name: AddToChildTable
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_AddToChildTable_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.AddToChildTable
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.AddToChildTable
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).AddToChildTable
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.AddToChildTable
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).AddToChildTable
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  name: AddToTable(ITable)
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_AddToTable_Data_Modeler_Providers_Interfaces_ITable_
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.AddToTable(ITable)
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).AddToTable(ITable)
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.AddToTable*
  name: AddToTable
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_AddToTable_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.AddToTable
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.AddToTable
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).AddToTable
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.AddToTable
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).AddToTable
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.AutoIncrement
  name: AutoIncrement
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_AutoIncrement
  commentId: P:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.AutoIncrement
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.AutoIncrement
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).AutoIncrement
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.AutoIncrement
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).AutoIncrement
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.AutoIncrement*
  name: AutoIncrement
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_AutoIncrement_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.AutoIncrement
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.AutoIncrement
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).AutoIncrement
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.AutoIncrement
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).AutoIncrement
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ColumnName
  name: ColumnName
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_ColumnName
  commentId: P:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ColumnName
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.ColumnName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).ColumnName
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.ColumnName
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).ColumnName
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ColumnName*
  name: ColumnName
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_ColumnName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.ColumnName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).ColumnName
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.ColumnName
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).ColumnName
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Columns
  name: Columns
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Columns
  commentId: P:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Columns
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Columns
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Columns
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Columns
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Columns
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Columns*
  name: Columns
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Columns_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Columns
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Columns
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Columns
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Columns
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Columns
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.CompareTo(Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2})
  name: CompareTo(IDPropertyBase<TClassType, TDataType, TReturnType>?)
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_CompareTo_Inflatable_ClassMapper_BaseClasses_IDPropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.CompareTo(Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2})
  name.vb: CompareTo(IDPropertyBase(Of TClassType, TDataType, TReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.CompareTo(Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>?)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).CompareTo(Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.CompareTo(IDPropertyBase<TClassType, TDataType, TReturnType>?)
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).CompareTo(IDPropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.CompareTo(System.Object)
  name: CompareTo(object?)
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_CompareTo_System_Object_
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.CompareTo(System.Object)
  name.vb: CompareTo(Object)
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.CompareTo(object?)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).CompareTo(Object)
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.CompareTo(object?)
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).CompareTo(Object)
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.CompareTo*
  name: CompareTo
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_CompareTo_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.CompareTo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.CompareTo
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).CompareTo
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.CompareTo
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).CompareTo
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.CompiledExpression
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_CompiledExpression
  commentId: P:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.CompiledExpression
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.CompiledExpression*
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_CompiledExpression_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.CompiledExpression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ComputedColumnSpecification
  name: ComputedColumnSpecification
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_ComputedColumnSpecification
  commentId: P:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ComputedColumnSpecification
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.ComputedColumnSpecification
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).ComputedColumnSpecification
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.ComputedColumnSpecification
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).ComputedColumnSpecification
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ComputedColumnSpecification*
  name: ComputedColumnSpecification
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_ComputedColumnSpecification_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ComputedColumnSpecification
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.ComputedColumnSpecification
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).ComputedColumnSpecification
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.ComputedColumnSpecification
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).ComputedColumnSpecification
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Constraints
  name: Constraints
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Constraints
  commentId: P:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Constraints
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Constraints
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Constraints
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Constraints
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Constraints
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Constraints*
  name: Constraints
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Constraints_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Constraints
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Constraints
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Constraints
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Constraints
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Constraints
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Convert*
  name: Convert
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Convert_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Convert
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Convert
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Convert
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Convert
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Convert
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Convert``1(Inflatable.Interfaces.IMapping)
  name: Convert<TResult>(IMapping)
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Convert__1_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Convert``1(Inflatable.Interfaces.IMapping)
  name.vb: Convert(Of TResult)(IMapping)
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Convert<TResult>(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Convert(Of TResult)(Inflatable.Interfaces.IMapping)
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Convert<TResult>(IMapping)
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Convert(Of TResult)(IMapping)
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.DefaultValue
  name: DefaultValue
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_DefaultValue
  commentId: P:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.DefaultValue
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.DefaultValue
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).DefaultValue
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.DefaultValue
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).DefaultValue
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.DefaultValue*
  name: DefaultValue
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_DefaultValue_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.DefaultValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.DefaultValue
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).DefaultValue
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.DefaultValue
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).DefaultValue
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Equals(System.Object)
  name: Equals(object)
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Equals_System_Object_
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Equals(object)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Equals(Object)
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Equals(object)
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Equals(Object)
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Equals*
  name: Equals
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Equals_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Equals
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Equals
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Equals
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Equals
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Equals
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Expression
  name: Expression
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Expression
  commentId: P:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Expression
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Expression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Expression
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Expression
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Expression
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Expression*
  name: Expression
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Expression_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Expression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Expression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Expression
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Expression
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Expression
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.GetColumnInfo
  name: GetColumnInfo()
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_GetColumnInfo
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.GetColumnInfo
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo()
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo()
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo()
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.GetColumnInfo*
  name: GetColumnInfo
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_GetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.GetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.GetHashCode
  name: GetHashCode()
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_GetHashCode
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.GetHashCode
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.GetHashCode()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode()
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.GetHashCode()
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode()
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.GetHashCode*
  name: GetHashCode
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_GetHashCode_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.GetHashCode
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.GetHashCode
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.GetHashCode
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Index
  name: Index
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Index
  commentId: P:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Index
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Index
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Index
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Index
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Index
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Index*
  name: Index
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Index_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Index
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Index
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Index
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Index
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Index
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.InternalFieldName
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_InternalFieldName
  commentId: P:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.InternalFieldName
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.InternalFieldName*
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_InternalFieldName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.InternalFieldName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.IsAutoIncremented
  name: IsAutoIncremented()
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_IsAutoIncremented
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.IsAutoIncremented
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.IsAutoIncremented()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).IsAutoIncremented()
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.IsAutoIncremented()
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).IsAutoIncremented()
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.IsAutoIncremented*
  name: IsAutoIncremented
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_IsAutoIncremented_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.IsAutoIncremented
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.IsAutoIncremented
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).IsAutoIncremented
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.IsAutoIncremented
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).IsAutoIncremented
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.IsIndexed
  name: IsIndexed()
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_IsIndexed
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.IsIndexed
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.IsIndexed()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).IsIndexed()
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.IsIndexed()
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).IsIndexed()
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.IsIndexed*
  name: IsIndexed
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_IsIndexed_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.IsIndexed
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.IsIndexed
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).IsIndexed
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.IsIndexed
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).IsIndexed
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.IsReadOnly
  name: IsReadOnly()
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_IsReadOnly
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.IsReadOnly
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.IsReadOnly()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).IsReadOnly()
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.IsReadOnly()
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).IsReadOnly()
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.IsReadOnly*
  name: IsReadOnly
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_IsReadOnly_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.IsReadOnly
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.IsReadOnly
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).IsReadOnly
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.IsReadOnly
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).IsReadOnly
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.IsUnique
  name: IsUnique()
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_IsUnique
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.IsUnique
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.IsUnique()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).IsUnique()
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.IsUnique()
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).IsUnique()
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.IsUnique*
  name: IsUnique
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_IsUnique_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.IsUnique
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.IsUnique
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).IsUnique
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.IsUnique
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).IsUnique
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.MaxLength
  name: MaxLength
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_MaxLength
  commentId: P:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.MaxLength
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.MaxLength
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).MaxLength
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.MaxLength
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).MaxLength
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.MaxLength*
  name: MaxLength
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_MaxLength_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.MaxLength
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.MaxLength
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).MaxLength
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.MaxLength
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).MaxLength
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Name
  name: Name
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Name
  commentId: P:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Name
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Name
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Name
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Name
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Name
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Name*
  name: Name
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Name_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Name
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Name
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Name
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Name
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Name
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Nullable
  name: Nullable
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Nullable
  commentId: P:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Nullable
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Nullable
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Nullable
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Nullable
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Nullable
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Nullable*
  name: Nullable
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Nullable_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Nullable
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Nullable
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Nullable
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Nullable
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Nullable
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_Equality(Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2})
  name: operator ==(IDPropertyBase<TClassType, TDataType, TReturnType>, IDPropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_op_Equality_Inflatable_ClassMapper_BaseClasses_IDPropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_IDPropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_Equality(Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2})
  name.vb: =(IDPropertyBase(Of TClassType, TDataType, TReturnType), IDPropertyBase(Of TClassType, TDataType, TReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.operator ==(Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).=(Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.operator ==(IDPropertyBase<TClassType, TDataType, TReturnType>, IDPropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).=(IDPropertyBase(Of TClassType, TDataType, TReturnType), IDPropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_Equality*
  name: operator ==
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_op_Equality_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.operator ==
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).=
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.operator ==
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).=
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_GreaterThan(Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2})
  name: operator >(IDPropertyBase<TClassType, TDataType, TReturnType>, IDPropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_op_GreaterThan_Inflatable_ClassMapper_BaseClasses_IDPropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_IDPropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_GreaterThan(Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2})
  name.vb: '>(IDPropertyBase(Of TClassType, TDataType, TReturnType), IDPropertyBase(Of TClassType, TDataType, TReturnType))'
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.operator >(Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).>(Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.operator >(IDPropertyBase<TClassType, TDataType, TReturnType>, IDPropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).>(IDPropertyBase(Of TClassType, TDataType, TReturnType), IDPropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_GreaterThan*
  name: operator >
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_op_GreaterThan_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_GreaterThan
  isSpec: "True"
  name.vb: '>'
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.operator >
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).>
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.operator >
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).>
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_GreaterThanOrEqual(Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2})
  name: operator >=(IDPropertyBase<TClassType, TDataType, TReturnType>, IDPropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_op_GreaterThanOrEqual_Inflatable_ClassMapper_BaseClasses_IDPropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_IDPropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_GreaterThanOrEqual(Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2})
  name.vb: '>=(IDPropertyBase(Of TClassType, TDataType, TReturnType), IDPropertyBase(Of TClassType, TDataType, TReturnType))'
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.operator >=(Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).>=(Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.operator >=(IDPropertyBase<TClassType, TDataType, TReturnType>, IDPropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).>=(IDPropertyBase(Of TClassType, TDataType, TReturnType), IDPropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_GreaterThanOrEqual*
  name: operator >=
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_op_GreaterThanOrEqual_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_GreaterThanOrEqual
  isSpec: "True"
  name.vb: '>='
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.operator >=
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).>=
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.operator >=
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).>=
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_Inequality(Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2})
  name: operator !=(IDPropertyBase<TClassType, TDataType, TReturnType>, IDPropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_op_Inequality_Inflatable_ClassMapper_BaseClasses_IDPropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_IDPropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_Inequality(Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2})
  name.vb: <>(IDPropertyBase(Of TClassType, TDataType, TReturnType), IDPropertyBase(Of TClassType, TDataType, TReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.operator !=(Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).<>(Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.operator !=(IDPropertyBase<TClassType, TDataType, TReturnType>, IDPropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).<>(IDPropertyBase(Of TClassType, TDataType, TReturnType), IDPropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_Inequality*
  name: operator !=
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_op_Inequality_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.operator !=
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).<>
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.operator !=
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).<>
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_LessThan(Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2})
  name: operator <(IDPropertyBase<TClassType, TDataType, TReturnType>, IDPropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_op_LessThan_Inflatable_ClassMapper_BaseClasses_IDPropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_IDPropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_LessThan(Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2})
  name.vb: <(IDPropertyBase(Of TClassType, TDataType, TReturnType), IDPropertyBase(Of TClassType, TDataType, TReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.operator <(Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).<(Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.operator <(IDPropertyBase<TClassType, TDataType, TReturnType>, IDPropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).<(IDPropertyBase(Of TClassType, TDataType, TReturnType), IDPropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_LessThan*
  name: operator <
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_op_LessThan_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_LessThan
  isSpec: "True"
  name.vb: <
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.operator <
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).<
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.operator <
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).<
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_LessThanOrEqual(Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2})
  name: operator <=(IDPropertyBase<TClassType, TDataType, TReturnType>, IDPropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_op_LessThanOrEqual_Inflatable_ClassMapper_BaseClasses_IDPropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_IDPropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_LessThanOrEqual(Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.IDPropertyBase{`0,`1,`2})
  name.vb: <=(IDPropertyBase(Of TClassType, TDataType, TReturnType), IDPropertyBase(Of TClassType, TDataType, TReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.operator <=(Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).<=(Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.operator <=(IDPropertyBase<TClassType, TDataType, TReturnType>, IDPropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).<=(IDPropertyBase(Of TClassType, TDataType, TReturnType), IDPropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_LessThanOrEqual*
  name: operator <=
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_op_LessThanOrEqual_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.op_LessThanOrEqual
  isSpec: "True"
  name.vb: <=
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.operator <=
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).<=
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.operator <=
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).<=
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ParentMapping
  name: ParentMapping
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_ParentMapping
  commentId: P:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ParentMapping
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ParentMapping*
  name: ParentMapping
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_ParentMapping_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ParentMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.PropertyType
  name: PropertyType
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_PropertyType
  commentId: P:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.PropertyType
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.PropertyType*
  name: PropertyType
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_PropertyType_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.PropertyType
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ReadOnly
  name: ReadOnly
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_ReadOnly
  commentId: P:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ReadOnly
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.ReadOnly
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).ReadOnly
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.ReadOnly
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).ReadOnly
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ReadOnly*
  name: ReadOnly
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_ReadOnly_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ReadOnly
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.ReadOnly
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).ReadOnly
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.ReadOnly
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).ReadOnly
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.SetAction
  name: SetAction
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_SetAction
  commentId: P:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.SetAction
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.SetAction
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).SetAction
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.SetAction
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).SetAction
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.SetAction*
  name: SetAction
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_SetAction_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.SetAction
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.SetAction
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).SetAction
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.SetAction
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).SetAction
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  name: SetColumnInfo(IMappingSource?)
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_SetColumnInfo_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  name.vb: SetColumnInfo(IMappingSource)
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo(Inflatable.ClassMapper.IMappingSource?)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo(IMappingSource?)
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo(IMappingSource)
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.SetColumnInfo*
  name: SetColumnInfo
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_SetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.SetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Setup
  name: Setup()
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Setup
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Setup
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Setup()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Setup()
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Setup()
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Setup()
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Setup*
  name: Setup
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Setup_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Setup
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Setup
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Setup
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Setup
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Setup
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ToString
  name: ToString()
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_ToString
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ToString
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.ToString()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).ToString()
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.ToString()
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).ToString()
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ToString*
  name: ToString
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_ToString_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.ToString
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.ToString
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).ToString
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.ToString
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).ToString
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.TypeName
  name: TypeName
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_TypeName
  commentId: P:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.TypeName
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.TypeName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).TypeName
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.TypeName
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).TypeName
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.TypeName*
  name: TypeName
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_TypeName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.TypeName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.TypeName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).TypeName
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.TypeName
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).TypeName
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Unique
  name: Unique
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Unique
  commentId: P:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Unique
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Unique
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Unique
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Unique
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Unique
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Unique*
  name: Unique
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_Unique_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.Unique
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.Unique
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).Unique
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.Unique
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).Unique
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithColumnName(System.String)
  name: WithColumnName(string)
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_WithColumnName_System_String_
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithColumnName(System.String)
  name.vb: WithColumnName(String)
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.WithColumnName(string)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).WithColumnName(String)
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.WithColumnName(string)
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).WithColumnName(String)
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithColumnName*
  name: WithColumnName
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_WithColumnName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.WithColumnName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).WithColumnName
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.WithColumnName
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).WithColumnName
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithComputedColumnSpecification(System.String)
  name: WithComputedColumnSpecification(string)
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_WithComputedColumnSpecification_System_String_
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithComputedColumnSpecification(System.String)
  name.vb: WithComputedColumnSpecification(String)
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.WithComputedColumnSpecification(string)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).WithComputedColumnSpecification(String)
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.WithComputedColumnSpecification(string)
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).WithComputedColumnSpecification(String)
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithComputedColumnSpecification*
  name: WithComputedColumnSpecification
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_WithComputedColumnSpecification_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithComputedColumnSpecification
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.WithComputedColumnSpecification
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).WithComputedColumnSpecification
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.WithComputedColumnSpecification
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).WithComputedColumnSpecification
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithConstraint(System.String)
  name: WithConstraint(string)
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_WithConstraint_System_String_
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithConstraint(System.String)
  name.vb: WithConstraint(String)
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.WithConstraint(string)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).WithConstraint(String)
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.WithConstraint(string)
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).WithConstraint(String)
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithConstraint*
  name: WithConstraint
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_WithConstraint_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithConstraint
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.WithConstraint
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).WithConstraint
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.WithConstraint
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).WithConstraint
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithDefaultValue(System.Func{`1})
  name: WithDefaultValue(Func<TDataType>)
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_WithDefaultValue_System_Func__1__
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithDefaultValue(System.Func{`1})
  name.vb: WithDefaultValue(Func(Of TDataType))
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.WithDefaultValue(System.Func<TDataType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).WithDefaultValue(System.Func(Of TDataType))
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.WithDefaultValue(Func<TDataType>)
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).WithDefaultValue(Func(Of TDataType))
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithDefaultValue*
  name: WithDefaultValue
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_WithDefaultValue_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithDefaultValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.WithDefaultValue
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).WithDefaultValue
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.WithDefaultValue
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).WithDefaultValue
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithMaxLength
  name: WithMaxLength()
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_WithMaxLength
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithMaxLength
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.WithMaxLength()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).WithMaxLength()
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.WithMaxLength()
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).WithMaxLength()
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithMaxLength(System.Int32)
  name: WithMaxLength(int)
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_WithMaxLength_System_Int32_
  commentId: M:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithMaxLength(System.Int32)
  name.vb: WithMaxLength(Integer)
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.WithMaxLength(int)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).WithMaxLength(Integer)
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.WithMaxLength(int)
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).WithMaxLength(Integer)
- uid: Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithMaxLength*
  name: WithMaxLength
  href: api/Inflatable.ClassMapper.BaseClasses.IDPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_IDPropertyBase_3_WithMaxLength_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.IDPropertyBase`3.WithMaxLength
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.IDPropertyBase<TClassType, TDataType, TReturnType>.WithMaxLength
  fullName.vb: Inflatable.ClassMapper.BaseClasses.IDPropertyBase(Of TClassType, TDataType, TReturnType).WithMaxLength
  nameWithType: IDPropertyBase<TClassType, TDataType, TReturnType>.WithMaxLength
  nameWithType.vb: IDPropertyBase(Of TClassType, TDataType, TReturnType).WithMaxLength
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3
  name: ManyClassPropertyBase<TClassType, TDataType, TReturnType>
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html
  commentId: T:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3
  name.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType)
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType)
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{`1}}},Inflatable.Interfaces.IMapping)
  name: ManyClassPropertyBase(Expression<Func<TClassType, IList<TDataType>>>, IMapping)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3__ctor_System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_IList__1____Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{`1}}},Inflatable.Interfaces.IMapping)
  name.vb: New(Expression(Of Func(Of TClassType, IList(Of TDataType))), IMapping)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.ManyClassPropertyBase(System.Linq.Expressions.Expression<System.Func<TClassType, System.Collections.Generic.IList<TDataType>>>, Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).New(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, System.Collections.Generic.IList(Of TDataType))), Inflatable.Interfaces.IMapping)
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.ManyClassPropertyBase(Expression<Func<TClassType, IList<TDataType>>>, IMapping)
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).New(Expression(Of Func(Of TClassType, IList(Of TDataType))), IMapping)
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.#ctor*
  name: ManyClassPropertyBase
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3__ctor_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.ManyClassPropertyBase
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).New
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.ManyClassPropertyBase
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).New
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Cascade
  name: Cascade
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_Cascade
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Cascade
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Cascade
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Cascade
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Cascade
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Cascade
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Cascade*
  name: Cascade
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_Cascade_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Cascade
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Cascade
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Cascade
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Cascade
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Cascade
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.CascadeChanges
  name: CascadeChanges()
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_CascadeChanges
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.CascadeChanges
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.CascadeChanges()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).CascadeChanges()
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.CascadeChanges()
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).CascadeChanges()
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.CascadeChanges*
  name: CascadeChanges
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_CascadeChanges_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.CascadeChanges
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.CascadeChanges
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).CascadeChanges
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.CascadeChanges
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).CascadeChanges
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Columns
  name: Columns
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_Columns
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Columns
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Columns
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Columns
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Columns
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Columns
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Columns*
  name: Columns
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_Columns_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Columns
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Columns
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Columns
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Columns
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Columns
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.CompiledExpression
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_CompiledExpression
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.CompiledExpression
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.CompiledExpression*
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_CompiledExpression_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.CompiledExpression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Convert*
  name: Convert
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_Convert_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Convert
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Convert
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Convert
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Convert
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Convert
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Convert``1(Inflatable.Interfaces.IMapping)
  name: Convert<TResult>(IMapping)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_Convert__1_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Convert``1(Inflatable.Interfaces.IMapping)
  name.vb: Convert(Of TResult)(IMapping)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Convert<TResult>(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Convert(Of TResult)(Inflatable.Interfaces.IMapping)
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Convert<TResult>(IMapping)
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Convert(Of TResult)(IMapping)
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.DatabaseJoinsCascade
  name: DatabaseJoinsCascade
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_DatabaseJoinsCascade
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.DatabaseJoinsCascade
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.DatabaseJoinsCascade
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).DatabaseJoinsCascade
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.DatabaseJoinsCascade
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).DatabaseJoinsCascade
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.DatabaseJoinsCascade*
  name: DatabaseJoinsCascade
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_DatabaseJoinsCascade_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.DatabaseJoinsCascade
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.DatabaseJoinsCascade
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).DatabaseJoinsCascade
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.DatabaseJoinsCascade
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).DatabaseJoinsCascade
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Equals(System.Object)
  name: Equals(object)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_Equals_System_Object_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Equals(object)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Equals(Object)
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Equals(object)
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Equals(Object)
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Equals*
  name: Equals
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_Equals_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Equals
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Equals
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Equals
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Equals
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Equals
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Expression
  name: Expression
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_Expression
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Expression
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Expression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Expression
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Expression
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Expression
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Expression*
  name: Expression
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_Expression_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Expression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Expression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Expression
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Expression
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Expression
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.ForeignMapping
  name: ForeignMapping
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_ForeignMapping
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.ForeignMapping
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.ForeignMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).ForeignMapping
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.ForeignMapping
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).ForeignMapping
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.ForeignMapping*
  name: ForeignMapping
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_ForeignMapping_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.ForeignMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.ForeignMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).ForeignMapping
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.ForeignMapping
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).ForeignMapping
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.GetColumnInfo
  name: GetColumnInfo()
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_GetColumnInfo
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.GetColumnInfo
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo()
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo()
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo()
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.GetColumnInfo*
  name: GetColumnInfo
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_GetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.GetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.GetHashCode
  name: GetHashCode()
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_GetHashCode
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.GetHashCode
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.GetHashCode()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode()
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.GetHashCode()
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode()
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.GetHashCode*
  name: GetHashCode
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_GetHashCode_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.GetHashCode
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.GetHashCode
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.GetHashCode
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.GetValue(System.Object)
  name: GetValue(object)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_GetValue_System_Object_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.GetValue(System.Object)
  name.vb: GetValue(Object)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.GetValue(object)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).GetValue(Object)
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.GetValue(object)
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).GetValue(Object)
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.GetValue*
  name: GetValue
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_GetValue_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.GetValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.GetValue
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).GetValue
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.GetValue
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).GetValue
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.InternalFieldName
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_InternalFieldName
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.InternalFieldName
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.InternalFieldName*
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_InternalFieldName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.InternalFieldName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.LoadPropertyQuery
  name: LoadPropertyQuery
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_LoadPropertyQuery
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.LoadPropertyQuery
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.LoadPropertyQuery
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).LoadPropertyQuery
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.LoadPropertyQuery
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).LoadPropertyQuery
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.LoadPropertyQuery*
  name: LoadPropertyQuery
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_LoadPropertyQuery_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.LoadPropertyQuery
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.LoadPropertyQuery
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).LoadPropertyQuery
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.LoadPropertyQuery
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).LoadPropertyQuery
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.LoadUsing(System.String,System.Data.CommandType)
  name: LoadUsing(string, CommandType)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_LoadUsing_System_String_System_Data_CommandType_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.LoadUsing(System.String,System.Data.CommandType)
  name.vb: LoadUsing(String, CommandType)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.LoadUsing(string, System.Data.CommandType)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).LoadUsing(String, System.Data.CommandType)
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.LoadUsing(string, CommandType)
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).LoadUsing(String, CommandType)
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.LoadUsing*
  name: LoadUsing
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_LoadUsing_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.LoadUsing
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.LoadUsing
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).LoadUsing
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.LoadUsing
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).LoadUsing
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Name
  name: Name
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_Name
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Name
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Name
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Name
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Name
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Name
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Name*
  name: Name
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_Name_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Name
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Name
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Name
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Name
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Name
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.OnDeleteDoNothing
  name: OnDeleteDoNothing()
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_OnDeleteDoNothing
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.OnDeleteDoNothing
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothing()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing()
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothing()
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing()
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.OnDeleteDoNothing*
  name: OnDeleteDoNothing
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_OnDeleteDoNothing_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.OnDeleteDoNothing
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothing
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothing
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.OnDeleteDoNothingValue
  name: OnDeleteDoNothingValue
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_OnDeleteDoNothingValue
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.OnDeleteDoNothingValue
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothingValue
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothingValue
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothingValue
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothingValue
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.OnDeleteDoNothingValue*
  name: OnDeleteDoNothingValue
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_OnDeleteDoNothingValue_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.OnDeleteDoNothingValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothingValue
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothingValue
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothingValue
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothingValue
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.op_Equality(Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase{`0,`1,`2})
  name: operator ==(ManyClassPropertyBase<TClassType, TDataType, TReturnType>, ManyClassPropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_op_Equality_Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.op_Equality(Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase{`0,`1,`2})
  name.vb: =(ManyClassPropertyBase(Of TClassType, TDataType, TReturnType), ManyClassPropertyBase(Of TClassType, TDataType, TReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.operator ==(Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).=(Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.operator ==(ManyClassPropertyBase<TClassType, TDataType, TReturnType>, ManyClassPropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).=(ManyClassPropertyBase(Of TClassType, TDataType, TReturnType), ManyClassPropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.op_Equality*
  name: operator ==
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_op_Equality_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.operator ==
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).=
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.operator ==
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).=
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.op_GreaterThan(Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase{`0,`1,`2})
  name: operator >(ManyClassPropertyBase<TClassType, TDataType, TReturnType>, ManyClassPropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_op_GreaterThan_Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.op_GreaterThan(Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase{`0,`1,`2})
  name.vb: '>(ManyClassPropertyBase(Of TClassType, TDataType, TReturnType), ManyClassPropertyBase(Of TClassType, TDataType, TReturnType))'
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.operator >(Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).>(Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.operator >(ManyClassPropertyBase<TClassType, TDataType, TReturnType>, ManyClassPropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).>(ManyClassPropertyBase(Of TClassType, TDataType, TReturnType), ManyClassPropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.op_GreaterThan*
  name: operator >
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_op_GreaterThan_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.op_GreaterThan
  isSpec: "True"
  name.vb: '>'
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.operator >
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).>
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.operator >
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).>
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.op_Inequality(Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase{`0,`1,`2})
  name: operator !=(ManyClassPropertyBase<TClassType, TDataType, TReturnType>, ManyClassPropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_op_Inequality_Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.op_Inequality(Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase{`0,`1,`2})
  name.vb: <>(ManyClassPropertyBase(Of TClassType, TDataType, TReturnType), ManyClassPropertyBase(Of TClassType, TDataType, TReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.operator !=(Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).<>(Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.operator !=(ManyClassPropertyBase<TClassType, TDataType, TReturnType>, ManyClassPropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).<>(ManyClassPropertyBase(Of TClassType, TDataType, TReturnType), ManyClassPropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.op_Inequality*
  name: operator !=
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_op_Inequality_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.operator !=
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).<>
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.operator !=
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).<>
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.op_LessThan(Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase{`0,`1,`2})
  name: operator <(ManyClassPropertyBase<TClassType, TDataType, TReturnType>, ManyClassPropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_op_LessThan_Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.op_LessThan(Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase{`0,`1,`2})
  name.vb: <(ManyClassPropertyBase(Of TClassType, TDataType, TReturnType), ManyClassPropertyBase(Of TClassType, TDataType, TReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.operator <(Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).<(Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.operator <(ManyClassPropertyBase<TClassType, TDataType, TReturnType>, ManyClassPropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).<(ManyClassPropertyBase(Of TClassType, TDataType, TReturnType), ManyClassPropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.op_LessThan*
  name: operator <
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_op_LessThan_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.op_LessThan
  isSpec: "True"
  name.vb: <
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.operator <
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).<
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.operator <
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).<
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.ParentMapping
  name: ParentMapping
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_ParentMapping
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.ParentMapping
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.ParentMapping*
  name: ParentMapping
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_ParentMapping_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.ParentMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.PropertyType
  name: PropertyType
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_PropertyType
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.PropertyType
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.PropertyType*
  name: PropertyType
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_PropertyType_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.PropertyType
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  name: SetColumnInfo(IMappingSource)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_SetColumnInfo_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo(IMappingSource)
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo(IMappingSource)
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.SetColumnInfo*
  name: SetColumnInfo
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_SetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.SetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.SetTableName(System.String)
  name: SetTableName(string)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_SetTableName_System_String_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.SetTableName(System.String)
  name.vb: SetTableName(String)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.SetTableName(string)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).SetTableName(String)
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.SetTableName(string)
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).SetTableName(String)
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.SetTableName*
  name: SetTableName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_SetTableName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.SetTableName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.SetTableName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).SetTableName
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.SetTableName
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).SetTableName
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Setup(Inflatable.ClassMapper.IMappingSource,Data.Modeler.Providers.Interfaces.ISource)
  name: Setup(IMappingSource, ISource)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_Setup_Inflatable_ClassMapper_IMappingSource_Data_Modeler_Providers_Interfaces_ISource_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Setup(Inflatable.ClassMapper.IMappingSource,Data.Modeler.Providers.Interfaces.ISource)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Setup(Inflatable.ClassMapper.IMappingSource, Data.Modeler.Providers.Interfaces.ISource)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Setup(Inflatable.ClassMapper.IMappingSource, Data.Modeler.Providers.Interfaces.ISource)
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Setup(IMappingSource, ISource)
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Setup(IMappingSource, ISource)
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Setup*
  name: Setup
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_Setup_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Setup
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Setup
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Setup
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Setup
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Setup
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Similar(Inflatable.ClassMapper.Interfaces.IManyToManyProperty)
  name: Similar(IManyToManyProperty)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_Similar_Inflatable_ClassMapper_Interfaces_IManyToManyProperty_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Similar(Inflatable.ClassMapper.Interfaces.IManyToManyProperty)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Similar(Inflatable.ClassMapper.Interfaces.IManyToManyProperty)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Similar(Inflatable.ClassMapper.Interfaces.IManyToManyProperty)
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Similar(IManyToManyProperty)
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Similar(IManyToManyProperty)
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Similar*
  name: Similar
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_Similar_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.Similar
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Similar
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Similar
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.Similar
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).Similar
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.TableName
  name: TableName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_TableName
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.TableName
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.TableName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).TableName
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.TableName
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).TableName
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.TableName*
  name: TableName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_TableName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.TableName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.TableName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).TableName
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.TableName
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).TableName
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.ToString
  name: ToString()
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_ToString
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.ToString
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.ToString()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).ToString()
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.ToString()
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).ToString()
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.ToString*
  name: ToString
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_ToString_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.ToString
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.ToString
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).ToString
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.ToString
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).ToString
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.TypeName
  name: TypeName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_TypeName
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.TypeName
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.TypeName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).TypeName
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.TypeName
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).TypeName
- uid: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.TypeName*
  name: TypeName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyClassPropertyBase_3_TypeName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase`3.TypeName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase<TClassType, TDataType, TReturnType>.TypeName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).TypeName
  nameWithType: ManyClassPropertyBase<TClassType, TDataType, TReturnType>.TypeName
  nameWithType.vb: ManyClassPropertyBase(Of TClassType, TDataType, TReturnType).TypeName
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3
  name: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html
  commentId: T:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3
  name.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType)
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{`1}}},Inflatable.Interfaces.IMapping)
  name: ManyToOneManyPropertyBase(Expression<Func<TClassType, IList<TDataType>>>, IMapping)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3__ctor_System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_IList__1____Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{`1}}},Inflatable.Interfaces.IMapping)
  name.vb: New(Expression(Of Func(Of TClassType, IList(Of TDataType))), IMapping)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ManyToOneManyPropertyBase(System.Linq.Expressions.Expression<System.Func<TClassType, System.Collections.Generic.IList<TDataType>>>, Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).New(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, System.Collections.Generic.IList(Of TDataType))), Inflatable.Interfaces.IMapping)
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ManyToOneManyPropertyBase(Expression<Func<TClassType, IList<TDataType>>>, IMapping)
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).New(Expression(Of Func(Of TClassType, IList(Of TDataType))), IMapping)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.#ctor*
  name: ManyToOneManyPropertyBase
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3__ctor_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ManyToOneManyPropertyBase
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).New
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ManyToOneManyPropertyBase
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).New
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Cascade
  name: Cascade
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_Cascade
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Cascade
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Cascade
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Cascade
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Cascade
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Cascade
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Cascade*
  name: Cascade
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_Cascade_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Cascade
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Cascade
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Cascade
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Cascade
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Cascade
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.CascadeChanges
  name: CascadeChanges()
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_CascadeChanges
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.CascadeChanges
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.CascadeChanges()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).CascadeChanges()
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.CascadeChanges()
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).CascadeChanges()
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.CascadeChanges*
  name: CascadeChanges
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_CascadeChanges_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.CascadeChanges
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.CascadeChanges
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).CascadeChanges
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.CascadeChanges
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).CascadeChanges
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.ColumnName
  name: ColumnName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_ColumnName
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.ColumnName
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ColumnName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).ColumnName
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ColumnName
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).ColumnName
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.ColumnName*
  name: ColumnName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_ColumnName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.ColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ColumnName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).ColumnName
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ColumnName
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).ColumnName
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Columns
  name: Columns
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_Columns
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Columns
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Columns
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Columns
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Columns
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Columns
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Columns*
  name: Columns
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_Columns_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Columns
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Columns
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Columns
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Columns
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Columns
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.CompiledExpression
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_CompiledExpression
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.CompiledExpression
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.CompiledExpression*
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_CompiledExpression_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.CompiledExpression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Convert*
  name: Convert
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_Convert_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Convert
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Convert
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Convert
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Convert
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Convert
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Convert``1(Inflatable.Interfaces.IMapping)
  name: Convert<TResult>(IMapping)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_Convert__1_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Convert``1(Inflatable.Interfaces.IMapping)
  name.vb: Convert(Of TResult)(IMapping)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Convert<TResult>(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Convert(Of TResult)(Inflatable.Interfaces.IMapping)
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Convert<TResult>(IMapping)
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Convert(Of TResult)(IMapping)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Equals(System.Object)
  name: Equals(object)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_Equals_System_Object_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Equals(object)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Equals(Object)
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Equals(object)
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Equals(Object)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Equals*
  name: Equals
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_Equals_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Equals
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Equals
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Equals
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Equals
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Equals
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Expression
  name: Expression
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_Expression
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Expression
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Expression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Expression
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Expression
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Expression
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Expression*
  name: Expression
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_Expression_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Expression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Expression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Expression
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Expression
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Expression
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.ForeignMapping
  name: ForeignMapping
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_ForeignMapping
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.ForeignMapping
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ForeignMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).ForeignMapping
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ForeignMapping
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).ForeignMapping
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.ForeignMapping*
  name: ForeignMapping
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_ForeignMapping_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.ForeignMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ForeignMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).ForeignMapping
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ForeignMapping
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).ForeignMapping
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.GetColumnInfo
  name: GetColumnInfo()
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_GetColumnInfo
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.GetColumnInfo
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo()
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo()
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo()
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.GetColumnInfo*
  name: GetColumnInfo
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_GetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.GetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.GetHashCode
  name: GetHashCode()
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_GetHashCode
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.GetHashCode
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.GetHashCode()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode()
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.GetHashCode()
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode()
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.GetHashCode*
  name: GetHashCode
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_GetHashCode_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.GetHashCode
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.GetHashCode
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.GetHashCode
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.GetValue(System.Object)
  name: GetValue(object)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_GetValue_System_Object_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.GetValue(System.Object)
  name.vb: GetValue(Object)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.GetValue(object)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).GetValue(Object)
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.GetValue(object)
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).GetValue(Object)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.GetValue*
  name: GetValue
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_GetValue_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.GetValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.GetValue
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).GetValue
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.GetValue
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).GetValue
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.InternalFieldName
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_InternalFieldName
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.InternalFieldName
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.InternalFieldName*
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_InternalFieldName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.InternalFieldName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.LoadPropertyQuery
  name: LoadPropertyQuery
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_LoadPropertyQuery
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.LoadPropertyQuery
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.LoadPropertyQuery
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).LoadPropertyQuery
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.LoadPropertyQuery
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).LoadPropertyQuery
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.LoadPropertyQuery*
  name: LoadPropertyQuery
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_LoadPropertyQuery_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.LoadPropertyQuery
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.LoadPropertyQuery
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).LoadPropertyQuery
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.LoadPropertyQuery
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).LoadPropertyQuery
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.LoadUsing(System.String,System.Data.CommandType)
  name: LoadUsing(string, CommandType)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_LoadUsing_System_String_System_Data_CommandType_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.LoadUsing(System.String,System.Data.CommandType)
  name.vb: LoadUsing(String, CommandType)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.LoadUsing(string, System.Data.CommandType)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).LoadUsing(String, System.Data.CommandType)
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.LoadUsing(string, CommandType)
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).LoadUsing(String, CommandType)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.LoadUsing*
  name: LoadUsing
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_LoadUsing_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.LoadUsing
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.LoadUsing
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).LoadUsing
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.LoadUsing
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).LoadUsing
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Name
  name: Name
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_Name
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Name
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Name
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Name
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Name
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Name
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Name*
  name: Name
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_Name_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Name
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Name
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Name
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Name
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Name
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.OnDeleteDoNothing
  name: OnDeleteDoNothing()
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_OnDeleteDoNothing
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.OnDeleteDoNothing
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothing()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing()
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothing()
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing()
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.OnDeleteDoNothing*
  name: OnDeleteDoNothing
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_OnDeleteDoNothing_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.OnDeleteDoNothing
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothing
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothing
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.OnDeleteDoNothingValue
  name: OnDeleteDoNothingValue
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_OnDeleteDoNothingValue
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.OnDeleteDoNothingValue
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothingValue
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothingValue
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothingValue
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothingValue
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.OnDeleteDoNothingValue*
  name: OnDeleteDoNothingValue
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_OnDeleteDoNothingValue_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.OnDeleteDoNothingValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothingValue
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothingValue
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothingValue
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothingValue
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.op_Equality(Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase{`0,`1,`2})
  name: operator ==(ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>, ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_op_Equality_Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.op_Equality(Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase{`0,`1,`2})
  name.vb: =(ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType), ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.operator ==(Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).=(Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.operator ==(ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>, ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).=(ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType), ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.op_Equality*
  name: operator ==
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_op_Equality_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.operator ==
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).=
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.operator ==
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).=
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.op_GreaterThan(Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase{`0,`1,`2})
  name: operator >(ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>, ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_op_GreaterThan_Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.op_GreaterThan(Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase{`0,`1,`2})
  name.vb: '>(ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType), ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType))'
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.operator >(Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).>(Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.operator >(ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>, ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).>(ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType), ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.op_GreaterThan*
  name: operator >
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_op_GreaterThan_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.op_GreaterThan
  isSpec: "True"
  name.vb: '>'
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.operator >
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).>
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.operator >
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).>
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.op_Inequality(Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase{`0,`1,`2})
  name: operator !=(ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>, ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_op_Inequality_Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.op_Inequality(Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase{`0,`1,`2})
  name.vb: <>(ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType), ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.operator !=(Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).<>(Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.operator !=(ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>, ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).<>(ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType), ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.op_Inequality*
  name: operator !=
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_op_Inequality_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.operator !=
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).<>
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.operator !=
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).<>
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.op_LessThan(Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase{`0,`1,`2})
  name: operator <(ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>, ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_op_LessThan_Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.op_LessThan(Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase{`0,`1,`2})
  name.vb: <(ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType), ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.operator <(Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).<(Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.operator <(ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>, ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).<(ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType), ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.op_LessThan*
  name: operator <
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_op_LessThan_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.op_LessThan
  isSpec: "True"
  name.vb: <
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.operator <
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).<
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.operator <
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).<
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.ParentMapping
  name: ParentMapping
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_ParentMapping
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.ParentMapping
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.ParentMapping*
  name: ParentMapping
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_ParentMapping_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.ParentMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.PropertyType
  name: PropertyType
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_PropertyType
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.PropertyType
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.PropertyType*
  name: PropertyType
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_PropertyType_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.PropertyType
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  name: SetColumnInfo(IMappingSource)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_SetColumnInfo_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo(IMappingSource)
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo(IMappingSource)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.SetColumnInfo*
  name: SetColumnInfo
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_SetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.SetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.SetColumnName(System.String)
  name: SetColumnName(string)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_SetColumnName_System_String_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.SetColumnName(System.String)
  name.vb: SetColumnName(String)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.SetColumnName(string)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnName(String)
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.SetColumnName(string)
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnName(String)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.SetColumnName*
  name: SetColumnName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_SetColumnName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.SetColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.SetColumnName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnName
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.SetColumnName
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnName
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Setup(Inflatable.ClassMapper.IMappingSource,Data.Modeler.Providers.Interfaces.ISource)
  name: Setup(IMappingSource, ISource)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_Setup_Inflatable_ClassMapper_IMappingSource_Data_Modeler_Providers_Interfaces_ISource_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Setup(Inflatable.ClassMapper.IMappingSource,Data.Modeler.Providers.Interfaces.ISource)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Setup(Inflatable.ClassMapper.IMappingSource, Data.Modeler.Providers.Interfaces.ISource)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Setup(Inflatable.ClassMapper.IMappingSource, Data.Modeler.Providers.Interfaces.ISource)
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Setup(IMappingSource, ISource)
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Setup(IMappingSource, ISource)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Setup*
  name: Setup
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_Setup_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Setup
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Setup
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Setup
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Setup
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Setup
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Similar(Inflatable.ClassMapper.Interfaces.IManyToOneProperty)
  name: Similar(IManyToOneProperty)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_Similar_Inflatable_ClassMapper_Interfaces_IManyToOneProperty_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Similar(Inflatable.ClassMapper.Interfaces.IManyToOneProperty)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Similar(Inflatable.ClassMapper.Interfaces.IManyToOneProperty)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Similar(Inflatable.ClassMapper.Interfaces.IManyToOneProperty)
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Similar(IManyToOneProperty)
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Similar(IManyToOneProperty)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Similar*
  name: Similar
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_Similar_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.Similar
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Similar
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Similar
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.Similar
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).Similar
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.ToString
  name: ToString()
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_ToString
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.ToString
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ToString()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).ToString()
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ToString()
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).ToString()
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.ToString*
  name: ToString
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_ToString_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.ToString
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ToString
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).ToString
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.ToString
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).ToString
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.TypeName
  name: TypeName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_TypeName
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.TypeName
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.TypeName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).TypeName
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.TypeName
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).TypeName
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.TypeName*
  name: TypeName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneManyPropertyBase_3_TypeName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase`3.TypeName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.TypeName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).TypeName
  nameWithType: ManyToOneManyPropertyBase<TClassType, TDataType, TReturnType>.TypeName
  nameWithType.vb: ManyToOneManyPropertyBase(Of TClassType, TDataType, TReturnType).TypeName
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3
  name: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html
  commentId: T:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3
  name.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType)
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},Inflatable.Interfaces.IMapping)
  name: ManyToOneOnePropertyBase(Expression<Func<TClassType, TDataType?>>, IMapping)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3__ctor_System_Linq_Expressions_Expression_System_Func__0__1___Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},Inflatable.Interfaces.IMapping)
  name.vb: New(Expression(Of Func(Of TClassType, TDataType)), IMapping)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ManyToOneOnePropertyBase(System.Linq.Expressions.Expression<System.Func<TClassType, TDataType?>>, Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).New(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, TDataType)), Inflatable.Interfaces.IMapping)
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ManyToOneOnePropertyBase(Expression<Func<TClassType, TDataType?>>, IMapping)
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).New(Expression(Of Func(Of TClassType, TDataType)), IMapping)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.#ctor*
  name: ManyToOneOnePropertyBase
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3__ctor_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ManyToOneOnePropertyBase
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).New
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ManyToOneOnePropertyBase
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).New
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Cascade
  name: Cascade
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_Cascade
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Cascade
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Cascade
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Cascade
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Cascade
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Cascade
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Cascade*
  name: Cascade
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_Cascade_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Cascade
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Cascade
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Cascade
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Cascade
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Cascade
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.CascadeChanges
  name: CascadeChanges()
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_CascadeChanges
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.CascadeChanges
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.CascadeChanges()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).CascadeChanges()
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.CascadeChanges()
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).CascadeChanges()
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.CascadeChanges*
  name: CascadeChanges
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_CascadeChanges_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.CascadeChanges
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.CascadeChanges
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).CascadeChanges
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.CascadeChanges
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).CascadeChanges
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.ColumnName
  name: ColumnName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_ColumnName
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.ColumnName
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ColumnName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).ColumnName
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ColumnName
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).ColumnName
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.ColumnName*
  name: ColumnName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_ColumnName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.ColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ColumnName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).ColumnName
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ColumnName
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).ColumnName
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Columns
  name: Columns
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_Columns
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Columns
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Columns
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Columns
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Columns
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Columns
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Columns*
  name: Columns
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_Columns_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Columns
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Columns
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Columns
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Columns
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Columns
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.CompiledExpression
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_CompiledExpression
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.CompiledExpression
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.CompiledExpression*
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_CompiledExpression_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.CompiledExpression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Convert*
  name: Convert
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_Convert_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Convert
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Convert
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Convert
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Convert
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Convert
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Convert``1(Inflatable.Interfaces.IMapping)
  name: Convert<TResult>(IMapping)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_Convert__1_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Convert``1(Inflatable.Interfaces.IMapping)
  name.vb: Convert(Of TResult)(IMapping)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Convert<TResult>(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Convert(Of TResult)(Inflatable.Interfaces.IMapping)
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Convert<TResult>(IMapping)
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Convert(Of TResult)(IMapping)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Equals(System.Object)
  name: Equals(object)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_Equals_System_Object_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Equals(object)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Equals(Object)
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Equals(object)
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Equals(Object)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Equals*
  name: Equals
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_Equals_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Equals
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Equals
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Equals
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Equals
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Equals
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Expression
  name: Expression
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_Expression
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Expression
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Expression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Expression
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Expression
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Expression
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Expression*
  name: Expression
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_Expression_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Expression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Expression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Expression
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Expression
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Expression
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.ForeignMapping
  name: ForeignMapping
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_ForeignMapping
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.ForeignMapping
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ForeignMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).ForeignMapping
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ForeignMapping
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).ForeignMapping
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.ForeignMapping*
  name: ForeignMapping
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_ForeignMapping_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.ForeignMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ForeignMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).ForeignMapping
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ForeignMapping
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).ForeignMapping
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.GetColumnInfo
  name: GetColumnInfo()
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_GetColumnInfo
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.GetColumnInfo
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo()
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo()
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo()
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.GetColumnInfo*
  name: GetColumnInfo
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_GetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.GetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.GetHashCode
  name: GetHashCode()
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_GetHashCode
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.GetHashCode
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.GetHashCode()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode()
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.GetHashCode()
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode()
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.GetHashCode*
  name: GetHashCode
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_GetHashCode_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.GetHashCode
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.GetHashCode
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.GetHashCode
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.GetValue(System.Object)
  name: GetValue(object)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_GetValue_System_Object_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.GetValue(System.Object)
  name.vb: GetValue(Object)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.GetValue(object)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).GetValue(Object)
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.GetValue(object)
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).GetValue(Object)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.GetValue*
  name: GetValue
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_GetValue_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.GetValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.GetValue
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).GetValue
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.GetValue
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).GetValue
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.InternalFieldName
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_InternalFieldName
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.InternalFieldName
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.InternalFieldName*
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_InternalFieldName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.InternalFieldName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.LoadPropertyQuery
  name: LoadPropertyQuery
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_LoadPropertyQuery
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.LoadPropertyQuery
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.LoadPropertyQuery
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).LoadPropertyQuery
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.LoadPropertyQuery
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).LoadPropertyQuery
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.LoadPropertyQuery*
  name: LoadPropertyQuery
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_LoadPropertyQuery_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.LoadPropertyQuery
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.LoadPropertyQuery
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).LoadPropertyQuery
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.LoadPropertyQuery
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).LoadPropertyQuery
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.LoadUsing(System.String,System.Data.CommandType)
  name: LoadUsing(string, CommandType)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_LoadUsing_System_String_System_Data_CommandType_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.LoadUsing(System.String,System.Data.CommandType)
  name.vb: LoadUsing(String, CommandType)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.LoadUsing(string, System.Data.CommandType)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).LoadUsing(String, System.Data.CommandType)
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.LoadUsing(string, CommandType)
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).LoadUsing(String, CommandType)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.LoadUsing*
  name: LoadUsing
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_LoadUsing_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.LoadUsing
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.LoadUsing
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).LoadUsing
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.LoadUsing
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).LoadUsing
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Name
  name: Name
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_Name
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Name
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Name
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Name
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Name
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Name
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Name*
  name: Name
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_Name_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Name
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Name
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Name
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Name
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Name
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.OnDeleteDoNothing
  name: OnDeleteDoNothing()
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_OnDeleteDoNothing
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.OnDeleteDoNothing
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothing()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing()
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothing()
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing()
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.OnDeleteDoNothing*
  name: OnDeleteDoNothing
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_OnDeleteDoNothing_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.OnDeleteDoNothing
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothing
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothing
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.OnDeleteDoNothingValue
  name: OnDeleteDoNothingValue
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_OnDeleteDoNothingValue
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.OnDeleteDoNothingValue
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothingValue
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothingValue
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothingValue
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothingValue
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.OnDeleteDoNothingValue*
  name: OnDeleteDoNothingValue
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_OnDeleteDoNothingValue_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.OnDeleteDoNothingValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothingValue
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothingValue
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothingValue
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothingValue
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.op_Equality(Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase{`0,`1,`2})
  name: operator ==(ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>, ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_op_Equality_Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.op_Equality(Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase{`0,`1,`2})
  name.vb: =(ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType), ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.operator ==(Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).=(Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.operator ==(ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>, ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).=(ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType), ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.op_Equality*
  name: operator ==
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_op_Equality_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.operator ==
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).=
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.operator ==
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).=
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.op_GreaterThan(Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase{`0,`1,`2})
  name: operator >(ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>, ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_op_GreaterThan_Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.op_GreaterThan(Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase{`0,`1,`2})
  name.vb: '>(ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType), ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType))'
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.operator >(Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).>(Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.operator >(ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>, ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).>(ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType), ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.op_GreaterThan*
  name: operator >
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_op_GreaterThan_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.op_GreaterThan
  isSpec: "True"
  name.vb: '>'
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.operator >
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).>
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.operator >
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).>
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.op_Inequality(Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase{`0,`1,`2})
  name: operator !=(ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>, ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_op_Inequality_Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.op_Inequality(Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase{`0,`1,`2})
  name.vb: <>(ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType), ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.operator !=(Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).<>(Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.operator !=(ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>, ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).<>(ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType), ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.op_Inequality*
  name: operator !=
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_op_Inequality_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.operator !=
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).<>
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.operator !=
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).<>
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.op_LessThan(Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase{`0,`1,`2})
  name: operator <(ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>, ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_op_LessThan_Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.op_LessThan(Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase{`0,`1,`2})
  name.vb: <(ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType), ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.operator <(Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).<(Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.operator <(ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>, ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).<(ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType), ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.op_LessThan*
  name: operator <
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_op_LessThan_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.op_LessThan
  isSpec: "True"
  name.vb: <
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.operator <
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).<
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.operator <
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).<
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.ParentMapping
  name: ParentMapping
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_ParentMapping
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.ParentMapping
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.ParentMapping*
  name: ParentMapping
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_ParentMapping_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.ParentMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.PropertyType
  name: PropertyType
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_PropertyType
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.PropertyType
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.PropertyType*
  name: PropertyType
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_PropertyType_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.PropertyType
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  name: SetColumnInfo(IMappingSource)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_SetColumnInfo_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo(IMappingSource)
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo(IMappingSource)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.SetColumnInfo*
  name: SetColumnInfo
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_SetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.SetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.SetColumnName(System.String)
  name: SetColumnName(string)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_SetColumnName_System_String_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.SetColumnName(System.String)
  name.vb: SetColumnName(String)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.SetColumnName(string)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).SetColumnName(String)
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.SetColumnName(string)
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).SetColumnName(String)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.SetColumnName*
  name: SetColumnName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_SetColumnName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.SetColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.SetColumnName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).SetColumnName
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.SetColumnName
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).SetColumnName
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Setup(Inflatable.ClassMapper.IMappingSource,Data.Modeler.Providers.Interfaces.ISource)
  name: Setup(IMappingSource, ISource)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_Setup_Inflatable_ClassMapper_IMappingSource_Data_Modeler_Providers_Interfaces_ISource_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Setup(Inflatable.ClassMapper.IMappingSource,Data.Modeler.Providers.Interfaces.ISource)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Setup(Inflatable.ClassMapper.IMappingSource, Data.Modeler.Providers.Interfaces.ISource)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Setup(Inflatable.ClassMapper.IMappingSource, Data.Modeler.Providers.Interfaces.ISource)
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Setup(IMappingSource, ISource)
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Setup(IMappingSource, ISource)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Setup*
  name: Setup
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_Setup_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Setup
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Setup
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Setup
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Setup
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Setup
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Similar(Inflatable.ClassMapper.Interfaces.IManyToOneProperty)
  name: Similar(IManyToOneProperty)
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_Similar_Inflatable_ClassMapper_Interfaces_IManyToOneProperty_
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Similar(Inflatable.ClassMapper.Interfaces.IManyToOneProperty)
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Similar(Inflatable.ClassMapper.Interfaces.IManyToOneProperty)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Similar(Inflatable.ClassMapper.Interfaces.IManyToOneProperty)
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Similar(IManyToOneProperty)
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Similar(IManyToOneProperty)
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Similar*
  name: Similar
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_Similar_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.Similar
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Similar
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Similar
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.Similar
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).Similar
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.ToString
  name: ToString()
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_ToString
  commentId: M:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.ToString
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ToString()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).ToString()
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ToString()
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).ToString()
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.ToString*
  name: ToString
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_ToString_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.ToString
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ToString
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).ToString
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.ToString
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).ToString
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.TypeName
  name: TypeName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_TypeName
  commentId: P:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.TypeName
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.TypeName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).TypeName
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.TypeName
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).TypeName
- uid: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.TypeName*
  name: TypeName
  href: api/Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_ManyToOneOnePropertyBase_3_TypeName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase`3.TypeName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.TypeName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).TypeName
  nameWithType: ManyToOneOnePropertyBase<TClassType, TDataType, TReturnType>.TypeName
  nameWithType.vb: ManyToOneOnePropertyBase(Of TClassType, TDataType, TReturnType).TypeName
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3
  name: PropertyBase<ClassType, DataType, ReturnType>
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html
  commentId: T:Inflatable.ClassMapper.BaseClasses.PropertyBase`3
  name.vb: PropertyBase(Of ClassType, DataType, ReturnType)
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType)
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType)
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},Inflatable.Interfaces.IMapping)
  name: PropertyBase(Expression<Func<ClassType, DataType>>, IMapping)
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3__ctor_System_Linq_Expressions_Expression_System_Func__0__1___Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},Inflatable.Interfaces.IMapping)
  name.vb: New(Expression(Of Func(Of ClassType, DataType)), IMapping)
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.PropertyBase(System.Linq.Expressions.Expression<System.Func<ClassType, DataType>>, Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).New(System.Linq.Expressions.Expression(Of System.Func(Of ClassType, DataType)), Inflatable.Interfaces.IMapping)
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.PropertyBase(Expression<Func<ClassType, DataType>>, IMapping)
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).New(Expression(Of Func(Of ClassType, DataType)), IMapping)
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.#ctor*
  name: PropertyBase
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3__ctor_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.PropertyBase
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).New
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.PropertyBase
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).New
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  name: AddToTable(ITable)
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_AddToTable_Data_Modeler_Providers_Interfaces_ITable_
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.AddToTable(ITable)
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).AddToTable(ITable)
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.AddToTable*
  name: AddToTable
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_AddToTable_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.AddToTable
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.AddToTable
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).AddToTable
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.AddToTable
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).AddToTable
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ColumnName
  name: ColumnName
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_ColumnName
  commentId: P:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ColumnName
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.ColumnName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).ColumnName
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.ColumnName
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).ColumnName
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ColumnName*
  name: ColumnName
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_ColumnName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.ColumnName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).ColumnName
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.ColumnName
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).ColumnName
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Columns
  name: Columns
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Columns
  commentId: P:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Columns
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Columns
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Columns
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Columns
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Columns
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Columns*
  name: Columns
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Columns_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Columns
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Columns
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Columns
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Columns
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Columns
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.CompiledExpression
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_CompiledExpression
  commentId: P:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.CompiledExpression
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).CompiledExpression
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.CompiledExpression
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).CompiledExpression
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.CompiledExpression*
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_CompiledExpression_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.CompiledExpression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).CompiledExpression
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.CompiledExpression
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).CompiledExpression
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ComputedColumnSpecification
  name: ComputedColumnSpecification
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_ComputedColumnSpecification
  commentId: P:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ComputedColumnSpecification
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.ComputedColumnSpecification
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).ComputedColumnSpecification
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.ComputedColumnSpecification
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).ComputedColumnSpecification
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ComputedColumnSpecification*
  name: ComputedColumnSpecification
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_ComputedColumnSpecification_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ComputedColumnSpecification
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.ComputedColumnSpecification
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).ComputedColumnSpecification
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.ComputedColumnSpecification
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).ComputedColumnSpecification
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Constraints
  name: Constraints
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Constraints
  commentId: P:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Constraints
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Constraints
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Constraints
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Constraints
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Constraints
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Constraints*
  name: Constraints
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Constraints_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Constraints
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Constraints
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Constraints
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Constraints
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Constraints
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Convert*
  name: Convert
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Convert_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Convert
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Convert
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Convert
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Convert
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Convert
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Convert``1(Inflatable.Interfaces.IMapping)
  name: Convert<TResult>(IMapping)
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Convert__1_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Convert``1(Inflatable.Interfaces.IMapping)
  name.vb: Convert(Of TResult)(IMapping)
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Convert<TResult>(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Convert(Of TResult)(Inflatable.Interfaces.IMapping)
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Convert<TResult>(IMapping)
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Convert(Of TResult)(IMapping)
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.DefaultValue
  name: DefaultValue
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_DefaultValue
  commentId: P:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.DefaultValue
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.DefaultValue
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).DefaultValue
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.DefaultValue
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).DefaultValue
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.DefaultValue*
  name: DefaultValue
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_DefaultValue_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.DefaultValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.DefaultValue
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).DefaultValue
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.DefaultValue
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).DefaultValue
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Equals(System.Object)
  name: Equals(object)
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Equals_System_Object_
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Equals(object)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Equals(Object)
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Equals(object)
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Equals(Object)
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Equals*
  name: Equals
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Equals_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Equals
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Equals
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Equals
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Equals
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Equals
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Expression
  name: Expression
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Expression
  commentId: P:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Expression
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Expression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Expression
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Expression
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Expression
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Expression*
  name: Expression
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Expression_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Expression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Expression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Expression
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Expression
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Expression
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.GetColumnInfo
  name: GetColumnInfo()
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_GetColumnInfo
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.GetColumnInfo
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.GetColumnInfo()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).GetColumnInfo()
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.GetColumnInfo()
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).GetColumnInfo()
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.GetColumnInfo*
  name: GetColumnInfo
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_GetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.GetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.GetColumnInfo
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).GetColumnInfo
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.GetColumnInfo
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).GetColumnInfo
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.GetHashCode
  name: GetHashCode()
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_GetHashCode
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.GetHashCode
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.GetHashCode()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).GetHashCode()
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.GetHashCode()
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).GetHashCode()
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.GetHashCode*
  name: GetHashCode
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_GetHashCode_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.GetHashCode
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.GetHashCode
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).GetHashCode
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.GetHashCode
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).GetHashCode
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Index
  name: Index
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Index
  commentId: P:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Index
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Index
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Index
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Index
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Index
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Index*
  name: Index
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Index_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Index
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Index
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Index
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Index
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Index
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.InternalFieldName
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_InternalFieldName
  commentId: P:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.InternalFieldName
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.InternalFieldName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).InternalFieldName
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.InternalFieldName
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).InternalFieldName
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.InternalFieldName*
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_InternalFieldName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.InternalFieldName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.InternalFieldName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).InternalFieldName
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.InternalFieldName
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).InternalFieldName
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.IsIndexed
  name: IsIndexed()
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_IsIndexed
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.IsIndexed
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.IsIndexed()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).IsIndexed()
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.IsIndexed()
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).IsIndexed()
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.IsIndexed*
  name: IsIndexed
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_IsIndexed_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.IsIndexed
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.IsIndexed
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).IsIndexed
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.IsIndexed
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).IsIndexed
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.IsReadOnly
  name: IsReadOnly()
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_IsReadOnly
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.IsReadOnly
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.IsReadOnly()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).IsReadOnly()
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.IsReadOnly()
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).IsReadOnly()
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.IsReadOnly*
  name: IsReadOnly
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_IsReadOnly_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.IsReadOnly
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.IsReadOnly
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).IsReadOnly
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.IsReadOnly
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).IsReadOnly
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.IsUnique
  name: IsUnique()
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_IsUnique
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.IsUnique
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.IsUnique()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).IsUnique()
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.IsUnique()
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).IsUnique()
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.IsUnique*
  name: IsUnique
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_IsUnique_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.IsUnique
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.IsUnique
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).IsUnique
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.IsUnique
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).IsUnique
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.MaxLength
  name: MaxLength
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_MaxLength
  commentId: P:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.MaxLength
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.MaxLength
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).MaxLength
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.MaxLength
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).MaxLength
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.MaxLength*
  name: MaxLength
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_MaxLength_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.MaxLength
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.MaxLength
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).MaxLength
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.MaxLength
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).MaxLength
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Name
  name: Name
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Name
  commentId: P:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Name
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Name
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Name
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Name
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Name
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Name*
  name: Name
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Name_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Name
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Name
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Name
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Name
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Name
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Nullable
  name: Nullable
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Nullable
  commentId: P:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Nullable
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Nullable
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Nullable
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Nullable
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Nullable
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Nullable*
  name: Nullable
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Nullable_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Nullable
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Nullable
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Nullable
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Nullable
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Nullable
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.op_Equality(Inflatable.ClassMapper.BaseClasses.PropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.PropertyBase{`0,`1,`2})
  name: operator ==(PropertyBase<ClassType, DataType, ReturnType>, PropertyBase<ClassType, DataType, ReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_op_Equality_Inflatable_ClassMapper_BaseClasses_PropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_PropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.op_Equality(Inflatable.ClassMapper.BaseClasses.PropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.PropertyBase{`0,`1,`2})
  name.vb: =(PropertyBase(Of ClassType, DataType, ReturnType), PropertyBase(Of ClassType, DataType, ReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.operator ==(Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>, Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).=(Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType), Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType))
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.operator ==(PropertyBase<ClassType, DataType, ReturnType>, PropertyBase<ClassType, DataType, ReturnType>)
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).=(PropertyBase(Of ClassType, DataType, ReturnType), PropertyBase(Of ClassType, DataType, ReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.op_Equality*
  name: operator ==
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_op_Equality_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.operator ==
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).=
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.operator ==
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).=
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.op_GreaterThan(Inflatable.ClassMapper.BaseClasses.PropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.PropertyBase{`0,`1,`2})
  name: operator >(PropertyBase<ClassType, DataType, ReturnType>, PropertyBase<ClassType, DataType, ReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_op_GreaterThan_Inflatable_ClassMapper_BaseClasses_PropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_PropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.op_GreaterThan(Inflatable.ClassMapper.BaseClasses.PropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.PropertyBase{`0,`1,`2})
  name.vb: '>(PropertyBase(Of ClassType, DataType, ReturnType), PropertyBase(Of ClassType, DataType, ReturnType))'
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.operator >(Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>, Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).>(Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType), Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType))
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.operator >(PropertyBase<ClassType, DataType, ReturnType>, PropertyBase<ClassType, DataType, ReturnType>)
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).>(PropertyBase(Of ClassType, DataType, ReturnType), PropertyBase(Of ClassType, DataType, ReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.op_GreaterThan*
  name: operator >
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_op_GreaterThan_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.op_GreaterThan
  isSpec: "True"
  name.vb: '>'
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.operator >
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).>
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.operator >
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).>
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.op_Inequality(Inflatable.ClassMapper.BaseClasses.PropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.PropertyBase{`0,`1,`2})
  name: operator !=(PropertyBase<ClassType, DataType, ReturnType>, PropertyBase<ClassType, DataType, ReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_op_Inequality_Inflatable_ClassMapper_BaseClasses_PropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_PropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.op_Inequality(Inflatable.ClassMapper.BaseClasses.PropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.PropertyBase{`0,`1,`2})
  name.vb: <>(PropertyBase(Of ClassType, DataType, ReturnType), PropertyBase(Of ClassType, DataType, ReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.operator !=(Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>, Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).<>(Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType), Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType))
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.operator !=(PropertyBase<ClassType, DataType, ReturnType>, PropertyBase<ClassType, DataType, ReturnType>)
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).<>(PropertyBase(Of ClassType, DataType, ReturnType), PropertyBase(Of ClassType, DataType, ReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.op_Inequality*
  name: operator !=
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_op_Inequality_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.operator !=
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).<>
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.operator !=
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).<>
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.op_LessThan(Inflatable.ClassMapper.BaseClasses.PropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.PropertyBase{`0,`1,`2})
  name: operator <(PropertyBase<ClassType, DataType, ReturnType>, PropertyBase<ClassType, DataType, ReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_op_LessThan_Inflatable_ClassMapper_BaseClasses_PropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_PropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.op_LessThan(Inflatable.ClassMapper.BaseClasses.PropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.PropertyBase{`0,`1,`2})
  name.vb: <(PropertyBase(Of ClassType, DataType, ReturnType), PropertyBase(Of ClassType, DataType, ReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.operator <(Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>, Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).<(Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType), Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType))
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.operator <(PropertyBase<ClassType, DataType, ReturnType>, PropertyBase<ClassType, DataType, ReturnType>)
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).<(PropertyBase(Of ClassType, DataType, ReturnType), PropertyBase(Of ClassType, DataType, ReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.op_LessThan*
  name: operator <
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_op_LessThan_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.op_LessThan
  isSpec: "True"
  name.vb: <
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.operator <
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).<
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.operator <
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).<
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ParentMapping
  name: ParentMapping
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_ParentMapping
  commentId: P:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ParentMapping
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.ParentMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).ParentMapping
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.ParentMapping
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).ParentMapping
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ParentMapping*
  name: ParentMapping
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_ParentMapping_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ParentMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.ParentMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).ParentMapping
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.ParentMapping
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).ParentMapping
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.PropertyType
  name: PropertyType
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_PropertyType
  commentId: P:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.PropertyType
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.PropertyType
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).PropertyType
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.PropertyType
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).PropertyType
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.PropertyType*
  name: PropertyType
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_PropertyType_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.PropertyType
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.PropertyType
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).PropertyType
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.PropertyType
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).PropertyType
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ReadOnly
  name: ReadOnly
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_ReadOnly
  commentId: P:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ReadOnly
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.ReadOnly
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).ReadOnly
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.ReadOnly
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).ReadOnly
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ReadOnly*
  name: ReadOnly
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_ReadOnly_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ReadOnly
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.ReadOnly
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).ReadOnly
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.ReadOnly
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).ReadOnly
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.SetAction
  name: SetAction
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_SetAction
  commentId: P:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.SetAction
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.SetAction
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).SetAction
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.SetAction
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).SetAction
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.SetAction*
  name: SetAction
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_SetAction_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.SetAction
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.SetAction
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).SetAction
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.SetAction
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).SetAction
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  name: SetColumnInfo(IMappingSource?)
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_SetColumnInfo_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  name.vb: SetColumnInfo(IMappingSource)
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.SetColumnInfo(Inflatable.ClassMapper.IMappingSource?)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.SetColumnInfo(IMappingSource?)
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).SetColumnInfo(IMappingSource)
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.SetColumnInfo*
  name: SetColumnInfo
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_SetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.SetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.SetColumnInfo
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).SetColumnInfo
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.SetColumnInfo
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).SetColumnInfo
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Setup
  name: Setup()
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Setup
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Setup
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Setup()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Setup()
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Setup()
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Setup()
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Setup*
  name: Setup
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Setup_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Setup
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Setup
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Setup
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Setup
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Setup
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Similar(Inflatable.ClassMapper.Interfaces.IProperty)
  name: Similar(IProperty)
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Similar_Inflatable_ClassMapper_Interfaces_IProperty_
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Similar(Inflatable.ClassMapper.Interfaces.IProperty)
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Similar(Inflatable.ClassMapper.Interfaces.IProperty)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Similar(Inflatable.ClassMapper.Interfaces.IProperty)
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Similar(IProperty)
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Similar(IProperty)
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Similar*
  name: Similar
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Similar_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Similar
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Similar
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Similar
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Similar
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Similar
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ToString
  name: ToString()
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_ToString
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ToString
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.ToString()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).ToString()
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.ToString()
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).ToString()
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ToString*
  name: ToString
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_ToString_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.ToString
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.ToString
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).ToString
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.ToString
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).ToString
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.TypeName
  name: TypeName
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_TypeName
  commentId: P:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.TypeName
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.TypeName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).TypeName
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.TypeName
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).TypeName
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.TypeName*
  name: TypeName
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_TypeName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.TypeName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.TypeName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).TypeName
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.TypeName
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).TypeName
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Unique
  name: Unique
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Unique
  commentId: P:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Unique
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Unique
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Unique
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Unique
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Unique
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Unique*
  name: Unique
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_Unique_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.Unique
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.Unique
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).Unique
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.Unique
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).Unique
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithColumnName(System.String)
  name: WithColumnName(string)
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_WithColumnName_System_String_
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithColumnName(System.String)
  name.vb: WithColumnName(String)
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.WithColumnName(string)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).WithColumnName(String)
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.WithColumnName(string)
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).WithColumnName(String)
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithColumnName*
  name: WithColumnName
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_WithColumnName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.WithColumnName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).WithColumnName
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.WithColumnName
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).WithColumnName
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithComputedColumnSpecification(System.String)
  name: WithComputedColumnSpecification(string)
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_WithComputedColumnSpecification_System_String_
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithComputedColumnSpecification(System.String)
  name.vb: WithComputedColumnSpecification(String)
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.WithComputedColumnSpecification(string)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).WithComputedColumnSpecification(String)
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.WithComputedColumnSpecification(string)
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).WithComputedColumnSpecification(String)
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithComputedColumnSpecification*
  name: WithComputedColumnSpecification
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_WithComputedColumnSpecification_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithComputedColumnSpecification
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.WithComputedColumnSpecification
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).WithComputedColumnSpecification
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.WithComputedColumnSpecification
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).WithComputedColumnSpecification
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithConstraint(System.String)
  name: WithConstraint(string)
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_WithConstraint_System_String_
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithConstraint(System.String)
  name.vb: WithConstraint(String)
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.WithConstraint(string)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).WithConstraint(String)
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.WithConstraint(string)
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).WithConstraint(String)
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithConstraint*
  name: WithConstraint
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_WithConstraint_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithConstraint
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.WithConstraint
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).WithConstraint
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.WithConstraint
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).WithConstraint
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithDefaultValue(System.Func{`1})
  name: WithDefaultValue(Func<DataType>)
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_WithDefaultValue_System_Func__1__
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithDefaultValue(System.Func{`1})
  name.vb: WithDefaultValue(Func(Of DataType))
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.WithDefaultValue(System.Func<DataType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).WithDefaultValue(System.Func(Of DataType))
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.WithDefaultValue(Func<DataType>)
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).WithDefaultValue(Func(Of DataType))
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithDefaultValue*
  name: WithDefaultValue
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_WithDefaultValue_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithDefaultValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.WithDefaultValue
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).WithDefaultValue
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.WithDefaultValue
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).WithDefaultValue
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithMaxLength
  name: WithMaxLength()
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_WithMaxLength
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithMaxLength
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.WithMaxLength()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).WithMaxLength()
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.WithMaxLength()
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).WithMaxLength()
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithMaxLength(System.Int32)
  name: WithMaxLength(int)
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_WithMaxLength_System_Int32_
  commentId: M:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithMaxLength(System.Int32)
  name.vb: WithMaxLength(Integer)
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.WithMaxLength(int)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).WithMaxLength(Integer)
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.WithMaxLength(int)
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).WithMaxLength(Integer)
- uid: Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithMaxLength*
  name: WithMaxLength
  href: api/Inflatable.ClassMapper.BaseClasses.PropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_PropertyBase_3_WithMaxLength_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.PropertyBase`3.WithMaxLength
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.PropertyBase<ClassType, DataType, ReturnType>.WithMaxLength
  fullName.vb: Inflatable.ClassMapper.BaseClasses.PropertyBase(Of ClassType, DataType, ReturnType).WithMaxLength
  nameWithType: PropertyBase<ClassType, DataType, ReturnType>.WithMaxLength
  nameWithType.vb: PropertyBase(Of ClassType, DataType, ReturnType).WithMaxLength
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3
  name: SingleClassPropertyBase<TClassType, TDataType, TReturnType>
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html
  commentId: T:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3
  name.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType)
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType)
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType)
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},Inflatable.Interfaces.IMapping)
  name: SingleClassPropertyBase(Expression<Func<TClassType, TDataType?>>, IMapping)
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3__ctor_System_Linq_Expressions_Expression_System_Func__0__1___Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},Inflatable.Interfaces.IMapping)
  name.vb: New(Expression(Of Func(Of TClassType, TDataType)), IMapping)
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.SingleClassPropertyBase(System.Linq.Expressions.Expression<System.Func<TClassType, TDataType?>>, Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).New(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, TDataType)), Inflatable.Interfaces.IMapping)
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.SingleClassPropertyBase(Expression<Func<TClassType, TDataType?>>, IMapping)
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).New(Expression(Of Func(Of TClassType, TDataType)), IMapping)
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.#ctor*
  name: SingleClassPropertyBase
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3__ctor_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.SingleClassPropertyBase
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).New
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.SingleClassPropertyBase
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).New
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  name: AddToTable(ITable)
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_AddToTable_Data_Modeler_Providers_Interfaces_ITable_
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.AddToTable(ITable)
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).AddToTable(ITable)
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.AddToTable*
  name: AddToTable
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_AddToTable_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.AddToTable
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.AddToTable
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).AddToTable
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.AddToTable
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).AddToTable
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Cascade
  name: Cascade
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_Cascade
  commentId: P:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Cascade
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Cascade
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Cascade
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Cascade
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Cascade
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Cascade*
  name: Cascade
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_Cascade_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Cascade
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Cascade
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Cascade
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Cascade
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Cascade
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.CascadeChanges
  name: CascadeChanges()
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_CascadeChanges
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.CascadeChanges
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.CascadeChanges()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).CascadeChanges()
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.CascadeChanges()
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).CascadeChanges()
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.CascadeChanges*
  name: CascadeChanges
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_CascadeChanges_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.CascadeChanges
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.CascadeChanges
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).CascadeChanges
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.CascadeChanges
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).CascadeChanges
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.ColumnName
  name: ColumnName
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_ColumnName
  commentId: P:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.ColumnName
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.ColumnName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).ColumnName
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.ColumnName
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).ColumnName
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.ColumnName*
  name: ColumnName
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_ColumnName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.ColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.ColumnName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).ColumnName
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.ColumnName
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).ColumnName
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Columns
  name: Columns
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_Columns
  commentId: P:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Columns
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Columns
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Columns
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Columns
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Columns
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Columns*
  name: Columns
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_Columns_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Columns
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Columns
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Columns
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Columns
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Columns
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.CompiledExpression
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_CompiledExpression
  commentId: P:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.CompiledExpression
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.CompiledExpression*
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_CompiledExpression_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.CompiledExpression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.CompiledExpression
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).CompiledExpression
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Convert*
  name: Convert
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_Convert_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Convert
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Convert
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Convert
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Convert
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Convert
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Convert``1(Inflatable.Interfaces.IMapping)
  name: Convert<TResult>(IMapping)
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_Convert__1_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Convert``1(Inflatable.Interfaces.IMapping)
  name.vb: Convert(Of TResult)(IMapping)
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Convert<TResult>(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Convert(Of TResult)(Inflatable.Interfaces.IMapping)
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Convert<TResult>(IMapping)
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Convert(Of TResult)(IMapping)
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Equals(System.Object)
  name: Equals(object)
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_Equals_System_Object_
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Equals(object)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Equals(Object)
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Equals(object)
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Equals(Object)
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Equals*
  name: Equals
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_Equals_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Equals
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Equals
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Equals
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Equals
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Equals
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Expression
  name: Expression
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_Expression
  commentId: P:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Expression
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Expression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Expression
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Expression
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Expression
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Expression*
  name: Expression
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_Expression_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Expression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Expression
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Expression
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Expression
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Expression
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.ForeignMapping
  name: ForeignMapping
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_ForeignMapping
  commentId: P:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.ForeignMapping
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.ForeignMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).ForeignMapping
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.ForeignMapping
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).ForeignMapping
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.ForeignMapping*
  name: ForeignMapping
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_ForeignMapping_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.ForeignMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.ForeignMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).ForeignMapping
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.ForeignMapping
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).ForeignMapping
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.GetColumnInfo
  name: GetColumnInfo()
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_GetColumnInfo
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.GetColumnInfo
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo()
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo()
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo()
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.GetColumnInfo*
  name: GetColumnInfo
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_GetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.GetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.GetColumnInfo
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).GetColumnInfo
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.GetHashCode
  name: GetHashCode()
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_GetHashCode
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.GetHashCode
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.GetHashCode()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode()
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.GetHashCode()
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode()
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.GetHashCode*
  name: GetHashCode
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_GetHashCode_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.GetHashCode
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.GetHashCode
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.GetHashCode
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).GetHashCode
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.GetValue(System.Object)
  name: GetValue(object)
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_GetValue_System_Object_
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.GetValue(System.Object)
  name.vb: GetValue(Object)
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.GetValue(object)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).GetValue(Object)
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.GetValue(object)
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).GetValue(Object)
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.GetValue*
  name: GetValue
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_GetValue_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.GetValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.GetValue
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).GetValue
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.GetValue
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).GetValue
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.InternalFieldName
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_InternalFieldName
  commentId: P:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.InternalFieldName
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.InternalFieldName*
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_InternalFieldName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.InternalFieldName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.InternalFieldName
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).InternalFieldName
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.IsUnique
  name: IsUnique()
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_IsUnique
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.IsUnique
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.IsUnique()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).IsUnique()
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.IsUnique()
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).IsUnique()
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.IsUnique*
  name: IsUnique
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_IsUnique_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.IsUnique
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.IsUnique
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).IsUnique
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.IsUnique
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).IsUnique
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.LoadPropertyQuery
  name: LoadPropertyQuery
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_LoadPropertyQuery
  commentId: P:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.LoadPropertyQuery
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.LoadPropertyQuery
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).LoadPropertyQuery
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.LoadPropertyQuery
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).LoadPropertyQuery
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.LoadPropertyQuery*
  name: LoadPropertyQuery
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_LoadPropertyQuery_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.LoadPropertyQuery
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.LoadPropertyQuery
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).LoadPropertyQuery
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.LoadPropertyQuery
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).LoadPropertyQuery
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.LoadUsing(System.String,System.Data.CommandType)
  name: LoadUsing(string, CommandType)
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_LoadUsing_System_String_System_Data_CommandType_
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.LoadUsing(System.String,System.Data.CommandType)
  name.vb: LoadUsing(String, CommandType)
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.LoadUsing(string, System.Data.CommandType)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).LoadUsing(String, System.Data.CommandType)
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.LoadUsing(string, CommandType)
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).LoadUsing(String, CommandType)
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.LoadUsing*
  name: LoadUsing
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_LoadUsing_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.LoadUsing
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.LoadUsing
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).LoadUsing
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.LoadUsing
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).LoadUsing
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Name
  name: Name
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_Name
  commentId: P:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Name
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Name
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Name
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Name
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Name
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Name*
  name: Name
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_Name_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Name
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Name
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Name
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Name
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Name
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.OnDeleteDoNothing
  name: OnDeleteDoNothing()
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_OnDeleteDoNothing
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.OnDeleteDoNothing
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothing()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing()
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothing()
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing()
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.OnDeleteDoNothing*
  name: OnDeleteDoNothing
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_OnDeleteDoNothing_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.OnDeleteDoNothing
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothing
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothing
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.OnDeleteDoNothingValue
  name: OnDeleteDoNothingValue
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_OnDeleteDoNothingValue
  commentId: P:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.OnDeleteDoNothingValue
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothingValue
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothingValue
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothingValue
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothingValue
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.OnDeleteDoNothingValue*
  name: OnDeleteDoNothingValue
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_OnDeleteDoNothingValue_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.OnDeleteDoNothingValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothingValue
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothingValue
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.OnDeleteDoNothingValue
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).OnDeleteDoNothingValue
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.op_Equality(Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase{`0,`1,`2})
  name: operator ==(SingleClassPropertyBase<TClassType, TDataType, TReturnType>, SingleClassPropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_op_Equality_Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.op_Equality(Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase{`0,`1,`2})
  name.vb: =(SingleClassPropertyBase(Of TClassType, TDataType, TReturnType), SingleClassPropertyBase(Of TClassType, TDataType, TReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.operator ==(Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).=(Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.operator ==(SingleClassPropertyBase<TClassType, TDataType, TReturnType>, SingleClassPropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).=(SingleClassPropertyBase(Of TClassType, TDataType, TReturnType), SingleClassPropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.op_Equality*
  name: operator ==
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_op_Equality_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.operator ==
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).=
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.operator ==
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).=
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.op_GreaterThan(Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase{`0,`1,`2})
  name: operator >(SingleClassPropertyBase<TClassType, TDataType, TReturnType>, SingleClassPropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_op_GreaterThan_Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.op_GreaterThan(Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase{`0,`1,`2})
  name.vb: '>(SingleClassPropertyBase(Of TClassType, TDataType, TReturnType), SingleClassPropertyBase(Of TClassType, TDataType, TReturnType))'
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.operator >(Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).>(Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.operator >(SingleClassPropertyBase<TClassType, TDataType, TReturnType>, SingleClassPropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).>(SingleClassPropertyBase(Of TClassType, TDataType, TReturnType), SingleClassPropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.op_GreaterThan*
  name: operator >
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_op_GreaterThan_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.op_GreaterThan
  isSpec: "True"
  name.vb: '>'
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.operator >
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).>
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.operator >
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).>
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.op_Inequality(Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase{`0,`1,`2})
  name: operator !=(SingleClassPropertyBase<TClassType, TDataType, TReturnType>, SingleClassPropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_op_Inequality_Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.op_Inequality(Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase{`0,`1,`2})
  name.vb: <>(SingleClassPropertyBase(Of TClassType, TDataType, TReturnType), SingleClassPropertyBase(Of TClassType, TDataType, TReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.operator !=(Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).<>(Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.operator !=(SingleClassPropertyBase<TClassType, TDataType, TReturnType>, SingleClassPropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).<>(SingleClassPropertyBase(Of TClassType, TDataType, TReturnType), SingleClassPropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.op_Inequality*
  name: operator !=
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_op_Inequality_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.operator !=
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).<>
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.operator !=
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).<>
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.op_LessThan(Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase{`0,`1,`2})
  name: operator <(SingleClassPropertyBase<TClassType, TDataType, TReturnType>, SingleClassPropertyBase<TClassType, TDataType, TReturnType>)
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_op_LessThan_Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase__0__1__2__Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase__0__1__2__
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.op_LessThan(Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase{`0,`1,`2},Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase{`0,`1,`2})
  name.vb: <(SingleClassPropertyBase(Of TClassType, TDataType, TReturnType), SingleClassPropertyBase(Of TClassType, TDataType, TReturnType))
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.operator <(Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>, Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).<(Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType), Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType))
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.operator <(SingleClassPropertyBase<TClassType, TDataType, TReturnType>, SingleClassPropertyBase<TClassType, TDataType, TReturnType>)
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).<(SingleClassPropertyBase(Of TClassType, TDataType, TReturnType), SingleClassPropertyBase(Of TClassType, TDataType, TReturnType))
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.op_LessThan*
  name: operator <
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_op_LessThan_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.op_LessThan
  isSpec: "True"
  name.vb: <
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.operator <
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).<
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.operator <
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).<
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.ParentMapping
  name: ParentMapping
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_ParentMapping
  commentId: P:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.ParentMapping
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.ParentMapping*
  name: ParentMapping
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_ParentMapping_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.ParentMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.ParentMapping
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).ParentMapping
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.PropertyType
  name: PropertyType
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_PropertyType
  commentId: P:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.PropertyType
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.PropertyType*
  name: PropertyType
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_PropertyType_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.PropertyType
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.PropertyType
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).PropertyType
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  name: SetColumnInfo(IMappingSource)
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_SetColumnInfo_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo(IMappingSource)
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo(IMappingSource)
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.SetColumnInfo*
  name: SetColumnInfo
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_SetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.SetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.SetColumnInfo
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).SetColumnInfo
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.SetNullOnDelete
  name: SetNullOnDelete
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_SetNullOnDelete
  commentId: P:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.SetNullOnDelete
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.SetNullOnDelete
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).SetNullOnDelete
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.SetNullOnDelete
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).SetNullOnDelete
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.SetNullOnDelete*
  name: SetNullOnDelete
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_SetNullOnDelete_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.SetNullOnDelete
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.SetNullOnDelete
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).SetNullOnDelete
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.SetNullOnDelete
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).SetNullOnDelete
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Setup(Inflatable.ClassMapper.IMappingSource)
  name: Setup(IMappingSource)
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_Setup_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Setup(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Setup(Inflatable.ClassMapper.IMappingSource)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Setup(Inflatable.ClassMapper.IMappingSource)
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Setup(IMappingSource)
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Setup(IMappingSource)
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Setup*
  name: Setup
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_Setup_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Setup
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Setup
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Setup
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Setup
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Setup
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Similar(Inflatable.ClassMapper.Interfaces.IMapProperty)
  name: Similar(IMapProperty)
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_Similar_Inflatable_ClassMapper_Interfaces_IMapProperty_
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Similar(Inflatable.ClassMapper.Interfaces.IMapProperty)
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Similar(Inflatable.ClassMapper.Interfaces.IMapProperty)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Similar(Inflatable.ClassMapper.Interfaces.IMapProperty)
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Similar(IMapProperty)
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Similar(IMapProperty)
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Similar*
  name: Similar
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_Similar_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Similar
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Similar
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Similar
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Similar
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Similar
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.ToString
  name: ToString()
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_ToString
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.ToString
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.ToString()
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).ToString()
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.ToString()
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).ToString()
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.ToString*
  name: ToString
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_ToString_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.ToString
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.ToString
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).ToString
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.ToString
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).ToString
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.TypeName
  name: TypeName
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_TypeName
  commentId: P:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.TypeName
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.TypeName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).TypeName
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.TypeName
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).TypeName
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.TypeName*
  name: TypeName
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_TypeName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.TypeName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.TypeName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).TypeName
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.TypeName
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).TypeName
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Unique
  name: Unique
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_Unique
  commentId: P:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Unique
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Unique
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Unique
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Unique
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Unique
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Unique*
  name: Unique
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_Unique_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.Unique
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Unique
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Unique
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.Unique
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).Unique
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.WithColumnName(System.String)
  name: WithColumnName(string)
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_WithColumnName_System_String_
  commentId: M:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.WithColumnName(System.String)
  name.vb: WithColumnName(String)
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.WithColumnName(string)
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).WithColumnName(String)
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.WithColumnName(string)
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).WithColumnName(String)
- uid: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.WithColumnName*
  name: WithColumnName
  href: api/Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase-3.html#Inflatable_ClassMapper_BaseClasses_SingleClassPropertyBase_3_WithColumnName_
  commentId: Overload:Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase`3.WithColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase<TClassType, TDataType, TReturnType>.WithColumnName
  fullName.vb: Inflatable.ClassMapper.BaseClasses.SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).WithColumnName
  nameWithType: SingleClassPropertyBase<TClassType, TDataType, TReturnType>.WithColumnName
  nameWithType.vb: SingleClassPropertyBase(Of TClassType, TDataType, TReturnType).WithColumnName
- uid: Inflatable.ClassMapper.Column
  name: Inflatable.ClassMapper.Column
  href: api/Inflatable.ClassMapper.Column.html
  commentId: N:Inflatable.ClassMapper.Column
  fullName: Inflatable.ClassMapper.Column
  nameWithType: Inflatable.ClassMapper.Column
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2
  name: ComplexColumnInfo<TClassType, TDataType>
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html
  commentId: T:Inflatable.ClassMapper.Column.ComplexColumnInfo`2
  name.vb: ComplexColumnInfo(Of TClassType, TDataType)
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType)
  nameWithType: ComplexColumnInfo<TClassType, TDataType>
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType)
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.#ctor(Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo,System.String,System.Func{`0,`1},System.Boolean,System.String,System.String)
  name: ComplexColumnInfo(IQueryColumnInfo, string, Func<TClassType, TDataType?>, bool, string, string)
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2__ctor_Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_System_String_System_Func__0__1__System_Boolean_System_String_System_String_
  commentId: M:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.#ctor(Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo,System.String,System.Func{`0,`1},System.Boolean,System.String,System.String)
  name.vb: New(IQueryColumnInfo, String, Func(Of TClassType, TDataType), Boolean, String, String)
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.ComplexColumnInfo(Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo, string, System.Func<TClassType, TDataType?>, bool, string, string)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).New(Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo, String, System.Func(Of TClassType, TDataType), Boolean, String, String)
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.ComplexColumnInfo(IQueryColumnInfo, string, Func<TClassType, TDataType?>, bool, string, string)
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).New(IQueryColumnInfo, String, Func(Of TClassType, TDataType), Boolean, String, String)
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.#ctor*
  name: ComplexColumnInfo
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2__ctor_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.ComplexColumnInfo
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).New
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.ComplexColumnInfo
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).New
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.Child
  name: Child
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_Child
  commentId: P:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.Child
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.Child
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).Child
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.Child
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).Child
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.Child*
  name: Child
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_Child_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.Child
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.Child
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).Child
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.Child
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).Child
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.ColumnName
  name: ColumnName
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_ColumnName
  commentId: P:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.ColumnName
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.ColumnName
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).ColumnName
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.ColumnName
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).ColumnName
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.ColumnName*
  name: ColumnName
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_ColumnName_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.ColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.ColumnName
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).ColumnName
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.ColumnName
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).ColumnName
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.CompiledExpression
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_CompiledExpression
  commentId: P:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.CompiledExpression
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).CompiledExpression
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.CompiledExpression
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).CompiledExpression
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.CompiledExpression*
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_CompiledExpression_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.CompiledExpression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).CompiledExpression
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.CompiledExpression
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).CompiledExpression
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.CreateCopy
  name: CreateCopy()
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_CreateCopy
  commentId: M:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.CreateCopy
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.CreateCopy()
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).CreateCopy()
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.CreateCopy()
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).CreateCopy()
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.CreateCopy*
  name: CreateCopy
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_CreateCopy_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.CreateCopy
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.CreateCopy
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).CreateCopy
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.CreateCopy
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).CreateCopy
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.GetAsParameter(BigBook.Dynamo)
  name: GetAsParameter(Dynamo?)
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_GetAsParameter_BigBook_Dynamo_
  commentId: M:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.GetAsParameter(BigBook.Dynamo)
  name.vb: GetAsParameter(Dynamo)
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.GetAsParameter(BigBook.Dynamo?)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).GetAsParameter(BigBook.Dynamo)
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.GetAsParameter(Dynamo?)
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).GetAsParameter(Dynamo)
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.GetAsParameter(System.Object,System.Object)
  name: GetAsParameter(object?, object?)
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_GetAsParameter_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.GetAsParameter(System.Object,System.Object)
  name.vb: GetAsParameter(Object, Object)
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.GetAsParameter(object?, object?)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).GetAsParameter(Object, Object)
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.GetAsParameter(object?, object?)
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).GetAsParameter(Object, Object)
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.GetAsParameter(System.Object)
  name: GetAsParameter(object?)
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_GetAsParameter_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.GetAsParameter(System.Object)
  name.vb: GetAsParameter(Object)
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.GetAsParameter(object?)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).GetAsParameter(Object)
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.GetAsParameter(object?)
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).GetAsParameter(Object)
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.GetAsParameter*
  name: GetAsParameter
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_GetAsParameter_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.GetAsParameter
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.GetAsParameter
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).GetAsParameter
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.GetAsParameter
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).GetAsParameter
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.GetValue(BigBook.Dynamo)
  name: GetValue(Dynamo?)
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_GetValue_BigBook_Dynamo_
  commentId: M:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.GetValue(BigBook.Dynamo)
  name.vb: GetValue(Dynamo)
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.GetValue(BigBook.Dynamo?)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).GetValue(BigBook.Dynamo)
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.GetValue(Dynamo?)
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).GetValue(Dynamo)
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.GetValue(System.Object,System.Object)
  name: GetValue(object?, object?)
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_GetValue_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.GetValue(System.Object,System.Object)
  name.vb: GetValue(Object, Object)
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.GetValue(object?, object?)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).GetValue(Object, Object)
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.GetValue(object?, object?)
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).GetValue(Object, Object)
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.GetValue(System.Object)
  name: GetValue(object?)
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_GetValue_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.GetValue(System.Object)
  name.vb: GetValue(Object)
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.GetValue(object?)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).GetValue(Object)
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.GetValue(object?)
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).GetValue(Object)
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.GetValue*
  name: GetValue
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_GetValue_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.GetValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.GetValue
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).GetValue
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.GetValue
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).GetValue
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.IsDefault(System.Object,System.Object)
  name: IsDefault(object, object?)
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_IsDefault_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.IsDefault(System.Object,System.Object)
  name.vb: IsDefault(Object, Object)
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.IsDefault(object, object?)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).IsDefault(Object, Object)
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.IsDefault(object, object?)
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).IsDefault(Object, Object)
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.IsDefault(System.Object)
  name: IsDefault(object?)
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_IsDefault_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.IsDefault(System.Object)
  name.vb: IsDefault(Object)
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.IsDefault(object?)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).IsDefault(Object)
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.IsDefault(object?)
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).IsDefault(Object)
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.IsDefault*
  name: IsDefault
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_IsDefault_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.IsDefault
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.IsDefault
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).IsDefault
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.IsDefault
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).IsDefault
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.IsForeign
  name: IsForeign
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_IsForeign
  commentId: P:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.IsForeign
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.IsForeign
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).IsForeign
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.IsForeign
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).IsForeign
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.IsForeign*
  name: IsForeign
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_IsForeign_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.IsForeign
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.IsForeign
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).IsForeign
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.IsForeign
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).IsForeign
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.PropertyName
  name: PropertyName
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_PropertyName
  commentId: P:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.PropertyName
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.PropertyName
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).PropertyName
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.PropertyName
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).PropertyName
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.PropertyName*
  name: PropertyName
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_PropertyName_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.PropertyName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.PropertyName
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).PropertyName
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.PropertyName
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).PropertyName
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.PropertyType
  name: PropertyType
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_PropertyType
  commentId: P:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.PropertyType
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.PropertyType
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).PropertyType
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.PropertyType
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).PropertyType
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.PropertyType*
  name: PropertyType
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_PropertyType_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.PropertyType
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.PropertyType
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).PropertyType
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.PropertyType
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).PropertyType
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.SchemaName
  name: SchemaName
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_SchemaName
  commentId: P:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.SchemaName
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.SchemaName
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).SchemaName
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.SchemaName
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).SchemaName
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.SchemaName*
  name: SchemaName
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_SchemaName_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.SchemaName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.SchemaName
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).SchemaName
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.SchemaName
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).SchemaName
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.SetValue(System.Object,System.Object,System.Object)
  name: SetValue(object, object, object)
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_SetValue_System_Object_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.SetValue(System.Object,System.Object,System.Object)
  name.vb: SetValue(Object, Object, Object)
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.SetValue(object, object, object)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).SetValue(Object, Object, Object)
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.SetValue(object, object, object)
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).SetValue(Object, Object, Object)
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.SetValue(System.Object,System.Object)
  name: SetValue(object, object)
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_SetValue_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.SetValue(System.Object,System.Object)
  name.vb: SetValue(Object, Object)
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.SetValue(object, object)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).SetValue(Object, Object)
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.SetValue(object, object)
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).SetValue(Object, Object)
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.SetValue*
  name: SetValue
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_SetValue_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.SetValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.SetValue
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).SetValue
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.SetValue
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).SetValue
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.TableName
  name: TableName
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_TableName
  commentId: P:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.TableName
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.TableName
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).TableName
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.TableName
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).TableName
- uid: Inflatable.ClassMapper.Column.ComplexColumnInfo`2.TableName*
  name: TableName
  href: api/Inflatable.ClassMapper.Column.ComplexColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexColumnInfo_2_TableName_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexColumnInfo`2.TableName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexColumnInfo<TClassType, TDataType>.TableName
  fullName.vb: Inflatable.ClassMapper.Column.ComplexColumnInfo(Of TClassType, TDataType).TableName
  nameWithType: ComplexColumnInfo<TClassType, TDataType>.TableName
  nameWithType.vb: ComplexColumnInfo(Of TClassType, TDataType).TableName
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2
  name: ComplexListColumnInfo<TClassType, TDataType>
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html
  commentId: T:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2
  name.vb: ComplexListColumnInfo(Of TClassType, TDataType)
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType)
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType)
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.#ctor(Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo,System.String,System.Func{`0,System.Collections.Generic.IList{`1}},System.Boolean,System.String,System.String)
  name: ComplexListColumnInfo(IQueryColumnInfo, string, Func<TClassType, IList<TDataType>>, bool, string, string)
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2__ctor_Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_System_String_System_Func__0_System_Collections_Generic_IList__1___System_Boolean_System_String_System_String_
  commentId: M:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.#ctor(Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo,System.String,System.Func{`0,System.Collections.Generic.IList{`1}},System.Boolean,System.String,System.String)
  name.vb: New(IQueryColumnInfo, String, Func(Of TClassType, IList(Of TDataType)), Boolean, String, String)
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.ComplexListColumnInfo(Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo, string, System.Func<TClassType, System.Collections.Generic.IList<TDataType>>, bool, string, string)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).New(Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo, String, System.Func(Of TClassType, System.Collections.Generic.IList(Of TDataType)), Boolean, String, String)
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.ComplexListColumnInfo(IQueryColumnInfo, string, Func<TClassType, IList<TDataType>>, bool, string, string)
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).New(IQueryColumnInfo, String, Func(Of TClassType, IList(Of TDataType)), Boolean, String, String)
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.#ctor*
  name: ComplexListColumnInfo
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2__ctor_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.ComplexListColumnInfo
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).New
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.ComplexListColumnInfo
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).New
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.Child
  name: Child
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_Child
  commentId: P:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.Child
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.Child
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).Child
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.Child
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).Child
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.Child*
  name: Child
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_Child_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.Child
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.Child
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).Child
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.Child
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).Child
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.ColumnName
  name: ColumnName
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_ColumnName
  commentId: P:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.ColumnName
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.ColumnName
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).ColumnName
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.ColumnName
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).ColumnName
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.ColumnName*
  name: ColumnName
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_ColumnName_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.ColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.ColumnName
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).ColumnName
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.ColumnName
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).ColumnName
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.CompiledExpression
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_CompiledExpression
  commentId: P:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.CompiledExpression
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).CompiledExpression
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.CompiledExpression
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).CompiledExpression
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.CompiledExpression*
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_CompiledExpression_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.CompiledExpression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).CompiledExpression
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.CompiledExpression
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).CompiledExpression
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.CreateCopy
  name: CreateCopy()
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_CreateCopy
  commentId: M:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.CreateCopy
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.CreateCopy()
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).CreateCopy()
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.CreateCopy()
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).CreateCopy()
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.CreateCopy*
  name: CreateCopy
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_CreateCopy_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.CreateCopy
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.CreateCopy
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).CreateCopy
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.CreateCopy
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).CreateCopy
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.GetAsParameter(BigBook.Dynamo)
  name: GetAsParameter(Dynamo?)
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_GetAsParameter_BigBook_Dynamo_
  commentId: M:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.GetAsParameter(BigBook.Dynamo)
  name.vb: GetAsParameter(Dynamo)
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.GetAsParameter(BigBook.Dynamo?)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).GetAsParameter(BigBook.Dynamo)
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.GetAsParameter(Dynamo?)
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).GetAsParameter(Dynamo)
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.GetAsParameter(System.Object,System.Object)
  name: GetAsParameter(object?, object?)
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_GetAsParameter_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.GetAsParameter(System.Object,System.Object)
  name.vb: GetAsParameter(Object, Object)
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.GetAsParameter(object?, object?)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).GetAsParameter(Object, Object)
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.GetAsParameter(object?, object?)
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).GetAsParameter(Object, Object)
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.GetAsParameter(System.Object)
  name: GetAsParameter(object?)
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_GetAsParameter_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.GetAsParameter(System.Object)
  name.vb: GetAsParameter(Object)
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.GetAsParameter(object?)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).GetAsParameter(Object)
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.GetAsParameter(object?)
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).GetAsParameter(Object)
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.GetAsParameter*
  name: GetAsParameter
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_GetAsParameter_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.GetAsParameter
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.GetAsParameter
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).GetAsParameter
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.GetAsParameter
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).GetAsParameter
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.GetValue(BigBook.Dynamo)
  name: GetValue(Dynamo?)
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_GetValue_BigBook_Dynamo_
  commentId: M:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.GetValue(BigBook.Dynamo)
  name.vb: GetValue(Dynamo)
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.GetValue(BigBook.Dynamo?)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).GetValue(BigBook.Dynamo)
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.GetValue(Dynamo?)
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).GetValue(Dynamo)
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.GetValue(System.Object,System.Object)
  name: GetValue(object?, object?)
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_GetValue_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.GetValue(System.Object,System.Object)
  name.vb: GetValue(Object, Object)
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.GetValue(object?, object?)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).GetValue(Object, Object)
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.GetValue(object?, object?)
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).GetValue(Object, Object)
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.GetValue(System.Object)
  name: GetValue(object?)
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_GetValue_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.GetValue(System.Object)
  name.vb: GetValue(Object)
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.GetValue(object?)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).GetValue(Object)
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.GetValue(object?)
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).GetValue(Object)
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.GetValue*
  name: GetValue
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_GetValue_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.GetValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.GetValue
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).GetValue
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.GetValue
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).GetValue
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.IsDefault(System.Object,System.Object)
  name: IsDefault(object?, object?)
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_IsDefault_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.IsDefault(System.Object,System.Object)
  name.vb: IsDefault(Object, Object)
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.IsDefault(object?, object?)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).IsDefault(Object, Object)
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.IsDefault(object?, object?)
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).IsDefault(Object, Object)
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.IsDefault(System.Object)
  name: IsDefault(object?)
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_IsDefault_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.IsDefault(System.Object)
  name.vb: IsDefault(Object)
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.IsDefault(object?)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).IsDefault(Object)
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.IsDefault(object?)
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).IsDefault(Object)
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.IsDefault*
  name: IsDefault
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_IsDefault_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.IsDefault
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.IsDefault
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).IsDefault
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.IsDefault
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).IsDefault
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.IsForeign
  name: IsForeign
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_IsForeign
  commentId: P:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.IsForeign
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.IsForeign
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).IsForeign
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.IsForeign
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).IsForeign
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.IsForeign*
  name: IsForeign
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_IsForeign_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.IsForeign
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.IsForeign
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).IsForeign
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.IsForeign
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).IsForeign
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.PropertyName
  name: PropertyName
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_PropertyName
  commentId: P:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.PropertyName
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.PropertyName
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).PropertyName
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.PropertyName
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).PropertyName
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.PropertyName*
  name: PropertyName
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_PropertyName_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.PropertyName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.PropertyName
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).PropertyName
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.PropertyName
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).PropertyName
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.PropertyType
  name: PropertyType
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_PropertyType
  commentId: P:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.PropertyType
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.PropertyType
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).PropertyType
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.PropertyType
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).PropertyType
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.PropertyType*
  name: PropertyType
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_PropertyType_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.PropertyType
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.PropertyType
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).PropertyType
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.PropertyType
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).PropertyType
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.SchemaName
  name: SchemaName
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_SchemaName
  commentId: P:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.SchemaName
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.SchemaName
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).SchemaName
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.SchemaName
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).SchemaName
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.SchemaName*
  name: SchemaName
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_SchemaName_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.SchemaName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.SchemaName
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).SchemaName
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.SchemaName
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).SchemaName
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.SetValue(System.Object,System.Object,System.Object)
  name: SetValue(object, object?, object?)
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_SetValue_System_Object_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.SetValue(System.Object,System.Object,System.Object)
  name.vb: SetValue(Object, Object, Object)
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.SetValue(object, object?, object?)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).SetValue(Object, Object, Object)
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.SetValue(object, object?, object?)
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).SetValue(Object, Object, Object)
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.SetValue(System.Object,System.Object)
  name: SetValue(object?, object?)
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_SetValue_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.SetValue(System.Object,System.Object)
  name.vb: SetValue(Object, Object)
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.SetValue(object?, object?)
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).SetValue(Object, Object)
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.SetValue(object?, object?)
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).SetValue(Object, Object)
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.SetValue*
  name: SetValue
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_SetValue_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.SetValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.SetValue
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).SetValue
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.SetValue
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).SetValue
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.TableName
  name: TableName
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_TableName
  commentId: P:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.TableName
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.TableName
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).TableName
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.TableName
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).TableName
- uid: Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.TableName*
  name: TableName
  href: api/Inflatable.ClassMapper.Column.ComplexListColumnInfo-2.html#Inflatable_ClassMapper_Column_ComplexListColumnInfo_2_TableName_
  commentId: Overload:Inflatable.ClassMapper.Column.ComplexListColumnInfo`2.TableName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.ComplexListColumnInfo<TClassType, TDataType>.TableName
  fullName.vb: Inflatable.ClassMapper.Column.ComplexListColumnInfo(Of TClassType, TDataType).TableName
  nameWithType: ComplexListColumnInfo<TClassType, TDataType>.TableName
  nameWithType.vb: ComplexListColumnInfo(Of TClassType, TDataType).TableName
- uid: Inflatable.ClassMapper.Column.Interfaces
  name: Inflatable.ClassMapper.Column.Interfaces
  href: api/Inflatable.ClassMapper.Column.Interfaces.html
  commentId: N:Inflatable.ClassMapper.Column.Interfaces
  fullName: Inflatable.ClassMapper.Column.Interfaces
  nameWithType: Inflatable.ClassMapper.Column.Interfaces
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo
  name: IQueryColumnInfo
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html
  commentId: T:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo
  nameWithType: IQueryColumnInfo
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.ColumnName
  name: ColumnName
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_ColumnName
  commentId: P:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.ColumnName
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.ColumnName
  nameWithType: IQueryColumnInfo.ColumnName
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.ColumnName*
  name: ColumnName
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_ColumnName_
  commentId: Overload:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.ColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.ColumnName
  nameWithType: IQueryColumnInfo.ColumnName
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.CreateCopy
  name: CreateCopy()
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_CreateCopy
  commentId: M:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.CreateCopy
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.CreateCopy()
  nameWithType: IQueryColumnInfo.CreateCopy()
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.CreateCopy*
  name: CreateCopy
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_CreateCopy_
  commentId: Overload:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.CreateCopy
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.CreateCopy
  nameWithType: IQueryColumnInfo.CreateCopy
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetAsParameter(BigBook.Dynamo)
  name: GetAsParameter(Dynamo?)
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_GetAsParameter_BigBook_Dynamo_
  commentId: M:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetAsParameter(BigBook.Dynamo)
  name.vb: GetAsParameter(Dynamo)
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetAsParameter(BigBook.Dynamo?)
  fullName.vb: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetAsParameter(BigBook.Dynamo)
  nameWithType: IQueryColumnInfo.GetAsParameter(Dynamo?)
  nameWithType.vb: IQueryColumnInfo.GetAsParameter(Dynamo)
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetAsParameter(System.Object,System.Object)
  name: GetAsParameter(object?, object?)
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_GetAsParameter_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetAsParameter(System.Object,System.Object)
  name.vb: GetAsParameter(Object, Object)
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetAsParameter(object?, object?)
  fullName.vb: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetAsParameter(Object, Object)
  nameWithType: IQueryColumnInfo.GetAsParameter(object?, object?)
  nameWithType.vb: IQueryColumnInfo.GetAsParameter(Object, Object)
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetAsParameter(System.Object)
  name: GetAsParameter(object?)
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_GetAsParameter_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetAsParameter(System.Object)
  name.vb: GetAsParameter(Object)
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetAsParameter(object?)
  fullName.vb: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetAsParameter(Object)
  nameWithType: IQueryColumnInfo.GetAsParameter(object?)
  nameWithType.vb: IQueryColumnInfo.GetAsParameter(Object)
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetAsParameter*
  name: GetAsParameter
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_GetAsParameter_
  commentId: Overload:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetAsParameter
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetAsParameter
  nameWithType: IQueryColumnInfo.GetAsParameter
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetValue(BigBook.Dynamo)
  name: GetValue(Dynamo?)
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_GetValue_BigBook_Dynamo_
  commentId: M:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetValue(BigBook.Dynamo)
  name.vb: GetValue(Dynamo)
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetValue(BigBook.Dynamo?)
  fullName.vb: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetValue(BigBook.Dynamo)
  nameWithType: IQueryColumnInfo.GetValue(Dynamo?)
  nameWithType.vb: IQueryColumnInfo.GetValue(Dynamo)
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetValue(System.Object,System.Object)
  name: GetValue(object?, object?)
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_GetValue_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetValue(System.Object,System.Object)
  name.vb: GetValue(Object, Object)
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetValue(object?, object?)
  fullName.vb: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetValue(Object, Object)
  nameWithType: IQueryColumnInfo.GetValue(object?, object?)
  nameWithType.vb: IQueryColumnInfo.GetValue(Object, Object)
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetValue(System.Object)
  name: GetValue(object?)
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_GetValue_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetValue(System.Object)
  name.vb: GetValue(Object)
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetValue(object?)
  fullName.vb: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetValue(Object)
  nameWithType: IQueryColumnInfo.GetValue(object?)
  nameWithType.vb: IQueryColumnInfo.GetValue(Object)
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetValue*
  name: GetValue
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_GetValue_
  commentId: Overload:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.GetValue
  nameWithType: IQueryColumnInfo.GetValue
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.IsDefault(System.Object,System.Object)
  name: IsDefault(object, object)
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_IsDefault_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.IsDefault(System.Object,System.Object)
  name.vb: IsDefault(Object, Object)
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.IsDefault(object, object)
  fullName.vb: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.IsDefault(Object, Object)
  nameWithType: IQueryColumnInfo.IsDefault(object, object)
  nameWithType.vb: IQueryColumnInfo.IsDefault(Object, Object)
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.IsDefault(System.Object)
  name: IsDefault(object?)
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_IsDefault_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.IsDefault(System.Object)
  name.vb: IsDefault(Object)
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.IsDefault(object?)
  fullName.vb: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.IsDefault(Object)
  nameWithType: IQueryColumnInfo.IsDefault(object?)
  nameWithType.vb: IQueryColumnInfo.IsDefault(Object)
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.IsDefault*
  name: IsDefault
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_IsDefault_
  commentId: Overload:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.IsDefault
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.IsDefault
  nameWithType: IQueryColumnInfo.IsDefault
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.IsForeign
  name: IsForeign
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_IsForeign
  commentId: P:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.IsForeign
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.IsForeign
  nameWithType: IQueryColumnInfo.IsForeign
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.IsForeign*
  name: IsForeign
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_IsForeign_
  commentId: Overload:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.IsForeign
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.IsForeign
  nameWithType: IQueryColumnInfo.IsForeign
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.PropertyName
  name: PropertyName
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_PropertyName
  commentId: P:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.PropertyName
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.PropertyName
  nameWithType: IQueryColumnInfo.PropertyName
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.PropertyName*
  name: PropertyName
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_PropertyName_
  commentId: Overload:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.PropertyName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.PropertyName
  nameWithType: IQueryColumnInfo.PropertyName
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.PropertyType
  name: PropertyType
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_PropertyType
  commentId: P:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.PropertyType
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.PropertyType
  nameWithType: IQueryColumnInfo.PropertyType
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.PropertyType*
  name: PropertyType
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_PropertyType_
  commentId: Overload:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.PropertyType
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.PropertyType
  nameWithType: IQueryColumnInfo.PropertyType
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.SchemaName
  name: SchemaName
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_SchemaName
  commentId: P:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.SchemaName
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.SchemaName
  nameWithType: IQueryColumnInfo.SchemaName
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.SchemaName*
  name: SchemaName
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_SchemaName_
  commentId: Overload:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.SchemaName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.SchemaName
  nameWithType: IQueryColumnInfo.SchemaName
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.SetValue(System.Object,System.Object,System.Object)
  name: SetValue(object, object?, object)
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_SetValue_System_Object_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.SetValue(System.Object,System.Object,System.Object)
  name.vb: SetValue(Object, Object, Object)
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.SetValue(object, object?, object)
  fullName.vb: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.SetValue(Object, Object, Object)
  nameWithType: IQueryColumnInfo.SetValue(object, object?, object)
  nameWithType.vb: IQueryColumnInfo.SetValue(Object, Object, Object)
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.SetValue(System.Object,System.Object)
  name: SetValue(object?, object?)
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_SetValue_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.SetValue(System.Object,System.Object)
  name.vb: SetValue(Object, Object)
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.SetValue(object?, object?)
  fullName.vb: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.SetValue(Object, Object)
  nameWithType: IQueryColumnInfo.SetValue(object?, object?)
  nameWithType.vb: IQueryColumnInfo.SetValue(Object, Object)
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.SetValue*
  name: SetValue
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_SetValue_
  commentId: Overload:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.SetValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.SetValue
  nameWithType: IQueryColumnInfo.SetValue
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.TableName
  name: TableName
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_TableName
  commentId: P:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.TableName
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.TableName
  nameWithType: IQueryColumnInfo.TableName
- uid: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.TableName*
  name: TableName
  href: api/Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.html#Inflatable_ClassMapper_Column_Interfaces_IQueryColumnInfo_TableName_
  commentId: Overload:Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.TableName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.Interfaces.IQueryColumnInfo.TableName
  nameWithType: IQueryColumnInfo.TableName
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2
  name: SimpleColumnInfo<TClassType, TDataType>
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html
  commentId: T:Inflatable.ClassMapper.Column.SimpleColumnInfo`2
  name.vb: SimpleColumnInfo(Of TClassType, TDataType)
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType)
  nameWithType: SimpleColumnInfo<TClassType, TDataType>
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType)
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.#ctor(System.String,System.Func{`0,`1},System.Func{`1},System.Boolean,System.Boolean,System.String,System.Type,System.String,System.Action{`0,`1},System.String)
  name: SimpleColumnInfo(string, Func<TClassType, TDataType>, Func<TDataType>, bool, bool, string, Type, string, Action<TClassType, TDataType>, string)
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2__ctor_System_String_System_Func__0__1__System_Func__1__System_Boolean_System_Boolean_System_String_System_Type_System_String_System_Action__0__1__System_String_
  commentId: M:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.#ctor(System.String,System.Func{`0,`1},System.Func{`1},System.Boolean,System.Boolean,System.String,System.Type,System.String,System.Action{`0,`1},System.String)
  name.vb: New(String, Func(Of TClassType, TDataType), Func(Of TDataType), Boolean, Boolean, String, Type, String, Action(Of TClassType, TDataType), String)
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.SimpleColumnInfo(string, System.Func<TClassType, TDataType>, System.Func<TDataType>, bool, bool, string, System.Type, string, System.Action<TClassType, TDataType>, string)
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).New(String, System.Func(Of TClassType, TDataType), System.Func(Of TDataType), Boolean, Boolean, String, System.Type, String, System.Action(Of TClassType, TDataType), String)
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.SimpleColumnInfo(string, Func<TClassType, TDataType>, Func<TDataType>, bool, bool, string, Type, string, Action<TClassType, TDataType>, string)
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).New(String, Func(Of TClassType, TDataType), Func(Of TDataType), Boolean, Boolean, String, Type, String, Action(Of TClassType, TDataType), String)
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.#ctor*
  name: SimpleColumnInfo
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2__ctor_
  commentId: Overload:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.SimpleColumnInfo
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).New
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.SimpleColumnInfo
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).New
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.ColumnName
  name: ColumnName
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_ColumnName
  commentId: P:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.ColumnName
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.ColumnName
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).ColumnName
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.ColumnName
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).ColumnName
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.ColumnName*
  name: ColumnName
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_ColumnName_
  commentId: Overload:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.ColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.ColumnName
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).ColumnName
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.ColumnName
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).ColumnName
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.CompiledExpression
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_CompiledExpression
  commentId: P:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.CompiledExpression
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).CompiledExpression
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.CompiledExpression
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).CompiledExpression
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.CompiledExpression*
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_CompiledExpression_
  commentId: Overload:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.CompiledExpression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).CompiledExpression
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.CompiledExpression
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).CompiledExpression
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.CreateCopy
  name: CreateCopy()
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_CreateCopy
  commentId: M:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.CreateCopy
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.CreateCopy()
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).CreateCopy()
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.CreateCopy()
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).CreateCopy()
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.CreateCopy*
  name: CreateCopy
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_CreateCopy_
  commentId: Overload:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.CreateCopy
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.CreateCopy
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).CreateCopy
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.CreateCopy
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).CreateCopy
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.DefaultValue
  name: DefaultValue
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_DefaultValue
  commentId: P:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.DefaultValue
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.DefaultValue
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).DefaultValue
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.DefaultValue
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).DefaultValue
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.DefaultValue*
  name: DefaultValue
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_DefaultValue_
  commentId: Overload:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.DefaultValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.DefaultValue
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).DefaultValue
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.DefaultValue
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).DefaultValue
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.GetAsParameter(BigBook.Dynamo)
  name: GetAsParameter(Dynamo?)
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_GetAsParameter_BigBook_Dynamo_
  commentId: M:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.GetAsParameter(BigBook.Dynamo)
  name.vb: GetAsParameter(Dynamo)
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.GetAsParameter(BigBook.Dynamo?)
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).GetAsParameter(BigBook.Dynamo)
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.GetAsParameter(Dynamo?)
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).GetAsParameter(Dynamo)
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.GetAsParameter(System.Object,System.Object)
  name: GetAsParameter(object?, object?)
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_GetAsParameter_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.GetAsParameter(System.Object,System.Object)
  name.vb: GetAsParameter(Object, Object)
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.GetAsParameter(object?, object?)
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).GetAsParameter(Object, Object)
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.GetAsParameter(object?, object?)
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).GetAsParameter(Object, Object)
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.GetAsParameter(System.Object)
  name: GetAsParameter(object?)
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_GetAsParameter_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.GetAsParameter(System.Object)
  name.vb: GetAsParameter(Object)
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.GetAsParameter(object?)
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).GetAsParameter(Object)
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.GetAsParameter(object?)
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).GetAsParameter(Object)
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.GetAsParameter*
  name: GetAsParameter
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_GetAsParameter_
  commentId: Overload:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.GetAsParameter
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.GetAsParameter
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).GetAsParameter
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.GetAsParameter
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).GetAsParameter
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.GetValue(BigBook.Dynamo)
  name: GetValue(Dynamo?)
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_GetValue_BigBook_Dynamo_
  commentId: M:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.GetValue(BigBook.Dynamo)
  name.vb: GetValue(Dynamo)
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.GetValue(BigBook.Dynamo?)
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).GetValue(BigBook.Dynamo)
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.GetValue(Dynamo?)
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).GetValue(Dynamo)
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.GetValue(System.Object,System.Object)
  name: GetValue(object?, object?)
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_GetValue_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.GetValue(System.Object,System.Object)
  name.vb: GetValue(Object, Object)
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.GetValue(object?, object?)
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).GetValue(Object, Object)
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.GetValue(object?, object?)
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).GetValue(Object, Object)
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.GetValue(System.Object)
  name: GetValue(object?)
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_GetValue_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.GetValue(System.Object)
  name.vb: GetValue(Object)
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.GetValue(object?)
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).GetValue(Object)
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.GetValue(object?)
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).GetValue(Object)
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.GetValue*
  name: GetValue
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_GetValue_
  commentId: Overload:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.GetValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.GetValue
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).GetValue
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.GetValue
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).GetValue
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.IsDefault(System.Object,System.Object)
  name: IsDefault(object, object)
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_IsDefault_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.IsDefault(System.Object,System.Object)
  name.vb: IsDefault(Object, Object)
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.IsDefault(object, object)
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).IsDefault(Object, Object)
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.IsDefault(object, object)
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).IsDefault(Object, Object)
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.IsDefault(System.Object)
  name: IsDefault(object)
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_IsDefault_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.IsDefault(System.Object)
  name.vb: IsDefault(Object)
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.IsDefault(object)
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).IsDefault(Object)
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.IsDefault(object)
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).IsDefault(Object)
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.IsDefault*
  name: IsDefault
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_IsDefault_
  commentId: Overload:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.IsDefault
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.IsDefault
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).IsDefault
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.IsDefault
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).IsDefault
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.IsForeign
  name: IsForeign
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_IsForeign
  commentId: P:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.IsForeign
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.IsForeign
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).IsForeign
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.IsForeign
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).IsForeign
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.IsForeign*
  name: IsForeign
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_IsForeign_
  commentId: Overload:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.IsForeign
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.IsForeign
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).IsForeign
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.IsForeign
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).IsForeign
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.IsNullable
  name: IsNullable
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_IsNullable
  commentId: P:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.IsNullable
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.IsNullable
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).IsNullable
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.IsNullable
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).IsNullable
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.IsNullable*
  name: IsNullable
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_IsNullable_
  commentId: Overload:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.IsNullable
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.IsNullable
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).IsNullable
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.IsNullable
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).IsNullable
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.PropertyName
  name: PropertyName
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_PropertyName
  commentId: P:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.PropertyName
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.PropertyName
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).PropertyName
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.PropertyName
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).PropertyName
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.PropertyName*
  name: PropertyName
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_PropertyName_
  commentId: Overload:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.PropertyName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.PropertyName
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).PropertyName
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.PropertyName
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).PropertyName
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.PropertyType
  name: PropertyType
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_PropertyType
  commentId: P:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.PropertyType
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.PropertyType
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).PropertyType
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.PropertyType
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).PropertyType
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.PropertyType*
  name: PropertyType
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_PropertyType_
  commentId: Overload:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.PropertyType
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.PropertyType
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).PropertyType
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.PropertyType
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).PropertyType
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.SchemaName
  name: SchemaName
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_SchemaName
  commentId: P:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.SchemaName
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.SchemaName
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).SchemaName
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.SchemaName
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).SchemaName
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.SchemaName*
  name: SchemaName
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_SchemaName_
  commentId: Overload:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.SchemaName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.SchemaName
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).SchemaName
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.SchemaName
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).SchemaName
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.SetAction
  name: SetAction
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_SetAction
  commentId: P:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.SetAction
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.SetAction
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).SetAction
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.SetAction
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).SetAction
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.SetAction*
  name: SetAction
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_SetAction_
  commentId: Overload:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.SetAction
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.SetAction
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).SetAction
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.SetAction
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).SetAction
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.SetValue(System.Object,System.Object,System.Object)
  name: SetValue(object, object, object)
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_SetValue_System_Object_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.SetValue(System.Object,System.Object,System.Object)
  name.vb: SetValue(Object, Object, Object)
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.SetValue(object, object, object)
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).SetValue(Object, Object, Object)
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.SetValue(object, object, object)
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).SetValue(Object, Object, Object)
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.SetValue(System.Object,System.Object)
  name: SetValue(object, object)
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_SetValue_System_Object_System_Object_
  commentId: M:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.SetValue(System.Object,System.Object)
  name.vb: SetValue(Object, Object)
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.SetValue(object, object)
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).SetValue(Object, Object)
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.SetValue(object, object)
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).SetValue(Object, Object)
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.SetValue*
  name: SetValue
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_SetValue_
  commentId: Overload:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.SetValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.SetValue
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).SetValue
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.SetValue
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).SetValue
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.TableName
  name: TableName
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_TableName
  commentId: P:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.TableName
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.TableName
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).TableName
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.TableName
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).TableName
- uid: Inflatable.ClassMapper.Column.SimpleColumnInfo`2.TableName*
  name: TableName
  href: api/Inflatable.ClassMapper.Column.SimpleColumnInfo-2.html#Inflatable_ClassMapper_Column_SimpleColumnInfo_2_TableName_
  commentId: Overload:Inflatable.ClassMapper.Column.SimpleColumnInfo`2.TableName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Column.SimpleColumnInfo<TClassType, TDataType>.TableName
  fullName.vb: Inflatable.ClassMapper.Column.SimpleColumnInfo(Of TClassType, TDataType).TableName
  nameWithType: SimpleColumnInfo<TClassType, TDataType>.TableName
  nameWithType.vb: SimpleColumnInfo(Of TClassType, TDataType).TableName
- uid: Inflatable.ClassMapper.Default
  name: Inflatable.ClassMapper.Default
  href: api/Inflatable.ClassMapper.Default.html
  commentId: N:Inflatable.ClassMapper.Default
  fullName: Inflatable.ClassMapper.Default
  nameWithType: Inflatable.ClassMapper.Default
- uid: Inflatable.ClassMapper.Default.AutoID
  name: AutoID
  href: api/Inflatable.ClassMapper.Default.AutoID.html
  commentId: T:Inflatable.ClassMapper.Default.AutoID
  fullName: Inflatable.ClassMapper.Default.AutoID
  nameWithType: AutoID
- uid: Inflatable.ClassMapper.Default.AutoID.#ctor(System.String,Inflatable.Interfaces.IMapping)
  name: AutoID(string, IMapping)
  href: api/Inflatable.ClassMapper.Default.AutoID.html#Inflatable_ClassMapper_Default_AutoID__ctor_System_String_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.Default.AutoID.#ctor(System.String,Inflatable.Interfaces.IMapping)
  name.vb: New(String, IMapping)
  fullName: Inflatable.ClassMapper.Default.AutoID.AutoID(string, Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.Default.AutoID.New(String, Inflatable.Interfaces.IMapping)
  nameWithType: AutoID.AutoID(string, IMapping)
  nameWithType.vb: AutoID.New(String, IMapping)
- uid: Inflatable.ClassMapper.Default.AutoID.#ctor*
  name: AutoID
  href: api/Inflatable.ClassMapper.Default.AutoID.html#Inflatable_ClassMapper_Default_AutoID__ctor_
  commentId: Overload:Inflatable.ClassMapper.Default.AutoID.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.ClassMapper.Default.AutoID.AutoID
  fullName.vb: Inflatable.ClassMapper.Default.AutoID.New
  nameWithType: AutoID.AutoID
  nameWithType.vb: AutoID.New
- uid: Inflatable.ClassMapper.Default.AutoID.AddToChildTable(Data.Modeler.Providers.Interfaces.ITable)
  name: AddToChildTable(ITable)
  href: api/Inflatable.ClassMapper.Default.AutoID.html#Inflatable_ClassMapper_Default_AutoID_AddToChildTable_Data_Modeler_Providers_Interfaces_ITable_
  commentId: M:Inflatable.ClassMapper.Default.AutoID.AddToChildTable(Data.Modeler.Providers.Interfaces.ITable)
  fullName: Inflatable.ClassMapper.Default.AutoID.AddToChildTable(Data.Modeler.Providers.Interfaces.ITable)
  nameWithType: AutoID.AddToChildTable(ITable)
- uid: Inflatable.ClassMapper.Default.AutoID.AddToChildTable*
  name: AddToChildTable
  href: api/Inflatable.ClassMapper.Default.AutoID.html#Inflatable_ClassMapper_Default_AutoID_AddToChildTable_
  commentId: Overload:Inflatable.ClassMapper.Default.AutoID.AddToChildTable
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.AutoID.AddToChildTable
  nameWithType: AutoID.AddToChildTable
- uid: Inflatable.ClassMapper.Default.AutoID.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  name: AddToTable(ITable)
  href: api/Inflatable.ClassMapper.Default.AutoID.html#Inflatable_ClassMapper_Default_AutoID_AddToTable_Data_Modeler_Providers_Interfaces_ITable_
  commentId: M:Inflatable.ClassMapper.Default.AutoID.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  fullName: Inflatable.ClassMapper.Default.AutoID.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  nameWithType: AutoID.AddToTable(ITable)
- uid: Inflatable.ClassMapper.Default.AutoID.AddToTable*
  name: AddToTable
  href: api/Inflatable.ClassMapper.Default.AutoID.html#Inflatable_ClassMapper_Default_AutoID_AddToTable_
  commentId: Overload:Inflatable.ClassMapper.Default.AutoID.AddToTable
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.AutoID.AddToTable
  nameWithType: AutoID.AddToTable
- uid: Inflatable.ClassMapper.Default.AutoID.ColumnName
  name: ColumnName
  href: api/Inflatable.ClassMapper.Default.AutoID.html#Inflatable_ClassMapper_Default_AutoID_ColumnName
  commentId: P:Inflatable.ClassMapper.Default.AutoID.ColumnName
  fullName: Inflatable.ClassMapper.Default.AutoID.ColumnName
  nameWithType: AutoID.ColumnName
- uid: Inflatable.ClassMapper.Default.AutoID.ColumnName*
  name: ColumnName
  href: api/Inflatable.ClassMapper.Default.AutoID.html#Inflatable_ClassMapper_Default_AutoID_ColumnName_
  commentId: Overload:Inflatable.ClassMapper.Default.AutoID.ColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.AutoID.ColumnName
  nameWithType: AutoID.ColumnName
- uid: Inflatable.ClassMapper.Default.AutoID.ParentMapping
  name: ParentMapping
  href: api/Inflatable.ClassMapper.Default.AutoID.html#Inflatable_ClassMapper_Default_AutoID_ParentMapping
  commentId: P:Inflatable.ClassMapper.Default.AutoID.ParentMapping
  fullName: Inflatable.ClassMapper.Default.AutoID.ParentMapping
  nameWithType: AutoID.ParentMapping
- uid: Inflatable.ClassMapper.Default.AutoID.ParentMapping*
  name: ParentMapping
  href: api/Inflatable.ClassMapper.Default.AutoID.html#Inflatable_ClassMapper_Default_AutoID_ParentMapping_
  commentId: Overload:Inflatable.ClassMapper.Default.AutoID.ParentMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.AutoID.ParentMapping
  nameWithType: AutoID.ParentMapping
- uid: Inflatable.ClassMapper.Default.AutoID.Setup
  name: Setup()
  href: api/Inflatable.ClassMapper.Default.AutoID.html#Inflatable_ClassMapper_Default_AutoID_Setup
  commentId: M:Inflatable.ClassMapper.Default.AutoID.Setup
  fullName: Inflatable.ClassMapper.Default.AutoID.Setup()
  nameWithType: AutoID.Setup()
- uid: Inflatable.ClassMapper.Default.AutoID.Setup*
  name: Setup
  href: api/Inflatable.ClassMapper.Default.AutoID.html#Inflatable_ClassMapper_Default_AutoID_Setup_
  commentId: Overload:Inflatable.ClassMapper.Default.AutoID.Setup
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.AutoID.Setup
  nameWithType: AutoID.Setup
- uid: Inflatable.ClassMapper.Default.AutoID.ToString
  name: ToString()
  href: api/Inflatable.ClassMapper.Default.AutoID.html#Inflatable_ClassMapper_Default_AutoID_ToString
  commentId: M:Inflatable.ClassMapper.Default.AutoID.ToString
  fullName: Inflatable.ClassMapper.Default.AutoID.ToString()
  nameWithType: AutoID.ToString()
- uid: Inflatable.ClassMapper.Default.AutoID.ToString*
  name: ToString
  href: api/Inflatable.ClassMapper.Default.AutoID.html#Inflatable_ClassMapper_Default_AutoID_ToString_
  commentId: Overload:Inflatable.ClassMapper.Default.AutoID.ToString
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.AutoID.ToString
  nameWithType: AutoID.ToString
- uid: Inflatable.ClassMapper.Default.ID`2
  name: ID<ClassType, DataType>
  href: api/Inflatable.ClassMapper.Default.ID-2.html
  commentId: T:Inflatable.ClassMapper.Default.ID`2
  name.vb: ID(Of ClassType, DataType)
  fullName: Inflatable.ClassMapper.Default.ID<ClassType, DataType>
  fullName.vb: Inflatable.ClassMapper.Default.ID(Of ClassType, DataType)
  nameWithType: ID<ClassType, DataType>
  nameWithType.vb: ID(Of ClassType, DataType)
- uid: Inflatable.ClassMapper.Default.ID`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},Inflatable.Interfaces.IMapping)
  name: ID(Expression<Func<ClassType, DataType>>, IMapping)
  href: api/Inflatable.ClassMapper.Default.ID-2.html#Inflatable_ClassMapper_Default_ID_2__ctor_System_Linq_Expressions_Expression_System_Func__0__1___Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.Default.ID`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},Inflatable.Interfaces.IMapping)
  name.vb: New(Expression(Of Func(Of ClassType, DataType)), IMapping)
  fullName: Inflatable.ClassMapper.Default.ID<ClassType, DataType>.ID(System.Linq.Expressions.Expression<System.Func<ClassType, DataType>>, Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.Default.ID(Of ClassType, DataType).New(System.Linq.Expressions.Expression(Of System.Func(Of ClassType, DataType)), Inflatable.Interfaces.IMapping)
  nameWithType: ID<ClassType, DataType>.ID(Expression<Func<ClassType, DataType>>, IMapping)
  nameWithType.vb: ID(Of ClassType, DataType).New(Expression(Of Func(Of ClassType, DataType)), IMapping)
- uid: Inflatable.ClassMapper.Default.ID`2.#ctor*
  name: ID
  href: api/Inflatable.ClassMapper.Default.ID-2.html#Inflatable_ClassMapper_Default_ID_2__ctor_
  commentId: Overload:Inflatable.ClassMapper.Default.ID`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.ClassMapper.Default.ID<ClassType, DataType>.ID
  fullName.vb: Inflatable.ClassMapper.Default.ID(Of ClassType, DataType).New
  nameWithType: ID<ClassType, DataType>.ID
  nameWithType.vb: ID(Of ClassType, DataType).New
- uid: Inflatable.ClassMapper.Default.ID`2.Convert*
  name: Convert
  href: api/Inflatable.ClassMapper.Default.ID-2.html#Inflatable_ClassMapper_Default_ID_2_Convert_
  commentId: Overload:Inflatable.ClassMapper.Default.ID`2.Convert
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.ID<ClassType, DataType>.Convert
  fullName.vb: Inflatable.ClassMapper.Default.ID(Of ClassType, DataType).Convert
  nameWithType: ID<ClassType, DataType>.Convert
  nameWithType.vb: ID(Of ClassType, DataType).Convert
- uid: Inflatable.ClassMapper.Default.ID`2.Convert``1(Inflatable.Interfaces.IMapping)
  name: Convert<TResult>(IMapping)
  href: api/Inflatable.ClassMapper.Default.ID-2.html#Inflatable_ClassMapper_Default_ID_2_Convert__1_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.Default.ID`2.Convert``1(Inflatable.Interfaces.IMapping)
  name.vb: Convert(Of TResult)(IMapping)
  fullName: Inflatable.ClassMapper.Default.ID<ClassType, DataType>.Convert<TResult>(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.Default.ID(Of ClassType, DataType).Convert(Of TResult)(Inflatable.Interfaces.IMapping)
  nameWithType: ID<ClassType, DataType>.Convert<TResult>(IMapping)
  nameWithType.vb: ID(Of ClassType, DataType).Convert(Of TResult)(IMapping)
- uid: Inflatable.ClassMapper.Default.ID`2.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  name: SetColumnInfo(IMappingSource?)
  href: api/Inflatable.ClassMapper.Default.ID-2.html#Inflatable_ClassMapper_Default_ID_2_SetColumnInfo_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.ClassMapper.Default.ID`2.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  name.vb: SetColumnInfo(IMappingSource)
  fullName: Inflatable.ClassMapper.Default.ID<ClassType, DataType>.SetColumnInfo(Inflatable.ClassMapper.IMappingSource?)
  fullName.vb: Inflatable.ClassMapper.Default.ID(Of ClassType, DataType).SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  nameWithType: ID<ClassType, DataType>.SetColumnInfo(IMappingSource?)
  nameWithType.vb: ID(Of ClassType, DataType).SetColumnInfo(IMappingSource)
- uid: Inflatable.ClassMapper.Default.ID`2.SetColumnInfo*
  name: SetColumnInfo
  href: api/Inflatable.ClassMapper.Default.ID-2.html#Inflatable_ClassMapper_Default_ID_2_SetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.Default.ID`2.SetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.ID<ClassType, DataType>.SetColumnInfo
  fullName.vb: Inflatable.ClassMapper.Default.ID(Of ClassType, DataType).SetColumnInfo
  nameWithType: ID<ClassType, DataType>.SetColumnInfo
  nameWithType.vb: ID(Of ClassType, DataType).SetColumnInfo
- uid: Inflatable.ClassMapper.Default.ID`2.Setup
  name: Setup()
  href: api/Inflatable.ClassMapper.Default.ID-2.html#Inflatable_ClassMapper_Default_ID_2_Setup
  commentId: M:Inflatable.ClassMapper.Default.ID`2.Setup
  fullName: Inflatable.ClassMapper.Default.ID<ClassType, DataType>.Setup()
  fullName.vb: Inflatable.ClassMapper.Default.ID(Of ClassType, DataType).Setup()
  nameWithType: ID<ClassType, DataType>.Setup()
  nameWithType.vb: ID(Of ClassType, DataType).Setup()
- uid: Inflatable.ClassMapper.Default.ID`2.Setup*
  name: Setup
  href: api/Inflatable.ClassMapper.Default.ID-2.html#Inflatable_ClassMapper_Default_ID_2_Setup_
  commentId: Overload:Inflatable.ClassMapper.Default.ID`2.Setup
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.ID<ClassType, DataType>.Setup
  fullName.vb: Inflatable.ClassMapper.Default.ID(Of ClassType, DataType).Setup
  nameWithType: ID<ClassType, DataType>.Setup
  nameWithType.vb: ID(Of ClassType, DataType).Setup
- uid: Inflatable.ClassMapper.Default.ManyToMany`2
  name: ManyToMany<TClassType, TDataType>
  href: api/Inflatable.ClassMapper.Default.ManyToMany-2.html
  commentId: T:Inflatable.ClassMapper.Default.ManyToMany`2
  name.vb: ManyToMany(Of TClassType, TDataType)
  fullName: Inflatable.ClassMapper.Default.ManyToMany<TClassType, TDataType>
  fullName.vb: Inflatable.ClassMapper.Default.ManyToMany(Of TClassType, TDataType)
  nameWithType: ManyToMany<TClassType, TDataType>
  nameWithType.vb: ManyToMany(Of TClassType, TDataType)
- uid: Inflatable.ClassMapper.Default.ManyToMany`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{`1}}},Inflatable.Interfaces.IMapping)
  name: ManyToMany(Expression<Func<TClassType, IList<TDataType>>>, IMapping)
  href: api/Inflatable.ClassMapper.Default.ManyToMany-2.html#Inflatable_ClassMapper_Default_ManyToMany_2__ctor_System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_IList__1____Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.Default.ManyToMany`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{`1}}},Inflatable.Interfaces.IMapping)
  name.vb: New(Expression(Of Func(Of TClassType, IList(Of TDataType))), IMapping)
  fullName: Inflatable.ClassMapper.Default.ManyToMany<TClassType, TDataType>.ManyToMany(System.Linq.Expressions.Expression<System.Func<TClassType, System.Collections.Generic.IList<TDataType>>>, Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.Default.ManyToMany(Of TClassType, TDataType).New(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, System.Collections.Generic.IList(Of TDataType))), Inflatable.Interfaces.IMapping)
  nameWithType: ManyToMany<TClassType, TDataType>.ManyToMany(Expression<Func<TClassType, IList<TDataType>>>, IMapping)
  nameWithType.vb: ManyToMany(Of TClassType, TDataType).New(Expression(Of Func(Of TClassType, IList(Of TDataType))), IMapping)
- uid: Inflatable.ClassMapper.Default.ManyToMany`2.#ctor*
  name: ManyToMany
  href: api/Inflatable.ClassMapper.Default.ManyToMany-2.html#Inflatable_ClassMapper_Default_ManyToMany_2__ctor_
  commentId: Overload:Inflatable.ClassMapper.Default.ManyToMany`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.ClassMapper.Default.ManyToMany<TClassType, TDataType>.ManyToMany
  fullName.vb: Inflatable.ClassMapper.Default.ManyToMany(Of TClassType, TDataType).New
  nameWithType: ManyToMany<TClassType, TDataType>.ManyToMany
  nameWithType.vb: ManyToMany(Of TClassType, TDataType).New
- uid: Inflatable.ClassMapper.Default.ManyToMany`2.Convert*
  name: Convert
  href: api/Inflatable.ClassMapper.Default.ManyToMany-2.html#Inflatable_ClassMapper_Default_ManyToMany_2_Convert_
  commentId: Overload:Inflatable.ClassMapper.Default.ManyToMany`2.Convert
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.ManyToMany<TClassType, TDataType>.Convert
  fullName.vb: Inflatable.ClassMapper.Default.ManyToMany(Of TClassType, TDataType).Convert
  nameWithType: ManyToMany<TClassType, TDataType>.Convert
  nameWithType.vb: ManyToMany(Of TClassType, TDataType).Convert
- uid: Inflatable.ClassMapper.Default.ManyToMany`2.Convert``1(Inflatable.Interfaces.IMapping)
  name: Convert<TResult>(IMapping)
  href: api/Inflatable.ClassMapper.Default.ManyToMany-2.html#Inflatable_ClassMapper_Default_ManyToMany_2_Convert__1_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.Default.ManyToMany`2.Convert``1(Inflatable.Interfaces.IMapping)
  name.vb: Convert(Of TResult)(IMapping)
  fullName: Inflatable.ClassMapper.Default.ManyToMany<TClassType, TDataType>.Convert<TResult>(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.Default.ManyToMany(Of TClassType, TDataType).Convert(Of TResult)(Inflatable.Interfaces.IMapping)
  nameWithType: ManyToMany<TClassType, TDataType>.Convert<TResult>(IMapping)
  nameWithType.vb: ManyToMany(Of TClassType, TDataType).Convert(Of TResult)(IMapping)
- uid: Inflatable.ClassMapper.Default.ManyToMany`2.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  name: SetColumnInfo(IMappingSource)
  href: api/Inflatable.ClassMapper.Default.ManyToMany-2.html#Inflatable_ClassMapper_Default_ManyToMany_2_SetColumnInfo_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.ClassMapper.Default.ManyToMany`2.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.ClassMapper.Default.ManyToMany<TClassType, TDataType>.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  fullName.vb: Inflatable.ClassMapper.Default.ManyToMany(Of TClassType, TDataType).SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  nameWithType: ManyToMany<TClassType, TDataType>.SetColumnInfo(IMappingSource)
  nameWithType.vb: ManyToMany(Of TClassType, TDataType).SetColumnInfo(IMappingSource)
- uid: Inflatable.ClassMapper.Default.ManyToMany`2.SetColumnInfo*
  name: SetColumnInfo
  href: api/Inflatable.ClassMapper.Default.ManyToMany-2.html#Inflatable_ClassMapper_Default_ManyToMany_2_SetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.Default.ManyToMany`2.SetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.ManyToMany<TClassType, TDataType>.SetColumnInfo
  fullName.vb: Inflatable.ClassMapper.Default.ManyToMany(Of TClassType, TDataType).SetColumnInfo
  nameWithType: ManyToMany<TClassType, TDataType>.SetColumnInfo
  nameWithType.vb: ManyToMany(Of TClassType, TDataType).SetColumnInfo
- uid: Inflatable.ClassMapper.Default.ManyToMany`2.Setup(Inflatable.ClassMapper.IMappingSource,Data.Modeler.Providers.Interfaces.ISource)
  name: Setup(IMappingSource, ISource)
  href: api/Inflatable.ClassMapper.Default.ManyToMany-2.html#Inflatable_ClassMapper_Default_ManyToMany_2_Setup_Inflatable_ClassMapper_IMappingSource_Data_Modeler_Providers_Interfaces_ISource_
  commentId: M:Inflatable.ClassMapper.Default.ManyToMany`2.Setup(Inflatable.ClassMapper.IMappingSource,Data.Modeler.Providers.Interfaces.ISource)
  fullName: Inflatable.ClassMapper.Default.ManyToMany<TClassType, TDataType>.Setup(Inflatable.ClassMapper.IMappingSource, Data.Modeler.Providers.Interfaces.ISource)
  fullName.vb: Inflatable.ClassMapper.Default.ManyToMany(Of TClassType, TDataType).Setup(Inflatable.ClassMapper.IMappingSource, Data.Modeler.Providers.Interfaces.ISource)
  nameWithType: ManyToMany<TClassType, TDataType>.Setup(IMappingSource, ISource)
  nameWithType.vb: ManyToMany(Of TClassType, TDataType).Setup(IMappingSource, ISource)
- uid: Inflatable.ClassMapper.Default.ManyToMany`2.Setup*
  name: Setup
  href: api/Inflatable.ClassMapper.Default.ManyToMany-2.html#Inflatable_ClassMapper_Default_ManyToMany_2_Setup_
  commentId: Overload:Inflatable.ClassMapper.Default.ManyToMany`2.Setup
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.ManyToMany<TClassType, TDataType>.Setup
  fullName.vb: Inflatable.ClassMapper.Default.ManyToMany(Of TClassType, TDataType).Setup
  nameWithType: ManyToMany<TClassType, TDataType>.Setup
  nameWithType.vb: ManyToMany(Of TClassType, TDataType).Setup
- uid: Inflatable.ClassMapper.Default.ManyToOneMany`2
  name: ManyToOneMany<TClassType, TDataType>
  href: api/Inflatable.ClassMapper.Default.ManyToOneMany-2.html
  commentId: T:Inflatable.ClassMapper.Default.ManyToOneMany`2
  name.vb: ManyToOneMany(Of TClassType, TDataType)
  fullName: Inflatable.ClassMapper.Default.ManyToOneMany<TClassType, TDataType>
  fullName.vb: Inflatable.ClassMapper.Default.ManyToOneMany(Of TClassType, TDataType)
  nameWithType: ManyToOneMany<TClassType, TDataType>
  nameWithType.vb: ManyToOneMany(Of TClassType, TDataType)
- uid: Inflatable.ClassMapper.Default.ManyToOneMany`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{`1}}},Inflatable.Interfaces.IMapping)
  name: ManyToOneMany(Expression<Func<TClassType, IList<TDataType>>>, IMapping)
  href: api/Inflatable.ClassMapper.Default.ManyToOneMany-2.html#Inflatable_ClassMapper_Default_ManyToOneMany_2__ctor_System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_IList__1____Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.Default.ManyToOneMany`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{`1}}},Inflatable.Interfaces.IMapping)
  name.vb: New(Expression(Of Func(Of TClassType, IList(Of TDataType))), IMapping)
  fullName: Inflatable.ClassMapper.Default.ManyToOneMany<TClassType, TDataType>.ManyToOneMany(System.Linq.Expressions.Expression<System.Func<TClassType, System.Collections.Generic.IList<TDataType>>>, Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.Default.ManyToOneMany(Of TClassType, TDataType).New(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, System.Collections.Generic.IList(Of TDataType))), Inflatable.Interfaces.IMapping)
  nameWithType: ManyToOneMany<TClassType, TDataType>.ManyToOneMany(Expression<Func<TClassType, IList<TDataType>>>, IMapping)
  nameWithType.vb: ManyToOneMany(Of TClassType, TDataType).New(Expression(Of Func(Of TClassType, IList(Of TDataType))), IMapping)
- uid: Inflatable.ClassMapper.Default.ManyToOneMany`2.#ctor*
  name: ManyToOneMany
  href: api/Inflatable.ClassMapper.Default.ManyToOneMany-2.html#Inflatable_ClassMapper_Default_ManyToOneMany_2__ctor_
  commentId: Overload:Inflatable.ClassMapper.Default.ManyToOneMany`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.ClassMapper.Default.ManyToOneMany<TClassType, TDataType>.ManyToOneMany
  fullName.vb: Inflatable.ClassMapper.Default.ManyToOneMany(Of TClassType, TDataType).New
  nameWithType: ManyToOneMany<TClassType, TDataType>.ManyToOneMany
  nameWithType.vb: ManyToOneMany(Of TClassType, TDataType).New
- uid: Inflatable.ClassMapper.Default.ManyToOneMany`2.Convert*
  name: Convert
  href: api/Inflatable.ClassMapper.Default.ManyToOneMany-2.html#Inflatable_ClassMapper_Default_ManyToOneMany_2_Convert_
  commentId: Overload:Inflatable.ClassMapper.Default.ManyToOneMany`2.Convert
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.ManyToOneMany<TClassType, TDataType>.Convert
  fullName.vb: Inflatable.ClassMapper.Default.ManyToOneMany(Of TClassType, TDataType).Convert
  nameWithType: ManyToOneMany<TClassType, TDataType>.Convert
  nameWithType.vb: ManyToOneMany(Of TClassType, TDataType).Convert
- uid: Inflatable.ClassMapper.Default.ManyToOneMany`2.Convert``1(Inflatable.Interfaces.IMapping)
  name: Convert<TResult>(IMapping)
  href: api/Inflatable.ClassMapper.Default.ManyToOneMany-2.html#Inflatable_ClassMapper_Default_ManyToOneMany_2_Convert__1_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.Default.ManyToOneMany`2.Convert``1(Inflatable.Interfaces.IMapping)
  name.vb: Convert(Of TResult)(IMapping)
  fullName: Inflatable.ClassMapper.Default.ManyToOneMany<TClassType, TDataType>.Convert<TResult>(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.Default.ManyToOneMany(Of TClassType, TDataType).Convert(Of TResult)(Inflatable.Interfaces.IMapping)
  nameWithType: ManyToOneMany<TClassType, TDataType>.Convert<TResult>(IMapping)
  nameWithType.vb: ManyToOneMany(Of TClassType, TDataType).Convert(Of TResult)(IMapping)
- uid: Inflatable.ClassMapper.Default.ManyToOneMany`2.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  name: SetColumnInfo(IMappingSource)
  href: api/Inflatable.ClassMapper.Default.ManyToOneMany-2.html#Inflatable_ClassMapper_Default_ManyToOneMany_2_SetColumnInfo_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.ClassMapper.Default.ManyToOneMany`2.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.ClassMapper.Default.ManyToOneMany<TClassType, TDataType>.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  fullName.vb: Inflatable.ClassMapper.Default.ManyToOneMany(Of TClassType, TDataType).SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  nameWithType: ManyToOneMany<TClassType, TDataType>.SetColumnInfo(IMappingSource)
  nameWithType.vb: ManyToOneMany(Of TClassType, TDataType).SetColumnInfo(IMappingSource)
- uid: Inflatable.ClassMapper.Default.ManyToOneMany`2.SetColumnInfo*
  name: SetColumnInfo
  href: api/Inflatable.ClassMapper.Default.ManyToOneMany-2.html#Inflatable_ClassMapper_Default_ManyToOneMany_2_SetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.Default.ManyToOneMany`2.SetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.ManyToOneMany<TClassType, TDataType>.SetColumnInfo
  fullName.vb: Inflatable.ClassMapper.Default.ManyToOneMany(Of TClassType, TDataType).SetColumnInfo
  nameWithType: ManyToOneMany<TClassType, TDataType>.SetColumnInfo
  nameWithType.vb: ManyToOneMany(Of TClassType, TDataType).SetColumnInfo
- uid: Inflatable.ClassMapper.Default.ManyToOneMany`2.Setup(Inflatable.ClassMapper.IMappingSource,Data.Modeler.Providers.Interfaces.ISource)
  name: Setup(IMappingSource, ISource)
  href: api/Inflatable.ClassMapper.Default.ManyToOneMany-2.html#Inflatable_ClassMapper_Default_ManyToOneMany_2_Setup_Inflatable_ClassMapper_IMappingSource_Data_Modeler_Providers_Interfaces_ISource_
  commentId: M:Inflatable.ClassMapper.Default.ManyToOneMany`2.Setup(Inflatable.ClassMapper.IMappingSource,Data.Modeler.Providers.Interfaces.ISource)
  fullName: Inflatable.ClassMapper.Default.ManyToOneMany<TClassType, TDataType>.Setup(Inflatable.ClassMapper.IMappingSource, Data.Modeler.Providers.Interfaces.ISource)
  fullName.vb: Inflatable.ClassMapper.Default.ManyToOneMany(Of TClassType, TDataType).Setup(Inflatable.ClassMapper.IMappingSource, Data.Modeler.Providers.Interfaces.ISource)
  nameWithType: ManyToOneMany<TClassType, TDataType>.Setup(IMappingSource, ISource)
  nameWithType.vb: ManyToOneMany(Of TClassType, TDataType).Setup(IMappingSource, ISource)
- uid: Inflatable.ClassMapper.Default.ManyToOneMany`2.Setup*
  name: Setup
  href: api/Inflatable.ClassMapper.Default.ManyToOneMany-2.html#Inflatable_ClassMapper_Default_ManyToOneMany_2_Setup_
  commentId: Overload:Inflatable.ClassMapper.Default.ManyToOneMany`2.Setup
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.ManyToOneMany<TClassType, TDataType>.Setup
  fullName.vb: Inflatable.ClassMapper.Default.ManyToOneMany(Of TClassType, TDataType).Setup
  nameWithType: ManyToOneMany<TClassType, TDataType>.Setup
  nameWithType.vb: ManyToOneMany(Of TClassType, TDataType).Setup
- uid: Inflatable.ClassMapper.Default.ManyToOneSingle`2
  name: ManyToOneSingle<TClassType, TDataType>
  href: api/Inflatable.ClassMapper.Default.ManyToOneSingle-2.html
  commentId: T:Inflatable.ClassMapper.Default.ManyToOneSingle`2
  name.vb: ManyToOneSingle(Of TClassType, TDataType)
  fullName: Inflatable.ClassMapper.Default.ManyToOneSingle<TClassType, TDataType>
  fullName.vb: Inflatable.ClassMapper.Default.ManyToOneSingle(Of TClassType, TDataType)
  nameWithType: ManyToOneSingle<TClassType, TDataType>
  nameWithType.vb: ManyToOneSingle(Of TClassType, TDataType)
- uid: Inflatable.ClassMapper.Default.ManyToOneSingle`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},Inflatable.Interfaces.IMapping)
  name: ManyToOneSingle(Expression<Func<TClassType, TDataType?>>, IMapping)
  href: api/Inflatable.ClassMapper.Default.ManyToOneSingle-2.html#Inflatable_ClassMapper_Default_ManyToOneSingle_2__ctor_System_Linq_Expressions_Expression_System_Func__0__1___Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.Default.ManyToOneSingle`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},Inflatable.Interfaces.IMapping)
  name.vb: New(Expression(Of Func(Of TClassType, TDataType)), IMapping)
  fullName: Inflatable.ClassMapper.Default.ManyToOneSingle<TClassType, TDataType>.ManyToOneSingle(System.Linq.Expressions.Expression<System.Func<TClassType, TDataType?>>, Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.Default.ManyToOneSingle(Of TClassType, TDataType).New(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, TDataType)), Inflatable.Interfaces.IMapping)
  nameWithType: ManyToOneSingle<TClassType, TDataType>.ManyToOneSingle(Expression<Func<TClassType, TDataType?>>, IMapping)
  nameWithType.vb: ManyToOneSingle(Of TClassType, TDataType).New(Expression(Of Func(Of TClassType, TDataType)), IMapping)
- uid: Inflatable.ClassMapper.Default.ManyToOneSingle`2.#ctor*
  name: ManyToOneSingle
  href: api/Inflatable.ClassMapper.Default.ManyToOneSingle-2.html#Inflatable_ClassMapper_Default_ManyToOneSingle_2__ctor_
  commentId: Overload:Inflatable.ClassMapper.Default.ManyToOneSingle`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.ClassMapper.Default.ManyToOneSingle<TClassType, TDataType>.ManyToOneSingle
  fullName.vb: Inflatable.ClassMapper.Default.ManyToOneSingle(Of TClassType, TDataType).New
  nameWithType: ManyToOneSingle<TClassType, TDataType>.ManyToOneSingle
  nameWithType.vb: ManyToOneSingle(Of TClassType, TDataType).New
- uid: Inflatable.ClassMapper.Default.ManyToOneSingle`2.Convert*
  name: Convert
  href: api/Inflatable.ClassMapper.Default.ManyToOneSingle-2.html#Inflatable_ClassMapper_Default_ManyToOneSingle_2_Convert_
  commentId: Overload:Inflatable.ClassMapper.Default.ManyToOneSingle`2.Convert
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.ManyToOneSingle<TClassType, TDataType>.Convert
  fullName.vb: Inflatable.ClassMapper.Default.ManyToOneSingle(Of TClassType, TDataType).Convert
  nameWithType: ManyToOneSingle<TClassType, TDataType>.Convert
  nameWithType.vb: ManyToOneSingle(Of TClassType, TDataType).Convert
- uid: Inflatable.ClassMapper.Default.ManyToOneSingle`2.Convert``1(Inflatable.Interfaces.IMapping)
  name: Convert<TResult>(IMapping)
  href: api/Inflatable.ClassMapper.Default.ManyToOneSingle-2.html#Inflatable_ClassMapper_Default_ManyToOneSingle_2_Convert__1_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.Default.ManyToOneSingle`2.Convert``1(Inflatable.Interfaces.IMapping)
  name.vb: Convert(Of TResult)(IMapping)
  fullName: Inflatable.ClassMapper.Default.ManyToOneSingle<TClassType, TDataType>.Convert<TResult>(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.Default.ManyToOneSingle(Of TClassType, TDataType).Convert(Of TResult)(Inflatable.Interfaces.IMapping)
  nameWithType: ManyToOneSingle<TClassType, TDataType>.Convert<TResult>(IMapping)
  nameWithType.vb: ManyToOneSingle(Of TClassType, TDataType).Convert(Of TResult)(IMapping)
- uid: Inflatable.ClassMapper.Default.ManyToOneSingle`2.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  name: SetColumnInfo(IMappingSource)
  href: api/Inflatable.ClassMapper.Default.ManyToOneSingle-2.html#Inflatable_ClassMapper_Default_ManyToOneSingle_2_SetColumnInfo_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.ClassMapper.Default.ManyToOneSingle`2.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.ClassMapper.Default.ManyToOneSingle<TClassType, TDataType>.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  fullName.vb: Inflatable.ClassMapper.Default.ManyToOneSingle(Of TClassType, TDataType).SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  nameWithType: ManyToOneSingle<TClassType, TDataType>.SetColumnInfo(IMappingSource)
  nameWithType.vb: ManyToOneSingle(Of TClassType, TDataType).SetColumnInfo(IMappingSource)
- uid: Inflatable.ClassMapper.Default.ManyToOneSingle`2.SetColumnInfo*
  name: SetColumnInfo
  href: api/Inflatable.ClassMapper.Default.ManyToOneSingle-2.html#Inflatable_ClassMapper_Default_ManyToOneSingle_2_SetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.Default.ManyToOneSingle`2.SetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.ManyToOneSingle<TClassType, TDataType>.SetColumnInfo
  fullName.vb: Inflatable.ClassMapper.Default.ManyToOneSingle(Of TClassType, TDataType).SetColumnInfo
  nameWithType: ManyToOneSingle<TClassType, TDataType>.SetColumnInfo
  nameWithType.vb: ManyToOneSingle(Of TClassType, TDataType).SetColumnInfo
- uid: Inflatable.ClassMapper.Default.ManyToOneSingle`2.Setup(Inflatable.ClassMapper.IMappingSource,Data.Modeler.Providers.Interfaces.ISource)
  name: Setup(IMappingSource, ISource)
  href: api/Inflatable.ClassMapper.Default.ManyToOneSingle-2.html#Inflatable_ClassMapper_Default_ManyToOneSingle_2_Setup_Inflatable_ClassMapper_IMappingSource_Data_Modeler_Providers_Interfaces_ISource_
  commentId: M:Inflatable.ClassMapper.Default.ManyToOneSingle`2.Setup(Inflatable.ClassMapper.IMappingSource,Data.Modeler.Providers.Interfaces.ISource)
  fullName: Inflatable.ClassMapper.Default.ManyToOneSingle<TClassType, TDataType>.Setup(Inflatable.ClassMapper.IMappingSource, Data.Modeler.Providers.Interfaces.ISource)
  fullName.vb: Inflatable.ClassMapper.Default.ManyToOneSingle(Of TClassType, TDataType).Setup(Inflatable.ClassMapper.IMappingSource, Data.Modeler.Providers.Interfaces.ISource)
  nameWithType: ManyToOneSingle<TClassType, TDataType>.Setup(IMappingSource, ISource)
  nameWithType.vb: ManyToOneSingle(Of TClassType, TDataType).Setup(IMappingSource, ISource)
- uid: Inflatable.ClassMapper.Default.ManyToOneSingle`2.Setup*
  name: Setup
  href: api/Inflatable.ClassMapper.Default.ManyToOneSingle-2.html#Inflatable_ClassMapper_Default_ManyToOneSingle_2_Setup_
  commentId: Overload:Inflatable.ClassMapper.Default.ManyToOneSingle`2.Setup
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.ManyToOneSingle<TClassType, TDataType>.Setup
  fullName.vb: Inflatable.ClassMapper.Default.ManyToOneSingle(Of TClassType, TDataType).Setup
  nameWithType: ManyToOneSingle<TClassType, TDataType>.Setup
  nameWithType.vb: ManyToOneSingle(Of TClassType, TDataType).Setup
- uid: Inflatable.ClassMapper.Default.Map`2
  name: Map<TClassType, TDataType>
  href: api/Inflatable.ClassMapper.Default.Map-2.html
  commentId: T:Inflatable.ClassMapper.Default.Map`2
  name.vb: Map(Of TClassType, TDataType)
  fullName: Inflatable.ClassMapper.Default.Map<TClassType, TDataType>
  fullName.vb: Inflatable.ClassMapper.Default.Map(Of TClassType, TDataType)
  nameWithType: Map<TClassType, TDataType>
  nameWithType.vb: Map(Of TClassType, TDataType)
- uid: Inflatable.ClassMapper.Default.Map`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},Inflatable.Interfaces.IMapping)
  name: Map(Expression<Func<TClassType, TDataType?>>, IMapping)
  href: api/Inflatable.ClassMapper.Default.Map-2.html#Inflatable_ClassMapper_Default_Map_2__ctor_System_Linq_Expressions_Expression_System_Func__0__1___Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.Default.Map`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},Inflatable.Interfaces.IMapping)
  name.vb: New(Expression(Of Func(Of TClassType, TDataType)), IMapping)
  fullName: Inflatable.ClassMapper.Default.Map<TClassType, TDataType>.Map(System.Linq.Expressions.Expression<System.Func<TClassType, TDataType?>>, Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.Default.Map(Of TClassType, TDataType).New(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, TDataType)), Inflatable.Interfaces.IMapping)
  nameWithType: Map<TClassType, TDataType>.Map(Expression<Func<TClassType, TDataType?>>, IMapping)
  nameWithType.vb: Map(Of TClassType, TDataType).New(Expression(Of Func(Of TClassType, TDataType)), IMapping)
- uid: Inflatable.ClassMapper.Default.Map`2.#ctor*
  name: Map
  href: api/Inflatable.ClassMapper.Default.Map-2.html#Inflatable_ClassMapper_Default_Map_2__ctor_
  commentId: Overload:Inflatable.ClassMapper.Default.Map`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.ClassMapper.Default.Map<TClassType, TDataType>.Map
  fullName.vb: Inflatable.ClassMapper.Default.Map(Of TClassType, TDataType).New
  nameWithType: Map<TClassType, TDataType>.Map
  nameWithType.vb: Map(Of TClassType, TDataType).New
- uid: Inflatable.ClassMapper.Default.Map`2.Convert*
  name: Convert
  href: api/Inflatable.ClassMapper.Default.Map-2.html#Inflatable_ClassMapper_Default_Map_2_Convert_
  commentId: Overload:Inflatable.ClassMapper.Default.Map`2.Convert
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.Map<TClassType, TDataType>.Convert
  fullName.vb: Inflatable.ClassMapper.Default.Map(Of TClassType, TDataType).Convert
  nameWithType: Map<TClassType, TDataType>.Convert
  nameWithType.vb: Map(Of TClassType, TDataType).Convert
- uid: Inflatable.ClassMapper.Default.Map`2.Convert``1(Inflatable.Interfaces.IMapping)
  name: Convert<TResult>(IMapping)
  href: api/Inflatable.ClassMapper.Default.Map-2.html#Inflatable_ClassMapper_Default_Map_2_Convert__1_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.Default.Map`2.Convert``1(Inflatable.Interfaces.IMapping)
  name.vb: Convert(Of TResult)(IMapping)
  fullName: Inflatable.ClassMapper.Default.Map<TClassType, TDataType>.Convert<TResult>(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.Default.Map(Of TClassType, TDataType).Convert(Of TResult)(Inflatable.Interfaces.IMapping)
  nameWithType: Map<TClassType, TDataType>.Convert<TResult>(IMapping)
  nameWithType.vb: Map(Of TClassType, TDataType).Convert(Of TResult)(IMapping)
- uid: Inflatable.ClassMapper.Default.Map`2.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  name: SetColumnInfo(IMappingSource)
  href: api/Inflatable.ClassMapper.Default.Map-2.html#Inflatable_ClassMapper_Default_Map_2_SetColumnInfo_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.ClassMapper.Default.Map`2.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.ClassMapper.Default.Map<TClassType, TDataType>.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  fullName.vb: Inflatable.ClassMapper.Default.Map(Of TClassType, TDataType).SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  nameWithType: Map<TClassType, TDataType>.SetColumnInfo(IMappingSource)
  nameWithType.vb: Map(Of TClassType, TDataType).SetColumnInfo(IMappingSource)
- uid: Inflatable.ClassMapper.Default.Map`2.SetColumnInfo*
  name: SetColumnInfo
  href: api/Inflatable.ClassMapper.Default.Map-2.html#Inflatable_ClassMapper_Default_Map_2_SetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.Default.Map`2.SetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.Map<TClassType, TDataType>.SetColumnInfo
  fullName.vb: Inflatable.ClassMapper.Default.Map(Of TClassType, TDataType).SetColumnInfo
  nameWithType: Map<TClassType, TDataType>.SetColumnInfo
  nameWithType.vb: Map(Of TClassType, TDataType).SetColumnInfo
- uid: Inflatable.ClassMapper.Default.Map`2.Setup(Inflatable.ClassMapper.IMappingSource)
  name: Setup(IMappingSource)
  href: api/Inflatable.ClassMapper.Default.Map-2.html#Inflatable_ClassMapper_Default_Map_2_Setup_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.ClassMapper.Default.Map`2.Setup(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.ClassMapper.Default.Map<TClassType, TDataType>.Setup(Inflatable.ClassMapper.IMappingSource)
  fullName.vb: Inflatable.ClassMapper.Default.Map(Of TClassType, TDataType).Setup(Inflatable.ClassMapper.IMappingSource)
  nameWithType: Map<TClassType, TDataType>.Setup(IMappingSource)
  nameWithType.vb: Map(Of TClassType, TDataType).Setup(IMappingSource)
- uid: Inflatable.ClassMapper.Default.Map`2.Setup*
  name: Setup
  href: api/Inflatable.ClassMapper.Default.Map-2.html#Inflatable_ClassMapper_Default_Map_2_Setup_
  commentId: Overload:Inflatable.ClassMapper.Default.Map`2.Setup
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.Map<TClassType, TDataType>.Setup
  fullName.vb: Inflatable.ClassMapper.Default.Map(Of TClassType, TDataType).Setup
  nameWithType: Map<TClassType, TDataType>.Setup
  nameWithType.vb: Map(Of TClassType, TDataType).Setup
- uid: Inflatable.ClassMapper.Default.Reference`2
  name: Reference<ClassType, DataType>
  href: api/Inflatable.ClassMapper.Default.Reference-2.html
  commentId: T:Inflatable.ClassMapper.Default.Reference`2
  name.vb: Reference(Of ClassType, DataType)
  fullName: Inflatable.ClassMapper.Default.Reference<ClassType, DataType>
  fullName.vb: Inflatable.ClassMapper.Default.Reference(Of ClassType, DataType)
  nameWithType: Reference<ClassType, DataType>
  nameWithType.vb: Reference(Of ClassType, DataType)
- uid: Inflatable.ClassMapper.Default.Reference`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},Inflatable.Interfaces.IMapping)
  name: Reference(Expression<Func<ClassType, DataType>>, IMapping)
  href: api/Inflatable.ClassMapper.Default.Reference-2.html#Inflatable_ClassMapper_Default_Reference_2__ctor_System_Linq_Expressions_Expression_System_Func__0__1___Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.Default.Reference`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},Inflatable.Interfaces.IMapping)
  name.vb: New(Expression(Of Func(Of ClassType, DataType)), IMapping)
  fullName: Inflatable.ClassMapper.Default.Reference<ClassType, DataType>.Reference(System.Linq.Expressions.Expression<System.Func<ClassType, DataType>>, Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.Default.Reference(Of ClassType, DataType).New(System.Linq.Expressions.Expression(Of System.Func(Of ClassType, DataType)), Inflatable.Interfaces.IMapping)
  nameWithType: Reference<ClassType, DataType>.Reference(Expression<Func<ClassType, DataType>>, IMapping)
  nameWithType.vb: Reference(Of ClassType, DataType).New(Expression(Of Func(Of ClassType, DataType)), IMapping)
- uid: Inflatable.ClassMapper.Default.Reference`2.#ctor*
  name: Reference
  href: api/Inflatable.ClassMapper.Default.Reference-2.html#Inflatable_ClassMapper_Default_Reference_2__ctor_
  commentId: Overload:Inflatable.ClassMapper.Default.Reference`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.ClassMapper.Default.Reference<ClassType, DataType>.Reference
  fullName.vb: Inflatable.ClassMapper.Default.Reference(Of ClassType, DataType).New
  nameWithType: Reference<ClassType, DataType>.Reference
  nameWithType.vb: Reference(Of ClassType, DataType).New
- uid: Inflatable.ClassMapper.Default.Reference`2.Convert*
  name: Convert
  href: api/Inflatable.ClassMapper.Default.Reference-2.html#Inflatable_ClassMapper_Default_Reference_2_Convert_
  commentId: Overload:Inflatable.ClassMapper.Default.Reference`2.Convert
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.Reference<ClassType, DataType>.Convert
  fullName.vb: Inflatable.ClassMapper.Default.Reference(Of ClassType, DataType).Convert
  nameWithType: Reference<ClassType, DataType>.Convert
  nameWithType.vb: Reference(Of ClassType, DataType).Convert
- uid: Inflatable.ClassMapper.Default.Reference`2.Convert``1(Inflatable.Interfaces.IMapping)
  name: Convert<TResult>(IMapping)
  href: api/Inflatable.ClassMapper.Default.Reference-2.html#Inflatable_ClassMapper_Default_Reference_2_Convert__1_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.Default.Reference`2.Convert``1(Inflatable.Interfaces.IMapping)
  name.vb: Convert(Of TResult)(IMapping)
  fullName: Inflatable.ClassMapper.Default.Reference<ClassType, DataType>.Convert<TResult>(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.Default.Reference(Of ClassType, DataType).Convert(Of TResult)(Inflatable.Interfaces.IMapping)
  nameWithType: Reference<ClassType, DataType>.Convert<TResult>(IMapping)
  nameWithType.vb: Reference(Of ClassType, DataType).Convert(Of TResult)(IMapping)
- uid: Inflatable.ClassMapper.Default.Reference`2.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  name: SetColumnInfo(IMappingSource?)
  href: api/Inflatable.ClassMapper.Default.Reference-2.html#Inflatable_ClassMapper_Default_Reference_2_SetColumnInfo_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.ClassMapper.Default.Reference`2.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  name.vb: SetColumnInfo(IMappingSource)
  fullName: Inflatable.ClassMapper.Default.Reference<ClassType, DataType>.SetColumnInfo(Inflatable.ClassMapper.IMappingSource?)
  fullName.vb: Inflatable.ClassMapper.Default.Reference(Of ClassType, DataType).SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  nameWithType: Reference<ClassType, DataType>.SetColumnInfo(IMappingSource?)
  nameWithType.vb: Reference(Of ClassType, DataType).SetColumnInfo(IMappingSource)
- uid: Inflatable.ClassMapper.Default.Reference`2.SetColumnInfo*
  name: SetColumnInfo
  href: api/Inflatable.ClassMapper.Default.Reference-2.html#Inflatable_ClassMapper_Default_Reference_2_SetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.Default.Reference`2.SetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.Reference<ClassType, DataType>.SetColumnInfo
  fullName.vb: Inflatable.ClassMapper.Default.Reference(Of ClassType, DataType).SetColumnInfo
  nameWithType: Reference<ClassType, DataType>.SetColumnInfo
  nameWithType.vb: Reference(Of ClassType, DataType).SetColumnInfo
- uid: Inflatable.ClassMapper.Default.Reference`2.Setup
  name: Setup()
  href: api/Inflatable.ClassMapper.Default.Reference-2.html#Inflatable_ClassMapper_Default_Reference_2_Setup
  commentId: M:Inflatable.ClassMapper.Default.Reference`2.Setup
  fullName: Inflatable.ClassMapper.Default.Reference<ClassType, DataType>.Setup()
  fullName.vb: Inflatable.ClassMapper.Default.Reference(Of ClassType, DataType).Setup()
  nameWithType: Reference<ClassType, DataType>.Setup()
  nameWithType.vb: Reference(Of ClassType, DataType).Setup()
- uid: Inflatable.ClassMapper.Default.Reference`2.Setup*
  name: Setup
  href: api/Inflatable.ClassMapper.Default.Reference-2.html#Inflatable_ClassMapper_Default_Reference_2_Setup_
  commentId: Overload:Inflatable.ClassMapper.Default.Reference`2.Setup
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Default.Reference<ClassType, DataType>.Setup
  fullName.vb: Inflatable.ClassMapper.Default.Reference(Of ClassType, DataType).Setup
  nameWithType: Reference<ClassType, DataType>.Setup
  nameWithType.vb: Reference(Of ClassType, DataType).Setup
- uid: Inflatable.ClassMapper.IMappingSource
  name: IMappingSource
  href: api/Inflatable.ClassMapper.IMappingSource.html
  commentId: T:Inflatable.ClassMapper.IMappingSource
  fullName: Inflatable.ClassMapper.IMappingSource
  nameWithType: IMappingSource
- uid: Inflatable.ClassMapper.IMappingSource.ApplyAnalysis
  name: ApplyAnalysis
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_ApplyAnalysis
  commentId: P:Inflatable.ClassMapper.IMappingSource.ApplyAnalysis
  fullName: Inflatable.ClassMapper.IMappingSource.ApplyAnalysis
  nameWithType: IMappingSource.ApplyAnalysis
- uid: Inflatable.ClassMapper.IMappingSource.ApplyAnalysis*
  name: ApplyAnalysis
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_ApplyAnalysis_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.ApplyAnalysis
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.ApplyAnalysis
  nameWithType: IMappingSource.ApplyAnalysis
- uid: Inflatable.ClassMapper.IMappingSource.CanRead
  name: CanRead
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_CanRead
  commentId: P:Inflatable.ClassMapper.IMappingSource.CanRead
  fullName: Inflatable.ClassMapper.IMappingSource.CanRead
  nameWithType: IMappingSource.CanRead
- uid: Inflatable.ClassMapper.IMappingSource.CanRead*
  name: CanRead
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_CanRead_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.CanRead
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.CanRead
  nameWithType: IMappingSource.CanRead
- uid: Inflatable.ClassMapper.IMappingSource.CanWrite
  name: CanWrite
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_CanWrite
  commentId: P:Inflatable.ClassMapper.IMappingSource.CanWrite
  fullName: Inflatable.ClassMapper.IMappingSource.CanWrite
  nameWithType: IMappingSource.CanWrite
- uid: Inflatable.ClassMapper.IMappingSource.CanWrite*
  name: CanWrite
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_CanWrite_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.CanWrite
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.CanWrite
  nameWithType: IMappingSource.CanWrite
- uid: Inflatable.ClassMapper.IMappingSource.ChildTypes
  name: ChildTypes
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_ChildTypes
  commentId: P:Inflatable.ClassMapper.IMappingSource.ChildTypes
  fullName: Inflatable.ClassMapper.IMappingSource.ChildTypes
  nameWithType: IMappingSource.ChildTypes
- uid: Inflatable.ClassMapper.IMappingSource.ChildTypes*
  name: ChildTypes
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_ChildTypes_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.ChildTypes
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.ChildTypes
  nameWithType: IMappingSource.ChildTypes
- uid: Inflatable.ClassMapper.IMappingSource.ConcreteTypes
  name: ConcreteTypes
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_ConcreteTypes
  commentId: P:Inflatable.ClassMapper.IMappingSource.ConcreteTypes
  fullName: Inflatable.ClassMapper.IMappingSource.ConcreteTypes
  nameWithType: IMappingSource.ConcreteTypes
- uid: Inflatable.ClassMapper.IMappingSource.ConcreteTypes*
  name: ConcreteTypes
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_ConcreteTypes_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.ConcreteTypes
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.ConcreteTypes
  nameWithType: IMappingSource.ConcreteTypes
- uid: Inflatable.ClassMapper.IMappingSource.Equals(System.Object)
  name: Equals(object)
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_Equals_System_Object_
  commentId: M:Inflatable.ClassMapper.IMappingSource.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Inflatable.ClassMapper.IMappingSource.Equals(object)
  fullName.vb: Inflatable.ClassMapper.IMappingSource.Equals(Object)
  nameWithType: IMappingSource.Equals(object)
  nameWithType.vb: IMappingSource.Equals(Object)
- uid: Inflatable.ClassMapper.IMappingSource.Equals*
  name: Equals
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_Equals_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.Equals
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.Equals
  nameWithType: IMappingSource.Equals
- uid: Inflatable.ClassMapper.IMappingSource.GenerateAnalysis
  name: GenerateAnalysis
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_GenerateAnalysis
  commentId: P:Inflatable.ClassMapper.IMappingSource.GenerateAnalysis
  fullName: Inflatable.ClassMapper.IMappingSource.GenerateAnalysis
  nameWithType: IMappingSource.GenerateAnalysis
- uid: Inflatable.ClassMapper.IMappingSource.GenerateAnalysis*
  name: GenerateAnalysis
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_GenerateAnalysis_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.GenerateAnalysis
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.GenerateAnalysis
  nameWithType: IMappingSource.GenerateAnalysis
- uid: Inflatable.ClassMapper.IMappingSource.GenerateSchema
  name: GenerateSchema
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_GenerateSchema
  commentId: P:Inflatable.ClassMapper.IMappingSource.GenerateSchema
  fullName: Inflatable.ClassMapper.IMappingSource.GenerateSchema
  nameWithType: IMappingSource.GenerateSchema
- uid: Inflatable.ClassMapper.IMappingSource.GenerateSchema*
  name: GenerateSchema
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_GenerateSchema_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.GenerateSchema
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.GenerateSchema
  nameWithType: IMappingSource.GenerateSchema
- uid: Inflatable.ClassMapper.IMappingSource.GetChildMappings(System.Type)
  name: GetChildMappings(Type)
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_GetChildMappings_System_Type_
  commentId: M:Inflatable.ClassMapper.IMappingSource.GetChildMappings(System.Type)
  fullName: Inflatable.ClassMapper.IMappingSource.GetChildMappings(System.Type)
  nameWithType: IMappingSource.GetChildMappings(Type)
- uid: Inflatable.ClassMapper.IMappingSource.GetChildMappings*
  name: GetChildMappings
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_GetChildMappings_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.GetChildMappings
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.GetChildMappings
  nameWithType: IMappingSource.GetChildMappings
- uid: Inflatable.ClassMapper.IMappingSource.GetChildMappings``1
  name: GetChildMappings<TObject>()
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_GetChildMappings__1
  commentId: M:Inflatable.ClassMapper.IMappingSource.GetChildMappings``1
  name.vb: GetChildMappings(Of TObject)()
  fullName: Inflatable.ClassMapper.IMappingSource.GetChildMappings<TObject>()
  fullName.vb: Inflatable.ClassMapper.IMappingSource.GetChildMappings(Of TObject)()
  nameWithType: IMappingSource.GetChildMappings<TObject>()
  nameWithType.vb: IMappingSource.GetChildMappings(Of TObject)()
- uid: Inflatable.ClassMapper.IMappingSource.GetHashCode
  name: GetHashCode()
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_GetHashCode
  commentId: M:Inflatable.ClassMapper.IMappingSource.GetHashCode
  fullName: Inflatable.ClassMapper.IMappingSource.GetHashCode()
  nameWithType: IMappingSource.GetHashCode()
- uid: Inflatable.ClassMapper.IMappingSource.GetHashCode*
  name: GetHashCode
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_GetHashCode_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.GetHashCode
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.GetHashCode
  nameWithType: IMappingSource.GetHashCode
- uid: Inflatable.ClassMapper.IMappingSource.GetParentMapping(System.Type)
  name: GetParentMapping(Type)
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_GetParentMapping_System_Type_
  commentId: M:Inflatable.ClassMapper.IMappingSource.GetParentMapping(System.Type)
  fullName: Inflatable.ClassMapper.IMappingSource.GetParentMapping(System.Type)
  nameWithType: IMappingSource.GetParentMapping(Type)
- uid: Inflatable.ClassMapper.IMappingSource.GetParentMapping*
  name: GetParentMapping
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_GetParentMapping_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.GetParentMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.GetParentMapping
  nameWithType: IMappingSource.GetParentMapping
- uid: Inflatable.ClassMapper.IMappingSource.GetParentMapping``1
  name: GetParentMapping<TObject>()
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_GetParentMapping__1
  commentId: M:Inflatable.ClassMapper.IMappingSource.GetParentMapping``1
  name.vb: GetParentMapping(Of TObject)()
  fullName: Inflatable.ClassMapper.IMappingSource.GetParentMapping<TObject>()
  fullName.vb: Inflatable.ClassMapper.IMappingSource.GetParentMapping(Of TObject)()
  nameWithType: IMappingSource.GetParentMapping<TObject>()
  nameWithType.vb: IMappingSource.GetParentMapping(Of TObject)()
- uid: Inflatable.ClassMapper.IMappingSource.Logger
  name: Logger
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_Logger
  commentId: P:Inflatable.ClassMapper.IMappingSource.Logger
  fullName: Inflatable.ClassMapper.IMappingSource.Logger
  nameWithType: IMappingSource.Logger
- uid: Inflatable.ClassMapper.IMappingSource.Logger*
  name: Logger
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_Logger_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.Logger
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.Logger
  nameWithType: IMappingSource.Logger
- uid: Inflatable.ClassMapper.IMappingSource.Mappings
  name: Mappings
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_Mappings
  commentId: P:Inflatable.ClassMapper.IMappingSource.Mappings
  fullName: Inflatable.ClassMapper.IMappingSource.Mappings
  nameWithType: IMappingSource.Mappings
- uid: Inflatable.ClassMapper.IMappingSource.Mappings*
  name: Mappings
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_Mappings_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.Mappings
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.Mappings
  nameWithType: IMappingSource.Mappings
- uid: Inflatable.ClassMapper.IMappingSource.Order
  name: Order
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_Order
  commentId: P:Inflatable.ClassMapper.IMappingSource.Order
  fullName: Inflatable.ClassMapper.IMappingSource.Order
  nameWithType: IMappingSource.Order
- uid: Inflatable.ClassMapper.IMappingSource.Order*
  name: Order
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_Order_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.Order
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.Order
  nameWithType: IMappingSource.Order
- uid: Inflatable.ClassMapper.IMappingSource.ParentTypes
  name: ParentTypes
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_ParentTypes
  commentId: P:Inflatable.ClassMapper.IMappingSource.ParentTypes
  fullName: Inflatable.ClassMapper.IMappingSource.ParentTypes
  nameWithType: IMappingSource.ParentTypes
- uid: Inflatable.ClassMapper.IMappingSource.ParentTypes*
  name: ParentTypes
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_ParentTypes_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.ParentTypes
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.ParentTypes
  nameWithType: IMappingSource.ParentTypes
- uid: Inflatable.ClassMapper.IMappingSource.QueryProvider
  name: QueryProvider
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_QueryProvider
  commentId: P:Inflatable.ClassMapper.IMappingSource.QueryProvider
  fullName: Inflatable.ClassMapper.IMappingSource.QueryProvider
  nameWithType: IMappingSource.QueryProvider
- uid: Inflatable.ClassMapper.IMappingSource.QueryProvider*
  name: QueryProvider
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_QueryProvider_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.QueryProvider
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.QueryProvider
  nameWithType: IMappingSource.QueryProvider
- uid: Inflatable.ClassMapper.IMappingSource.Source
  name: Source
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_Source
  commentId: P:Inflatable.ClassMapper.IMappingSource.Source
  fullName: Inflatable.ClassMapper.IMappingSource.Source
  nameWithType: IMappingSource.Source
- uid: Inflatable.ClassMapper.IMappingSource.Source*
  name: Source
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_Source_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.Source
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.Source
  nameWithType: IMappingSource.Source
- uid: Inflatable.ClassMapper.IMappingSource.ToString
  name: ToString()
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_ToString
  commentId: M:Inflatable.ClassMapper.IMappingSource.ToString
  fullName: Inflatable.ClassMapper.IMappingSource.ToString()
  nameWithType: IMappingSource.ToString()
- uid: Inflatable.ClassMapper.IMappingSource.ToString*
  name: ToString
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_ToString_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.ToString
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.ToString
  nameWithType: IMappingSource.ToString
- uid: Inflatable.ClassMapper.IMappingSource.TypeGraphs
  name: TypeGraphs
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_TypeGraphs
  commentId: P:Inflatable.ClassMapper.IMappingSource.TypeGraphs
  fullName: Inflatable.ClassMapper.IMappingSource.TypeGraphs
  nameWithType: IMappingSource.TypeGraphs
- uid: Inflatable.ClassMapper.IMappingSource.TypeGraphs*
  name: TypeGraphs
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_TypeGraphs_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.TypeGraphs
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.TypeGraphs
  nameWithType: IMappingSource.TypeGraphs
- uid: Inflatable.ClassMapper.IMappingSource.UpdateSchema
  name: UpdateSchema
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_UpdateSchema
  commentId: P:Inflatable.ClassMapper.IMappingSource.UpdateSchema
  fullName: Inflatable.ClassMapper.IMappingSource.UpdateSchema
  nameWithType: IMappingSource.UpdateSchema
- uid: Inflatable.ClassMapper.IMappingSource.UpdateSchema*
  name: UpdateSchema
  href: api/Inflatable.ClassMapper.IMappingSource.html#Inflatable_ClassMapper_IMappingSource_UpdateSchema_
  commentId: Overload:Inflatable.ClassMapper.IMappingSource.UpdateSchema
  isSpec: "True"
  fullName: Inflatable.ClassMapper.IMappingSource.UpdateSchema
  nameWithType: IMappingSource.UpdateSchema
- uid: Inflatable.ClassMapper.Interfaces
  name: Inflatable.ClassMapper.Interfaces
  href: api/Inflatable.ClassMapper.Interfaces.html
  commentId: N:Inflatable.ClassMapper.Interfaces
  fullName: Inflatable.ClassMapper.Interfaces
  nameWithType: Inflatable.ClassMapper.Interfaces
- uid: Inflatable.ClassMapper.Interfaces.IAutoIDProperty
  name: IAutoIDProperty
  href: api/Inflatable.ClassMapper.Interfaces.IAutoIDProperty.html
  commentId: T:Inflatable.ClassMapper.Interfaces.IAutoIDProperty
  fullName: Inflatable.ClassMapper.Interfaces.IAutoIDProperty
  nameWithType: IAutoIDProperty
- uid: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.AddToChildTable(Data.Modeler.Providers.Interfaces.ITable)
  name: AddToChildTable(ITable)
  href: api/Inflatable.ClassMapper.Interfaces.IAutoIDProperty.html#Inflatable_ClassMapper_Interfaces_IAutoIDProperty_AddToChildTable_Data_Modeler_Providers_Interfaces_ITable_
  commentId: M:Inflatable.ClassMapper.Interfaces.IAutoIDProperty.AddToChildTable(Data.Modeler.Providers.Interfaces.ITable)
  fullName: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.AddToChildTable(Data.Modeler.Providers.Interfaces.ITable)
  nameWithType: IAutoIDProperty.AddToChildTable(ITable)
- uid: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.AddToChildTable*
  name: AddToChildTable
  href: api/Inflatable.ClassMapper.Interfaces.IAutoIDProperty.html#Inflatable_ClassMapper_Interfaces_IAutoIDProperty_AddToChildTable_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IAutoIDProperty.AddToChildTable
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.AddToChildTable
  nameWithType: IAutoIDProperty.AddToChildTable
- uid: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  name: AddToTable(ITable)
  href: api/Inflatable.ClassMapper.Interfaces.IAutoIDProperty.html#Inflatable_ClassMapper_Interfaces_IAutoIDProperty_AddToTable_Data_Modeler_Providers_Interfaces_ITable_
  commentId: M:Inflatable.ClassMapper.Interfaces.IAutoIDProperty.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  fullName: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  nameWithType: IAutoIDProperty.AddToTable(ITable)
- uid: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.AddToTable*
  name: AddToTable
  href: api/Inflatable.ClassMapper.Interfaces.IAutoIDProperty.html#Inflatable_ClassMapper_Interfaces_IAutoIDProperty_AddToTable_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IAutoIDProperty.AddToTable
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.AddToTable
  nameWithType: IAutoIDProperty.AddToTable
- uid: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.ColumnName
  name: ColumnName
  href: api/Inflatable.ClassMapper.Interfaces.IAutoIDProperty.html#Inflatable_ClassMapper_Interfaces_IAutoIDProperty_ColumnName
  commentId: P:Inflatable.ClassMapper.Interfaces.IAutoIDProperty.ColumnName
  fullName: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.ColumnName
  nameWithType: IAutoIDProperty.ColumnName
- uid: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.ColumnName*
  name: ColumnName
  href: api/Inflatable.ClassMapper.Interfaces.IAutoIDProperty.html#Inflatable_ClassMapper_Interfaces_IAutoIDProperty_ColumnName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IAutoIDProperty.ColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.ColumnName
  nameWithType: IAutoIDProperty.ColumnName
- uid: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.ParentMapping
  name: ParentMapping
  href: api/Inflatable.ClassMapper.Interfaces.IAutoIDProperty.html#Inflatable_ClassMapper_Interfaces_IAutoIDProperty_ParentMapping
  commentId: P:Inflatable.ClassMapper.Interfaces.IAutoIDProperty.ParentMapping
  fullName: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.ParentMapping
  nameWithType: IAutoIDProperty.ParentMapping
- uid: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.ParentMapping*
  name: ParentMapping
  href: api/Inflatable.ClassMapper.Interfaces.IAutoIDProperty.html#Inflatable_ClassMapper_Interfaces_IAutoIDProperty_ParentMapping_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IAutoIDProperty.ParentMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.ParentMapping
  nameWithType: IAutoIDProperty.ParentMapping
- uid: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.Setup
  name: Setup()
  href: api/Inflatable.ClassMapper.Interfaces.IAutoIDProperty.html#Inflatable_ClassMapper_Interfaces_IAutoIDProperty_Setup
  commentId: M:Inflatable.ClassMapper.Interfaces.IAutoIDProperty.Setup
  fullName: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.Setup()
  nameWithType: IAutoIDProperty.Setup()
- uid: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.Setup*
  name: Setup
  href: api/Inflatable.ClassMapper.Interfaces.IAutoIDProperty.html#Inflatable_ClassMapper_Interfaces_IAutoIDProperty_Setup_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IAutoIDProperty.Setup
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IAutoIDProperty.Setup
  nameWithType: IAutoIDProperty.Setup
- uid: Inflatable.ClassMapper.Interfaces.IClassProperty
  name: IClassProperty
  href: api/Inflatable.ClassMapper.Interfaces.IClassProperty.html
  commentId: T:Inflatable.ClassMapper.Interfaces.IClassProperty
  fullName: Inflatable.ClassMapper.Interfaces.IClassProperty
  nameWithType: IClassProperty
- uid: Inflatable.ClassMapper.Interfaces.IClassProperty.LoadPropertyQuery
  name: LoadPropertyQuery
  href: api/Inflatable.ClassMapper.Interfaces.IClassProperty.html#Inflatable_ClassMapper_Interfaces_IClassProperty_LoadPropertyQuery
  commentId: P:Inflatable.ClassMapper.Interfaces.IClassProperty.LoadPropertyQuery
  fullName: Inflatable.ClassMapper.Interfaces.IClassProperty.LoadPropertyQuery
  nameWithType: IClassProperty.LoadPropertyQuery
- uid: Inflatable.ClassMapper.Interfaces.IClassProperty.LoadPropertyQuery*
  name: LoadPropertyQuery
  href: api/Inflatable.ClassMapper.Interfaces.IClassProperty.html#Inflatable_ClassMapper_Interfaces_IClassProperty_LoadPropertyQuery_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IClassProperty.LoadPropertyQuery
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IClassProperty.LoadPropertyQuery
  nameWithType: IClassProperty.LoadPropertyQuery
- uid: Inflatable.ClassMapper.Interfaces.IClassProperty.Name
  name: Name
  href: api/Inflatable.ClassMapper.Interfaces.IClassProperty.html#Inflatable_ClassMapper_Interfaces_IClassProperty_Name
  commentId: P:Inflatable.ClassMapper.Interfaces.IClassProperty.Name
  fullName: Inflatable.ClassMapper.Interfaces.IClassProperty.Name
  nameWithType: IClassProperty.Name
- uid: Inflatable.ClassMapper.Interfaces.IClassProperty.Name*
  name: Name
  href: api/Inflatable.ClassMapper.Interfaces.IClassProperty.html#Inflatable_ClassMapper_Interfaces_IClassProperty_Name_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IClassProperty.Name
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IClassProperty.Name
  nameWithType: IClassProperty.Name
- uid: Inflatable.ClassMapper.Interfaces.IClassProperty.ParentMapping
  name: ParentMapping
  href: api/Inflatable.ClassMapper.Interfaces.IClassProperty.html#Inflatable_ClassMapper_Interfaces_IClassProperty_ParentMapping
  commentId: P:Inflatable.ClassMapper.Interfaces.IClassProperty.ParentMapping
  fullName: Inflatable.ClassMapper.Interfaces.IClassProperty.ParentMapping
  nameWithType: IClassProperty.ParentMapping
- uid: Inflatable.ClassMapper.Interfaces.IClassProperty.ParentMapping*
  name: ParentMapping
  href: api/Inflatable.ClassMapper.Interfaces.IClassProperty.html#Inflatable_ClassMapper_Interfaces_IClassProperty_ParentMapping_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IClassProperty.ParentMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IClassProperty.ParentMapping
  nameWithType: IClassProperty.ParentMapping
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty
  name: IIDProperty
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html
  commentId: T:Inflatable.ClassMapper.Interfaces.IIDProperty
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty
  nameWithType: IIDProperty
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.AddToChildTable(Data.Modeler.Providers.Interfaces.ITable)
  name: AddToChildTable(ITable)
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_AddToChildTable_Data_Modeler_Providers_Interfaces_ITable_
  commentId: M:Inflatable.ClassMapper.Interfaces.IIDProperty.AddToChildTable(Data.Modeler.Providers.Interfaces.ITable)
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.AddToChildTable(Data.Modeler.Providers.Interfaces.ITable)
  nameWithType: IIDProperty.AddToChildTable(ITable)
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.AddToChildTable*
  name: AddToChildTable
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_AddToChildTable_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty.AddToChildTable
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.AddToChildTable
  nameWithType: IIDProperty.AddToChildTable
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  name: AddToTable(ITable)
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_AddToTable_Data_Modeler_Providers_Interfaces_ITable_
  commentId: M:Inflatable.ClassMapper.Interfaces.IIDProperty.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  nameWithType: IIDProperty.AddToTable(ITable)
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.AddToTable*
  name: AddToTable
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_AddToTable_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty.AddToTable
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.AddToTable
  nameWithType: IIDProperty.AddToTable
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.AutoIncrement
  name: AutoIncrement
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_AutoIncrement
  commentId: P:Inflatable.ClassMapper.Interfaces.IIDProperty.AutoIncrement
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.AutoIncrement
  nameWithType: IIDProperty.AutoIncrement
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.AutoIncrement*
  name: AutoIncrement
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_AutoIncrement_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty.AutoIncrement
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.AutoIncrement
  nameWithType: IIDProperty.AutoIncrement
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.ColumnName
  name: ColumnName
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_ColumnName
  commentId: P:Inflatable.ClassMapper.Interfaces.IIDProperty.ColumnName
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.ColumnName
  nameWithType: IIDProperty.ColumnName
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.ColumnName*
  name: ColumnName
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_ColumnName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty.ColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.ColumnName
  nameWithType: IIDProperty.ColumnName
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.Constraints
  name: Constraints
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_Constraints
  commentId: P:Inflatable.ClassMapper.Interfaces.IIDProperty.Constraints
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.Constraints
  nameWithType: IIDProperty.Constraints
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.Constraints*
  name: Constraints
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_Constraints_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty.Constraints
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.Constraints
  nameWithType: IIDProperty.Constraints
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.Convert*
  name: Convert
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_Convert_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty.Convert
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.Convert
  nameWithType: IIDProperty.Convert
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.Convert``1(Inflatable.Interfaces.IMapping)
  name: Convert<TResult>(IMapping)
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_Convert__1_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.Interfaces.IIDProperty.Convert``1(Inflatable.Interfaces.IMapping)
  name.vb: Convert(Of TResult)(IMapping)
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.Convert<TResult>(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IIDProperty.Convert(Of TResult)(Inflatable.Interfaces.IMapping)
  nameWithType: IIDProperty.Convert<TResult>(IMapping)
  nameWithType.vb: IIDProperty.Convert(Of TResult)(IMapping)
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.Index
  name: Index
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_Index
  commentId: P:Inflatable.ClassMapper.Interfaces.IIDProperty.Index
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.Index
  nameWithType: IIDProperty.Index
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.Index*
  name: Index
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_Index_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty.Index
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.Index
  nameWithType: IIDProperty.Index
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.InternalFieldName
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_InternalFieldName
  commentId: P:Inflatable.ClassMapper.Interfaces.IIDProperty.InternalFieldName
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.InternalFieldName
  nameWithType: IIDProperty.InternalFieldName
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.InternalFieldName*
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_InternalFieldName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty.InternalFieldName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.InternalFieldName
  nameWithType: IIDProperty.InternalFieldName
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.MaxLength
  name: MaxLength
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_MaxLength
  commentId: P:Inflatable.ClassMapper.Interfaces.IIDProperty.MaxLength
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.MaxLength
  nameWithType: IIDProperty.MaxLength
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.MaxLength*
  name: MaxLength
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_MaxLength_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty.MaxLength
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.MaxLength
  nameWithType: IIDProperty.MaxLength
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.Name
  name: Name
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_Name
  commentId: P:Inflatable.ClassMapper.Interfaces.IIDProperty.Name
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.Name
  nameWithType: IIDProperty.Name
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.Name*
  name: Name
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_Name_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty.Name
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.Name
  nameWithType: IIDProperty.Name
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.Nullable
  name: Nullable
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_Nullable
  commentId: P:Inflatable.ClassMapper.Interfaces.IIDProperty.Nullable
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.Nullable
  nameWithType: IIDProperty.Nullable
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.Nullable*
  name: Nullable
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_Nullable_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty.Nullable
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.Nullable
  nameWithType: IIDProperty.Nullable
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.ParentMapping
  name: ParentMapping
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_ParentMapping
  commentId: P:Inflatable.ClassMapper.Interfaces.IIDProperty.ParentMapping
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.ParentMapping
  nameWithType: IIDProperty.ParentMapping
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.ParentMapping*
  name: ParentMapping
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_ParentMapping_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty.ParentMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.ParentMapping
  nameWithType: IIDProperty.ParentMapping
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.PropertyType
  name: PropertyType
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_PropertyType
  commentId: P:Inflatable.ClassMapper.Interfaces.IIDProperty.PropertyType
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.PropertyType
  nameWithType: IIDProperty.PropertyType
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.PropertyType*
  name: PropertyType
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_PropertyType_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty.PropertyType
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.PropertyType
  nameWithType: IIDProperty.PropertyType
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.Setup
  name: Setup()
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_Setup
  commentId: M:Inflatable.ClassMapper.Interfaces.IIDProperty.Setup
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.Setup()
  nameWithType: IIDProperty.Setup()
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.Setup*
  name: Setup
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_Setup_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty.Setup
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.Setup
  nameWithType: IIDProperty.Setup
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.TypeName
  name: TypeName
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_TypeName
  commentId: P:Inflatable.ClassMapper.Interfaces.IIDProperty.TypeName
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.TypeName
  nameWithType: IIDProperty.TypeName
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty.TypeName*
  name: TypeName
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty.html#Inflatable_ClassMapper_Interfaces_IIDProperty_TypeName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty.TypeName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty.TypeName
  nameWithType: IIDProperty.TypeName
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty`2
  name: IIDProperty<ClassType, DataType>
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty-2.html
  commentId: T:Inflatable.ClassMapper.Interfaces.IIDProperty`2
  name.vb: IIDProperty(Of ClassType, DataType)
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty<ClassType, DataType>
  fullName.vb: Inflatable.ClassMapper.Interfaces.IIDProperty(Of ClassType, DataType)
  nameWithType: IIDProperty<ClassType, DataType>
  nameWithType.vb: IIDProperty(Of ClassType, DataType)
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty`2.CompiledExpression
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty-2.html#Inflatable_ClassMapper_Interfaces_IIDProperty_2_CompiledExpression
  commentId: P:Inflatable.ClassMapper.Interfaces.IIDProperty`2.CompiledExpression
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty<ClassType, DataType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IIDProperty(Of ClassType, DataType).CompiledExpression
  nameWithType: IIDProperty<ClassType, DataType>.CompiledExpression
  nameWithType.vb: IIDProperty(Of ClassType, DataType).CompiledExpression
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty`2.CompiledExpression*
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty-2.html#Inflatable_ClassMapper_Interfaces_IIDProperty_2_CompiledExpression_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty`2.CompiledExpression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty<ClassType, DataType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IIDProperty(Of ClassType, DataType).CompiledExpression
  nameWithType: IIDProperty<ClassType, DataType>.CompiledExpression
  nameWithType.vb: IIDProperty(Of ClassType, DataType).CompiledExpression
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty`2.Expression
  name: Expression
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty-2.html#Inflatable_ClassMapper_Interfaces_IIDProperty_2_Expression
  commentId: P:Inflatable.ClassMapper.Interfaces.IIDProperty`2.Expression
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty<ClassType, DataType>.Expression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IIDProperty(Of ClassType, DataType).Expression
  nameWithType: IIDProperty<ClassType, DataType>.Expression
  nameWithType.vb: IIDProperty(Of ClassType, DataType).Expression
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty`2.Expression*
  name: Expression
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty-2.html#Inflatable_ClassMapper_Interfaces_IIDProperty_2_Expression_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty`2.Expression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty<ClassType, DataType>.Expression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IIDProperty(Of ClassType, DataType).Expression
  nameWithType: IIDProperty<ClassType, DataType>.Expression
  nameWithType.vb: IIDProperty(Of ClassType, DataType).Expression
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty`3
  name: IIDProperty<ClassType, DataType, ReturnType>
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty-3.html
  commentId: T:Inflatable.ClassMapper.Interfaces.IIDProperty`3
  name.vb: IIDProperty(Of ClassType, DataType, ReturnType)
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty<ClassType, DataType, ReturnType>
  fullName.vb: Inflatable.ClassMapper.Interfaces.IIDProperty(Of ClassType, DataType, ReturnType)
  nameWithType: IIDProperty<ClassType, DataType, ReturnType>
  nameWithType.vb: IIDProperty(Of ClassType, DataType, ReturnType)
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty`3.IsAutoIncremented
  name: IsAutoIncremented()
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty-3.html#Inflatable_ClassMapper_Interfaces_IIDProperty_3_IsAutoIncremented
  commentId: M:Inflatable.ClassMapper.Interfaces.IIDProperty`3.IsAutoIncremented
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty<ClassType, DataType, ReturnType>.IsAutoIncremented()
  fullName.vb: Inflatable.ClassMapper.Interfaces.IIDProperty(Of ClassType, DataType, ReturnType).IsAutoIncremented()
  nameWithType: IIDProperty<ClassType, DataType, ReturnType>.IsAutoIncremented()
  nameWithType.vb: IIDProperty(Of ClassType, DataType, ReturnType).IsAutoIncremented()
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty`3.IsAutoIncremented*
  name: IsAutoIncremented
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty-3.html#Inflatable_ClassMapper_Interfaces_IIDProperty_3_IsAutoIncremented_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty`3.IsAutoIncremented
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty<ClassType, DataType, ReturnType>.IsAutoIncremented
  fullName.vb: Inflatable.ClassMapper.Interfaces.IIDProperty(Of ClassType, DataType, ReturnType).IsAutoIncremented
  nameWithType: IIDProperty<ClassType, DataType, ReturnType>.IsAutoIncremented
  nameWithType.vb: IIDProperty(Of ClassType, DataType, ReturnType).IsAutoIncremented
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty`3.WithColumnName(System.String)
  name: WithColumnName(string)
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty-3.html#Inflatable_ClassMapper_Interfaces_IIDProperty_3_WithColumnName_System_String_
  commentId: M:Inflatable.ClassMapper.Interfaces.IIDProperty`3.WithColumnName(System.String)
  name.vb: WithColumnName(String)
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty<ClassType, DataType, ReturnType>.WithColumnName(string)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IIDProperty(Of ClassType, DataType, ReturnType).WithColumnName(String)
  nameWithType: IIDProperty<ClassType, DataType, ReturnType>.WithColumnName(string)
  nameWithType.vb: IIDProperty(Of ClassType, DataType, ReturnType).WithColumnName(String)
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty`3.WithColumnName*
  name: WithColumnName
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty-3.html#Inflatable_ClassMapper_Interfaces_IIDProperty_3_WithColumnName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty`3.WithColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty<ClassType, DataType, ReturnType>.WithColumnName
  fullName.vb: Inflatable.ClassMapper.Interfaces.IIDProperty(Of ClassType, DataType, ReturnType).WithColumnName
  nameWithType: IIDProperty<ClassType, DataType, ReturnType>.WithColumnName
  nameWithType.vb: IIDProperty(Of ClassType, DataType, ReturnType).WithColumnName
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty`3.WithConstraint(System.String)
  name: WithConstraint(string)
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty-3.html#Inflatable_ClassMapper_Interfaces_IIDProperty_3_WithConstraint_System_String_
  commentId: M:Inflatable.ClassMapper.Interfaces.IIDProperty`3.WithConstraint(System.String)
  name.vb: WithConstraint(String)
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty<ClassType, DataType, ReturnType>.WithConstraint(string)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IIDProperty(Of ClassType, DataType, ReturnType).WithConstraint(String)
  nameWithType: IIDProperty<ClassType, DataType, ReturnType>.WithConstraint(string)
  nameWithType.vb: IIDProperty(Of ClassType, DataType, ReturnType).WithConstraint(String)
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty`3.WithConstraint*
  name: WithConstraint
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty-3.html#Inflatable_ClassMapper_Interfaces_IIDProperty_3_WithConstraint_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty`3.WithConstraint
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty<ClassType, DataType, ReturnType>.WithConstraint
  fullName.vb: Inflatable.ClassMapper.Interfaces.IIDProperty(Of ClassType, DataType, ReturnType).WithConstraint
  nameWithType: IIDProperty<ClassType, DataType, ReturnType>.WithConstraint
  nameWithType.vb: IIDProperty(Of ClassType, DataType, ReturnType).WithConstraint
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty`3.WithMaxLength
  name: WithMaxLength()
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty-3.html#Inflatable_ClassMapper_Interfaces_IIDProperty_3_WithMaxLength
  commentId: M:Inflatable.ClassMapper.Interfaces.IIDProperty`3.WithMaxLength
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty<ClassType, DataType, ReturnType>.WithMaxLength()
  fullName.vb: Inflatable.ClassMapper.Interfaces.IIDProperty(Of ClassType, DataType, ReturnType).WithMaxLength()
  nameWithType: IIDProperty<ClassType, DataType, ReturnType>.WithMaxLength()
  nameWithType.vb: IIDProperty(Of ClassType, DataType, ReturnType).WithMaxLength()
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty`3.WithMaxLength(System.Int32)
  name: WithMaxLength(int)
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty-3.html#Inflatable_ClassMapper_Interfaces_IIDProperty_3_WithMaxLength_System_Int32_
  commentId: M:Inflatable.ClassMapper.Interfaces.IIDProperty`3.WithMaxLength(System.Int32)
  name.vb: WithMaxLength(Integer)
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty<ClassType, DataType, ReturnType>.WithMaxLength(int)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IIDProperty(Of ClassType, DataType, ReturnType).WithMaxLength(Integer)
  nameWithType: IIDProperty<ClassType, DataType, ReturnType>.WithMaxLength(int)
  nameWithType.vb: IIDProperty(Of ClassType, DataType, ReturnType).WithMaxLength(Integer)
- uid: Inflatable.ClassMapper.Interfaces.IIDProperty`3.WithMaxLength*
  name: WithMaxLength
  href: api/Inflatable.ClassMapper.Interfaces.IIDProperty-3.html#Inflatable_ClassMapper_Interfaces_IIDProperty_3_WithMaxLength_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IIDProperty`3.WithMaxLength
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IIDProperty<ClassType, DataType, ReturnType>.WithMaxLength
  fullName.vb: Inflatable.ClassMapper.Interfaces.IIDProperty(Of ClassType, DataType, ReturnType).WithMaxLength
  nameWithType: IIDProperty<ClassType, DataType, ReturnType>.WithMaxLength
  nameWithType.vb: IIDProperty(Of ClassType, DataType, ReturnType).WithMaxLength
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty
  name: IManyToManyProperty
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html
  commentId: T:Inflatable.ClassMapper.Interfaces.IManyToManyProperty
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty
  nameWithType: IManyToManyProperty
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Cascade
  name: Cascade
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_Cascade
  commentId: P:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Cascade
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Cascade
  nameWithType: IManyToManyProperty.Cascade
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Cascade*
  name: Cascade
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_Cascade_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Cascade
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Cascade
  nameWithType: IManyToManyProperty.Cascade
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Convert*
  name: Convert
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_Convert_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Convert
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Convert
  nameWithType: IManyToManyProperty.Convert
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Convert``1(Inflatable.Interfaces.IMapping)
  name: Convert<TResult>(IMapping)
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_Convert__1_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Convert``1(Inflatable.Interfaces.IMapping)
  name.vb: Convert(Of TResult)(IMapping)
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Convert<TResult>(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Convert(Of TResult)(Inflatable.Interfaces.IMapping)
  nameWithType: IManyToManyProperty.Convert<TResult>(IMapping)
  nameWithType.vb: IManyToManyProperty.Convert(Of TResult)(IMapping)
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.DatabaseJoinsCascade
  name: DatabaseJoinsCascade
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_DatabaseJoinsCascade
  commentId: P:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.DatabaseJoinsCascade
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.DatabaseJoinsCascade
  nameWithType: IManyToManyProperty.DatabaseJoinsCascade
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.DatabaseJoinsCascade*
  name: DatabaseJoinsCascade
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_DatabaseJoinsCascade_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.DatabaseJoinsCascade
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.DatabaseJoinsCascade
  nameWithType: IManyToManyProperty.DatabaseJoinsCascade
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.ForeignMapping
  name: ForeignMapping
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_ForeignMapping
  commentId: P:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.ForeignMapping
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.ForeignMapping
  nameWithType: IManyToManyProperty.ForeignMapping
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.ForeignMapping*
  name: ForeignMapping
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_ForeignMapping_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.ForeignMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.ForeignMapping
  nameWithType: IManyToManyProperty.ForeignMapping
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.GetValue(System.Object)
  name: GetValue(object)
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_GetValue_System_Object_
  commentId: M:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.GetValue(System.Object)
  name.vb: GetValue(Object)
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.GetValue(object)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.GetValue(Object)
  nameWithType: IManyToManyProperty.GetValue(object)
  nameWithType.vb: IManyToManyProperty.GetValue(Object)
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.GetValue*
  name: GetValue
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_GetValue_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.GetValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.GetValue
  nameWithType: IManyToManyProperty.GetValue
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.InternalFieldName
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_InternalFieldName
  commentId: P:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.InternalFieldName
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.InternalFieldName
  nameWithType: IManyToManyProperty.InternalFieldName
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.InternalFieldName*
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_InternalFieldName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.InternalFieldName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.InternalFieldName
  nameWithType: IManyToManyProperty.InternalFieldName
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.PropertyType
  name: PropertyType
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_PropertyType
  commentId: P:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.PropertyType
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.PropertyType
  nameWithType: IManyToManyProperty.PropertyType
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.PropertyType*
  name: PropertyType
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_PropertyType_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.PropertyType
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.PropertyType
  nameWithType: IManyToManyProperty.PropertyType
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Setup(Inflatable.ClassMapper.IMappingSource,Data.Modeler.Providers.Interfaces.ISource)
  name: Setup(IMappingSource, ISource)
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_Setup_Inflatable_ClassMapper_IMappingSource_Data_Modeler_Providers_Interfaces_ISource_
  commentId: M:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Setup(Inflatable.ClassMapper.IMappingSource,Data.Modeler.Providers.Interfaces.ISource)
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Setup(Inflatable.ClassMapper.IMappingSource, Data.Modeler.Providers.Interfaces.ISource)
  nameWithType: IManyToManyProperty.Setup(IMappingSource, ISource)
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Setup*
  name: Setup
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_Setup_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Setup
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Setup
  nameWithType: IManyToManyProperty.Setup
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Similar(Inflatable.ClassMapper.Interfaces.IManyToManyProperty)
  name: Similar(IManyToManyProperty)
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_Similar_Inflatable_ClassMapper_Interfaces_IManyToManyProperty_
  commentId: M:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Similar(Inflatable.ClassMapper.Interfaces.IManyToManyProperty)
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Similar(Inflatable.ClassMapper.Interfaces.IManyToManyProperty)
  nameWithType: IManyToManyProperty.Similar(IManyToManyProperty)
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Similar*
  name: Similar
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_Similar_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Similar
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.Similar
  nameWithType: IManyToManyProperty.Similar
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.TableName
  name: TableName
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_TableName
  commentId: P:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.TableName
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.TableName
  nameWithType: IManyToManyProperty.TableName
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.TableName*
  name: TableName
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_TableName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.TableName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.TableName
  nameWithType: IManyToManyProperty.TableName
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.TypeName
  name: TypeName
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_TypeName
  commentId: P:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.TypeName
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.TypeName
  nameWithType: IManyToManyProperty.TypeName
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.TypeName*
  name: TypeName
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_TypeName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToManyProperty.TypeName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty.TypeName
  nameWithType: IManyToManyProperty.TypeName
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty`2
  name: IManyToManyProperty<TClassType, TDataType>
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty-2.html
  commentId: T:Inflatable.ClassMapper.Interfaces.IManyToManyProperty`2
  name.vb: IManyToManyProperty(Of TClassType, TDataType)
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty<TClassType, TDataType>
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToManyProperty(Of TClassType, TDataType)
  nameWithType: IManyToManyProperty<TClassType, TDataType>
  nameWithType.vb: IManyToManyProperty(Of TClassType, TDataType)
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty`2.CompiledExpression
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty-2.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_2_CompiledExpression
  commentId: P:Inflatable.ClassMapper.Interfaces.IManyToManyProperty`2.CompiledExpression
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty<TClassType, TDataType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToManyProperty(Of TClassType, TDataType).CompiledExpression
  nameWithType: IManyToManyProperty<TClassType, TDataType>.CompiledExpression
  nameWithType.vb: IManyToManyProperty(Of TClassType, TDataType).CompiledExpression
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty`2.CompiledExpression*
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty-2.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_2_CompiledExpression_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToManyProperty`2.CompiledExpression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty<TClassType, TDataType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToManyProperty(Of TClassType, TDataType).CompiledExpression
  nameWithType: IManyToManyProperty<TClassType, TDataType>.CompiledExpression
  nameWithType.vb: IManyToManyProperty(Of TClassType, TDataType).CompiledExpression
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty`2.Expression
  name: Expression
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty-2.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_2_Expression
  commentId: P:Inflatable.ClassMapper.Interfaces.IManyToManyProperty`2.Expression
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty<TClassType, TDataType>.Expression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToManyProperty(Of TClassType, TDataType).Expression
  nameWithType: IManyToManyProperty<TClassType, TDataType>.Expression
  nameWithType.vb: IManyToManyProperty(Of TClassType, TDataType).Expression
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty`2.Expression*
  name: Expression
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty-2.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_2_Expression_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToManyProperty`2.Expression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty<TClassType, TDataType>.Expression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToManyProperty(Of TClassType, TDataType).Expression
  nameWithType: IManyToManyProperty<TClassType, TDataType>.Expression
  nameWithType.vb: IManyToManyProperty(Of TClassType, TDataType).Expression
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty`3
  name: IManyToManyProperty<TClassType, TDataType, TReturnType>
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty-3.html
  commentId: T:Inflatable.ClassMapper.Interfaces.IManyToManyProperty`3
  name.vb: IManyToManyProperty(Of TClassType, TDataType, TReturnType)
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty<TClassType, TDataType, TReturnType>
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToManyProperty(Of TClassType, TDataType, TReturnType)
  nameWithType: IManyToManyProperty<TClassType, TDataType, TReturnType>
  nameWithType.vb: IManyToManyProperty(Of TClassType, TDataType, TReturnType)
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty`3.CascadeChanges
  name: CascadeChanges()
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty-3.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_3_CascadeChanges
  commentId: M:Inflatable.ClassMapper.Interfaces.IManyToManyProperty`3.CascadeChanges
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty<TClassType, TDataType, TReturnType>.CascadeChanges()
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToManyProperty(Of TClassType, TDataType, TReturnType).CascadeChanges()
  nameWithType: IManyToManyProperty<TClassType, TDataType, TReturnType>.CascadeChanges()
  nameWithType.vb: IManyToManyProperty(Of TClassType, TDataType, TReturnType).CascadeChanges()
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty`3.CascadeChanges*
  name: CascadeChanges
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty-3.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_3_CascadeChanges_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToManyProperty`3.CascadeChanges
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty<TClassType, TDataType, TReturnType>.CascadeChanges
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToManyProperty(Of TClassType, TDataType, TReturnType).CascadeChanges
  nameWithType: IManyToManyProperty<TClassType, TDataType, TReturnType>.CascadeChanges
  nameWithType.vb: IManyToManyProperty(Of TClassType, TDataType, TReturnType).CascadeChanges
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty`3.LoadUsing(System.String,System.Data.CommandType)
  name: LoadUsing(string, CommandType)
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty-3.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_3_LoadUsing_System_String_System_Data_CommandType_
  commentId: M:Inflatable.ClassMapper.Interfaces.IManyToManyProperty`3.LoadUsing(System.String,System.Data.CommandType)
  name.vb: LoadUsing(String, CommandType)
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty<TClassType, TDataType, TReturnType>.LoadUsing(string, System.Data.CommandType)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToManyProperty(Of TClassType, TDataType, TReturnType).LoadUsing(String, System.Data.CommandType)
  nameWithType: IManyToManyProperty<TClassType, TDataType, TReturnType>.LoadUsing(string, CommandType)
  nameWithType.vb: IManyToManyProperty(Of TClassType, TDataType, TReturnType).LoadUsing(String, CommandType)
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty`3.LoadUsing*
  name: LoadUsing
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty-3.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_3_LoadUsing_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToManyProperty`3.LoadUsing
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty<TClassType, TDataType, TReturnType>.LoadUsing
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToManyProperty(Of TClassType, TDataType, TReturnType).LoadUsing
  nameWithType: IManyToManyProperty<TClassType, TDataType, TReturnType>.LoadUsing
  nameWithType.vb: IManyToManyProperty(Of TClassType, TDataType, TReturnType).LoadUsing
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty`3.OnDeleteDoNothing
  name: OnDeleteDoNothing()
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty-3.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_3_OnDeleteDoNothing
  commentId: M:Inflatable.ClassMapper.Interfaces.IManyToManyProperty`3.OnDeleteDoNothing
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty<TClassType, TDataType, TReturnType>.OnDeleteDoNothing()
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToManyProperty(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing()
  nameWithType: IManyToManyProperty<TClassType, TDataType, TReturnType>.OnDeleteDoNothing()
  nameWithType.vb: IManyToManyProperty(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing()
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty`3.OnDeleteDoNothing*
  name: OnDeleteDoNothing
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty-3.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_3_OnDeleteDoNothing_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToManyProperty`3.OnDeleteDoNothing
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty<TClassType, TDataType, TReturnType>.OnDeleteDoNothing
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToManyProperty(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing
  nameWithType: IManyToManyProperty<TClassType, TDataType, TReturnType>.OnDeleteDoNothing
  nameWithType.vb: IManyToManyProperty(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty`3.SetTableName(System.String)
  name: SetTableName(string)
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty-3.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_3_SetTableName_System_String_
  commentId: M:Inflatable.ClassMapper.Interfaces.IManyToManyProperty`3.SetTableName(System.String)
  name.vb: SetTableName(String)
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty<TClassType, TDataType, TReturnType>.SetTableName(string)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToManyProperty(Of TClassType, TDataType, TReturnType).SetTableName(String)
  nameWithType: IManyToManyProperty<TClassType, TDataType, TReturnType>.SetTableName(string)
  nameWithType.vb: IManyToManyProperty(Of TClassType, TDataType, TReturnType).SetTableName(String)
- uid: Inflatable.ClassMapper.Interfaces.IManyToManyProperty`3.SetTableName*
  name: SetTableName
  href: api/Inflatable.ClassMapper.Interfaces.IManyToManyProperty-3.html#Inflatable_ClassMapper_Interfaces_IManyToManyProperty_3_SetTableName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToManyProperty`3.SetTableName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToManyProperty<TClassType, TDataType, TReturnType>.SetTableName
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToManyProperty(Of TClassType, TDataType, TReturnType).SetTableName
  nameWithType: IManyToManyProperty<TClassType, TDataType, TReturnType>.SetTableName
  nameWithType.vb: IManyToManyProperty(Of TClassType, TDataType, TReturnType).SetTableName
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneListProperty
  name: IManyToOneListProperty
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneListProperty.html
  commentId: T:Inflatable.ClassMapper.Interfaces.IManyToOneListProperty
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneListProperty
  nameWithType: IManyToOneListProperty
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty
  name: IManyToOneProperty
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html
  commentId: T:Inflatable.ClassMapper.Interfaces.IManyToOneProperty
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty
  nameWithType: IManyToOneProperty
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Cascade
  name: Cascade
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_Cascade
  commentId: P:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Cascade
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Cascade
  nameWithType: IManyToOneProperty.Cascade
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Cascade*
  name: Cascade
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_Cascade_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Cascade
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Cascade
  nameWithType: IManyToOneProperty.Cascade
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.ColumnName
  name: ColumnName
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_ColumnName
  commentId: P:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.ColumnName
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.ColumnName
  nameWithType: IManyToOneProperty.ColumnName
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.ColumnName*
  name: ColumnName
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_ColumnName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.ColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.ColumnName
  nameWithType: IManyToOneProperty.ColumnName
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Convert*
  name: Convert
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_Convert_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Convert
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Convert
  nameWithType: IManyToOneProperty.Convert
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Convert``1(Inflatable.Interfaces.IMapping)
  name: Convert<TResult>(IMapping)
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_Convert__1_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Convert``1(Inflatable.Interfaces.IMapping)
  name.vb: Convert(Of TResult)(IMapping)
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Convert<TResult>(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Convert(Of TResult)(Inflatable.Interfaces.IMapping)
  nameWithType: IManyToOneProperty.Convert<TResult>(IMapping)
  nameWithType.vb: IManyToOneProperty.Convert(Of TResult)(IMapping)
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.ForeignMapping
  name: ForeignMapping
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_ForeignMapping
  commentId: P:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.ForeignMapping
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.ForeignMapping
  nameWithType: IManyToOneProperty.ForeignMapping
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.ForeignMapping*
  name: ForeignMapping
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_ForeignMapping_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.ForeignMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.ForeignMapping
  nameWithType: IManyToOneProperty.ForeignMapping
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.GetValue(System.Object)
  name: GetValue(object)
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_GetValue_System_Object_
  commentId: M:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.GetValue(System.Object)
  name.vb: GetValue(Object)
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.GetValue(object)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.GetValue(Object)
  nameWithType: IManyToOneProperty.GetValue(object)
  nameWithType.vb: IManyToOneProperty.GetValue(Object)
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.GetValue*
  name: GetValue
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_GetValue_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.GetValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.GetValue
  nameWithType: IManyToOneProperty.GetValue
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.InternalFieldName
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_InternalFieldName
  commentId: P:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.InternalFieldName
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.InternalFieldName
  nameWithType: IManyToOneProperty.InternalFieldName
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.InternalFieldName*
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_InternalFieldName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.InternalFieldName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.InternalFieldName
  nameWithType: IManyToOneProperty.InternalFieldName
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.PropertyType
  name: PropertyType
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_PropertyType
  commentId: P:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.PropertyType
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.PropertyType
  nameWithType: IManyToOneProperty.PropertyType
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.PropertyType*
  name: PropertyType
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_PropertyType_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.PropertyType
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.PropertyType
  nameWithType: IManyToOneProperty.PropertyType
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Setup(Inflatable.ClassMapper.IMappingSource,Data.Modeler.Providers.Interfaces.ISource)
  name: Setup(IMappingSource, ISource)
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_Setup_Inflatable_ClassMapper_IMappingSource_Data_Modeler_Providers_Interfaces_ISource_
  commentId: M:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Setup(Inflatable.ClassMapper.IMappingSource,Data.Modeler.Providers.Interfaces.ISource)
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Setup(Inflatable.ClassMapper.IMappingSource, Data.Modeler.Providers.Interfaces.ISource)
  nameWithType: IManyToOneProperty.Setup(IMappingSource, ISource)
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Setup*
  name: Setup
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_Setup_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Setup
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Setup
  nameWithType: IManyToOneProperty.Setup
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Similar(Inflatable.ClassMapper.Interfaces.IManyToOneProperty)
  name: Similar(IManyToOneProperty)
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_Similar_Inflatable_ClassMapper_Interfaces_IManyToOneProperty_
  commentId: M:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Similar(Inflatable.ClassMapper.Interfaces.IManyToOneProperty)
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Similar(Inflatable.ClassMapper.Interfaces.IManyToOneProperty)
  nameWithType: IManyToOneProperty.Similar(IManyToOneProperty)
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Similar*
  name: Similar
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_Similar_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Similar
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.Similar
  nameWithType: IManyToOneProperty.Similar
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.TypeName
  name: TypeName
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_TypeName
  commentId: P:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.TypeName
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.TypeName
  nameWithType: IManyToOneProperty.TypeName
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.TypeName*
  name: TypeName
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_TypeName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToOneProperty.TypeName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty.TypeName
  nameWithType: IManyToOneProperty.TypeName
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty`2
  name: IManyToOneProperty<TClassType, TDataType>
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty-2.html
  commentId: T:Inflatable.ClassMapper.Interfaces.IManyToOneProperty`2
  name.vb: IManyToOneProperty(Of TClassType, TDataType)
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty<TClassType, TDataType>
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToOneProperty(Of TClassType, TDataType)
  nameWithType: IManyToOneProperty<TClassType, TDataType>
  nameWithType.vb: IManyToOneProperty(Of TClassType, TDataType)
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty`2.CompiledExpression
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty-2.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_2_CompiledExpression
  commentId: P:Inflatable.ClassMapper.Interfaces.IManyToOneProperty`2.CompiledExpression
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty<TClassType, TDataType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToOneProperty(Of TClassType, TDataType).CompiledExpression
  nameWithType: IManyToOneProperty<TClassType, TDataType>.CompiledExpression
  nameWithType.vb: IManyToOneProperty(Of TClassType, TDataType).CompiledExpression
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty`2.CompiledExpression*
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty-2.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_2_CompiledExpression_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToOneProperty`2.CompiledExpression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty<TClassType, TDataType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToOneProperty(Of TClassType, TDataType).CompiledExpression
  nameWithType: IManyToOneProperty<TClassType, TDataType>.CompiledExpression
  nameWithType.vb: IManyToOneProperty(Of TClassType, TDataType).CompiledExpression
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty`2.Expression
  name: Expression
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty-2.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_2_Expression
  commentId: P:Inflatable.ClassMapper.Interfaces.IManyToOneProperty`2.Expression
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty<TClassType, TDataType>.Expression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToOneProperty(Of TClassType, TDataType).Expression
  nameWithType: IManyToOneProperty<TClassType, TDataType>.Expression
  nameWithType.vb: IManyToOneProperty(Of TClassType, TDataType).Expression
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty`2.Expression*
  name: Expression
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty-2.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_2_Expression_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToOneProperty`2.Expression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty<TClassType, TDataType>.Expression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToOneProperty(Of TClassType, TDataType).Expression
  nameWithType: IManyToOneProperty<TClassType, TDataType>.Expression
  nameWithType.vb: IManyToOneProperty(Of TClassType, TDataType).Expression
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty`3
  name: IManyToOneProperty<TClassType, TDataType, TReturnType>
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty-3.html
  commentId: T:Inflatable.ClassMapper.Interfaces.IManyToOneProperty`3
  name.vb: IManyToOneProperty(Of TClassType, TDataType, TReturnType)
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty<TClassType, TDataType, TReturnType>
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToOneProperty(Of TClassType, TDataType, TReturnType)
  nameWithType: IManyToOneProperty<TClassType, TDataType, TReturnType>
  nameWithType.vb: IManyToOneProperty(Of TClassType, TDataType, TReturnType)
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty`3.CascadeChanges
  name: CascadeChanges()
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty-3.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_3_CascadeChanges
  commentId: M:Inflatable.ClassMapper.Interfaces.IManyToOneProperty`3.CascadeChanges
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty<TClassType, TDataType, TReturnType>.CascadeChanges()
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToOneProperty(Of TClassType, TDataType, TReturnType).CascadeChanges()
  nameWithType: IManyToOneProperty<TClassType, TDataType, TReturnType>.CascadeChanges()
  nameWithType.vb: IManyToOneProperty(Of TClassType, TDataType, TReturnType).CascadeChanges()
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty`3.CascadeChanges*
  name: CascadeChanges
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty-3.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_3_CascadeChanges_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToOneProperty`3.CascadeChanges
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty<TClassType, TDataType, TReturnType>.CascadeChanges
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToOneProperty(Of TClassType, TDataType, TReturnType).CascadeChanges
  nameWithType: IManyToOneProperty<TClassType, TDataType, TReturnType>.CascadeChanges
  nameWithType.vb: IManyToOneProperty(Of TClassType, TDataType, TReturnType).CascadeChanges
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty`3.LoadUsing(System.String,System.Data.CommandType)
  name: LoadUsing(string, CommandType)
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty-3.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_3_LoadUsing_System_String_System_Data_CommandType_
  commentId: M:Inflatable.ClassMapper.Interfaces.IManyToOneProperty`3.LoadUsing(System.String,System.Data.CommandType)
  name.vb: LoadUsing(String, CommandType)
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty<TClassType, TDataType, TReturnType>.LoadUsing(string, System.Data.CommandType)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToOneProperty(Of TClassType, TDataType, TReturnType).LoadUsing(String, System.Data.CommandType)
  nameWithType: IManyToOneProperty<TClassType, TDataType, TReturnType>.LoadUsing(string, CommandType)
  nameWithType.vb: IManyToOneProperty(Of TClassType, TDataType, TReturnType).LoadUsing(String, CommandType)
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty`3.LoadUsing*
  name: LoadUsing
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty-3.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_3_LoadUsing_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToOneProperty`3.LoadUsing
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty<TClassType, TDataType, TReturnType>.LoadUsing
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToOneProperty(Of TClassType, TDataType, TReturnType).LoadUsing
  nameWithType: IManyToOneProperty<TClassType, TDataType, TReturnType>.LoadUsing
  nameWithType.vb: IManyToOneProperty(Of TClassType, TDataType, TReturnType).LoadUsing
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty`3.OnDeleteDoNothing
  name: OnDeleteDoNothing()
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty-3.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_3_OnDeleteDoNothing
  commentId: M:Inflatable.ClassMapper.Interfaces.IManyToOneProperty`3.OnDeleteDoNothing
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty<TClassType, TDataType, TReturnType>.OnDeleteDoNothing()
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToOneProperty(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing()
  nameWithType: IManyToOneProperty<TClassType, TDataType, TReturnType>.OnDeleteDoNothing()
  nameWithType.vb: IManyToOneProperty(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing()
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty`3.OnDeleteDoNothing*
  name: OnDeleteDoNothing
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty-3.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_3_OnDeleteDoNothing_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToOneProperty`3.OnDeleteDoNothing
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty<TClassType, TDataType, TReturnType>.OnDeleteDoNothing
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToOneProperty(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing
  nameWithType: IManyToOneProperty<TClassType, TDataType, TReturnType>.OnDeleteDoNothing
  nameWithType.vb: IManyToOneProperty(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty`3.SetColumnName(System.String)
  name: SetColumnName(string)
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty-3.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_3_SetColumnName_System_String_
  commentId: M:Inflatable.ClassMapper.Interfaces.IManyToOneProperty`3.SetColumnName(System.String)
  name.vb: SetColumnName(String)
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty<TClassType, TDataType, TReturnType>.SetColumnName(string)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToOneProperty(Of TClassType, TDataType, TReturnType).SetColumnName(String)
  nameWithType: IManyToOneProperty<TClassType, TDataType, TReturnType>.SetColumnName(string)
  nameWithType.vb: IManyToOneProperty(Of TClassType, TDataType, TReturnType).SetColumnName(String)
- uid: Inflatable.ClassMapper.Interfaces.IManyToOneProperty`3.SetColumnName*
  name: SetColumnName
  href: api/Inflatable.ClassMapper.Interfaces.IManyToOneProperty-3.html#Inflatable_ClassMapper_Interfaces_IManyToOneProperty_3_SetColumnName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IManyToOneProperty`3.SetColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IManyToOneProperty<TClassType, TDataType, TReturnType>.SetColumnName
  fullName.vb: Inflatable.ClassMapper.Interfaces.IManyToOneProperty(Of TClassType, TDataType, TReturnType).SetColumnName
  nameWithType: IManyToOneProperty<TClassType, TDataType, TReturnType>.SetColumnName
  nameWithType.vb: IManyToOneProperty(Of TClassType, TDataType, TReturnType).SetColumnName
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty
  name: IMapProperty
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html
  commentId: T:Inflatable.ClassMapper.Interfaces.IMapProperty
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty
  nameWithType: IMapProperty
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  name: AddToTable(ITable)
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_AddToTable_Data_Modeler_Providers_Interfaces_ITable_
  commentId: M:Inflatable.ClassMapper.Interfaces.IMapProperty.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  nameWithType: IMapProperty.AddToTable(ITable)
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.AddToTable*
  name: AddToTable
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_AddToTable_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IMapProperty.AddToTable
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.AddToTable
  nameWithType: IMapProperty.AddToTable
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.Cascade
  name: Cascade
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_Cascade
  commentId: P:Inflatable.ClassMapper.Interfaces.IMapProperty.Cascade
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.Cascade
  nameWithType: IMapProperty.Cascade
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.Cascade*
  name: Cascade
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_Cascade_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IMapProperty.Cascade
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.Cascade
  nameWithType: IMapProperty.Cascade
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.ColumnName
  name: ColumnName
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_ColumnName
  commentId: P:Inflatable.ClassMapper.Interfaces.IMapProperty.ColumnName
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.ColumnName
  nameWithType: IMapProperty.ColumnName
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.ColumnName*
  name: ColumnName
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_ColumnName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IMapProperty.ColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.ColumnName
  nameWithType: IMapProperty.ColumnName
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.Convert*
  name: Convert
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_Convert_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IMapProperty.Convert
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.Convert
  nameWithType: IMapProperty.Convert
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.Convert``1(Inflatable.Interfaces.IMapping)
  name: Convert<TResult>(IMapping)
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_Convert__1_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.Interfaces.IMapProperty.Convert``1(Inflatable.Interfaces.IMapping)
  name.vb: Convert(Of TResult)(IMapping)
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.Convert<TResult>(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IMapProperty.Convert(Of TResult)(Inflatable.Interfaces.IMapping)
  nameWithType: IMapProperty.Convert<TResult>(IMapping)
  nameWithType.vb: IMapProperty.Convert(Of TResult)(IMapping)
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.ForeignMapping
  name: ForeignMapping
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_ForeignMapping
  commentId: P:Inflatable.ClassMapper.Interfaces.IMapProperty.ForeignMapping
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.ForeignMapping
  nameWithType: IMapProperty.ForeignMapping
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.ForeignMapping*
  name: ForeignMapping
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_ForeignMapping_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IMapProperty.ForeignMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.ForeignMapping
  nameWithType: IMapProperty.ForeignMapping
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.GetValue(System.Object)
  name: GetValue(object)
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_GetValue_System_Object_
  commentId: M:Inflatable.ClassMapper.Interfaces.IMapProperty.GetValue(System.Object)
  name.vb: GetValue(Object)
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.GetValue(object)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IMapProperty.GetValue(Object)
  nameWithType: IMapProperty.GetValue(object)
  nameWithType.vb: IMapProperty.GetValue(Object)
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.GetValue*
  name: GetValue
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_GetValue_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IMapProperty.GetValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.GetValue
  nameWithType: IMapProperty.GetValue
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.InternalFieldName
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_InternalFieldName
  commentId: P:Inflatable.ClassMapper.Interfaces.IMapProperty.InternalFieldName
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.InternalFieldName
  nameWithType: IMapProperty.InternalFieldName
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.InternalFieldName*
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_InternalFieldName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IMapProperty.InternalFieldName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.InternalFieldName
  nameWithType: IMapProperty.InternalFieldName
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.PropertyType
  name: PropertyType
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_PropertyType
  commentId: P:Inflatable.ClassMapper.Interfaces.IMapProperty.PropertyType
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.PropertyType
  nameWithType: IMapProperty.PropertyType
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.PropertyType*
  name: PropertyType
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_PropertyType_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IMapProperty.PropertyType
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.PropertyType
  nameWithType: IMapProperty.PropertyType
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.Setup(Inflatable.ClassMapper.IMappingSource)
  name: Setup(IMappingSource)
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_Setup_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.ClassMapper.Interfaces.IMapProperty.Setup(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.Setup(Inflatable.ClassMapper.IMappingSource)
  nameWithType: IMapProperty.Setup(IMappingSource)
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.Setup*
  name: Setup
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_Setup_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IMapProperty.Setup
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.Setup
  nameWithType: IMapProperty.Setup
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.Similar(Inflatable.ClassMapper.Interfaces.IMapProperty)
  name: Similar(IMapProperty)
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_Similar_Inflatable_ClassMapper_Interfaces_IMapProperty_
  commentId: M:Inflatable.ClassMapper.Interfaces.IMapProperty.Similar(Inflatable.ClassMapper.Interfaces.IMapProperty)
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.Similar(Inflatable.ClassMapper.Interfaces.IMapProperty)
  nameWithType: IMapProperty.Similar(IMapProperty)
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.Similar*
  name: Similar
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_Similar_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IMapProperty.Similar
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.Similar
  nameWithType: IMapProperty.Similar
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.TypeName
  name: TypeName
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_TypeName
  commentId: P:Inflatable.ClassMapper.Interfaces.IMapProperty.TypeName
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.TypeName
  nameWithType: IMapProperty.TypeName
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.TypeName*
  name: TypeName
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_TypeName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IMapProperty.TypeName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.TypeName
  nameWithType: IMapProperty.TypeName
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.Unique
  name: Unique
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_Unique
  commentId: P:Inflatable.ClassMapper.Interfaces.IMapProperty.Unique
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.Unique
  nameWithType: IMapProperty.Unique
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty.Unique*
  name: Unique
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty.html#Inflatable_ClassMapper_Interfaces_IMapProperty_Unique_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IMapProperty.Unique
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty.Unique
  nameWithType: IMapProperty.Unique
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty`2
  name: IMapProperty<TClassType, TDataType>
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty-2.html
  commentId: T:Inflatable.ClassMapper.Interfaces.IMapProperty`2
  name.vb: IMapProperty(Of TClassType, TDataType)
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty<TClassType, TDataType>
  fullName.vb: Inflatable.ClassMapper.Interfaces.IMapProperty(Of TClassType, TDataType)
  nameWithType: IMapProperty<TClassType, TDataType>
  nameWithType.vb: IMapProperty(Of TClassType, TDataType)
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty`2.CompiledExpression
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty-2.html#Inflatable_ClassMapper_Interfaces_IMapProperty_2_CompiledExpression
  commentId: P:Inflatable.ClassMapper.Interfaces.IMapProperty`2.CompiledExpression
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty<TClassType, TDataType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IMapProperty(Of TClassType, TDataType).CompiledExpression
  nameWithType: IMapProperty<TClassType, TDataType>.CompiledExpression
  nameWithType.vb: IMapProperty(Of TClassType, TDataType).CompiledExpression
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty`2.CompiledExpression*
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty-2.html#Inflatable_ClassMapper_Interfaces_IMapProperty_2_CompiledExpression_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IMapProperty`2.CompiledExpression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty<TClassType, TDataType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IMapProperty(Of TClassType, TDataType).CompiledExpression
  nameWithType: IMapProperty<TClassType, TDataType>.CompiledExpression
  nameWithType.vb: IMapProperty(Of TClassType, TDataType).CompiledExpression
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty`2.Expression
  name: Expression
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty-2.html#Inflatable_ClassMapper_Interfaces_IMapProperty_2_Expression
  commentId: P:Inflatable.ClassMapper.Interfaces.IMapProperty`2.Expression
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty<TClassType, TDataType>.Expression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IMapProperty(Of TClassType, TDataType).Expression
  nameWithType: IMapProperty<TClassType, TDataType>.Expression
  nameWithType.vb: IMapProperty(Of TClassType, TDataType).Expression
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty`2.Expression*
  name: Expression
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty-2.html#Inflatable_ClassMapper_Interfaces_IMapProperty_2_Expression_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IMapProperty`2.Expression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty<TClassType, TDataType>.Expression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IMapProperty(Of TClassType, TDataType).Expression
  nameWithType: IMapProperty<TClassType, TDataType>.Expression
  nameWithType.vb: IMapProperty(Of TClassType, TDataType).Expression
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty`3
  name: IMapProperty<TClassType, TDataType, TReturnType>
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty-3.html
  commentId: T:Inflatable.ClassMapper.Interfaces.IMapProperty`3
  name.vb: IMapProperty(Of TClassType, TDataType, TReturnType)
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty<TClassType, TDataType, TReturnType>
  fullName.vb: Inflatable.ClassMapper.Interfaces.IMapProperty(Of TClassType, TDataType, TReturnType)
  nameWithType: IMapProperty<TClassType, TDataType, TReturnType>
  nameWithType.vb: IMapProperty(Of TClassType, TDataType, TReturnType)
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty`3.CascadeChanges
  name: CascadeChanges()
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty-3.html#Inflatable_ClassMapper_Interfaces_IMapProperty_3_CascadeChanges
  commentId: M:Inflatable.ClassMapper.Interfaces.IMapProperty`3.CascadeChanges
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty<TClassType, TDataType, TReturnType>.CascadeChanges()
  fullName.vb: Inflatable.ClassMapper.Interfaces.IMapProperty(Of TClassType, TDataType, TReturnType).CascadeChanges()
  nameWithType: IMapProperty<TClassType, TDataType, TReturnType>.CascadeChanges()
  nameWithType.vb: IMapProperty(Of TClassType, TDataType, TReturnType).CascadeChanges()
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty`3.CascadeChanges*
  name: CascadeChanges
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty-3.html#Inflatable_ClassMapper_Interfaces_IMapProperty_3_CascadeChanges_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IMapProperty`3.CascadeChanges
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty<TClassType, TDataType, TReturnType>.CascadeChanges
  fullName.vb: Inflatable.ClassMapper.Interfaces.IMapProperty(Of TClassType, TDataType, TReturnType).CascadeChanges
  nameWithType: IMapProperty<TClassType, TDataType, TReturnType>.CascadeChanges
  nameWithType.vb: IMapProperty(Of TClassType, TDataType, TReturnType).CascadeChanges
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty`3.IsUnique
  name: IsUnique()
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty-3.html#Inflatable_ClassMapper_Interfaces_IMapProperty_3_IsUnique
  commentId: M:Inflatable.ClassMapper.Interfaces.IMapProperty`3.IsUnique
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty<TClassType, TDataType, TReturnType>.IsUnique()
  fullName.vb: Inflatable.ClassMapper.Interfaces.IMapProperty(Of TClassType, TDataType, TReturnType).IsUnique()
  nameWithType: IMapProperty<TClassType, TDataType, TReturnType>.IsUnique()
  nameWithType.vb: IMapProperty(Of TClassType, TDataType, TReturnType).IsUnique()
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty`3.IsUnique*
  name: IsUnique
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty-3.html#Inflatable_ClassMapper_Interfaces_IMapProperty_3_IsUnique_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IMapProperty`3.IsUnique
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty<TClassType, TDataType, TReturnType>.IsUnique
  fullName.vb: Inflatable.ClassMapper.Interfaces.IMapProperty(Of TClassType, TDataType, TReturnType).IsUnique
  nameWithType: IMapProperty<TClassType, TDataType, TReturnType>.IsUnique
  nameWithType.vb: IMapProperty(Of TClassType, TDataType, TReturnType).IsUnique
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty`3.LoadUsing(System.String,System.Data.CommandType)
  name: LoadUsing(string, CommandType)
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty-3.html#Inflatable_ClassMapper_Interfaces_IMapProperty_3_LoadUsing_System_String_System_Data_CommandType_
  commentId: M:Inflatable.ClassMapper.Interfaces.IMapProperty`3.LoadUsing(System.String,System.Data.CommandType)
  name.vb: LoadUsing(String, CommandType)
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty<TClassType, TDataType, TReturnType>.LoadUsing(string, System.Data.CommandType)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IMapProperty(Of TClassType, TDataType, TReturnType).LoadUsing(String, System.Data.CommandType)
  nameWithType: IMapProperty<TClassType, TDataType, TReturnType>.LoadUsing(string, CommandType)
  nameWithType.vb: IMapProperty(Of TClassType, TDataType, TReturnType).LoadUsing(String, CommandType)
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty`3.LoadUsing*
  name: LoadUsing
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty-3.html#Inflatable_ClassMapper_Interfaces_IMapProperty_3_LoadUsing_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IMapProperty`3.LoadUsing
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty<TClassType, TDataType, TReturnType>.LoadUsing
  fullName.vb: Inflatable.ClassMapper.Interfaces.IMapProperty(Of TClassType, TDataType, TReturnType).LoadUsing
  nameWithType: IMapProperty<TClassType, TDataType, TReturnType>.LoadUsing
  nameWithType.vb: IMapProperty(Of TClassType, TDataType, TReturnType).LoadUsing
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty`3.OnDeleteDoNothing
  name: OnDeleteDoNothing()
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty-3.html#Inflatable_ClassMapper_Interfaces_IMapProperty_3_OnDeleteDoNothing
  commentId: M:Inflatable.ClassMapper.Interfaces.IMapProperty`3.OnDeleteDoNothing
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty<TClassType, TDataType, TReturnType>.OnDeleteDoNothing()
  fullName.vb: Inflatable.ClassMapper.Interfaces.IMapProperty(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing()
  nameWithType: IMapProperty<TClassType, TDataType, TReturnType>.OnDeleteDoNothing()
  nameWithType.vb: IMapProperty(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing()
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty`3.OnDeleteDoNothing*
  name: OnDeleteDoNothing
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty-3.html#Inflatable_ClassMapper_Interfaces_IMapProperty_3_OnDeleteDoNothing_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IMapProperty`3.OnDeleteDoNothing
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty<TClassType, TDataType, TReturnType>.OnDeleteDoNothing
  fullName.vb: Inflatable.ClassMapper.Interfaces.IMapProperty(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing
  nameWithType: IMapProperty<TClassType, TDataType, TReturnType>.OnDeleteDoNothing
  nameWithType.vb: IMapProperty(Of TClassType, TDataType, TReturnType).OnDeleteDoNothing
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty`3.WithColumnName(System.String)
  name: WithColumnName(string)
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty-3.html#Inflatable_ClassMapper_Interfaces_IMapProperty_3_WithColumnName_System_String_
  commentId: M:Inflatable.ClassMapper.Interfaces.IMapProperty`3.WithColumnName(System.String)
  name.vb: WithColumnName(String)
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty<TClassType, TDataType, TReturnType>.WithColumnName(string)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IMapProperty(Of TClassType, TDataType, TReturnType).WithColumnName(String)
  nameWithType: IMapProperty<TClassType, TDataType, TReturnType>.WithColumnName(string)
  nameWithType.vb: IMapProperty(Of TClassType, TDataType, TReturnType).WithColumnName(String)
- uid: Inflatable.ClassMapper.Interfaces.IMapProperty`3.WithColumnName*
  name: WithColumnName
  href: api/Inflatable.ClassMapper.Interfaces.IMapProperty-3.html#Inflatable_ClassMapper_Interfaces_IMapProperty_3_WithColumnName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IMapProperty`3.WithColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IMapProperty<TClassType, TDataType, TReturnType>.WithColumnName
  fullName.vb: Inflatable.ClassMapper.Interfaces.IMapProperty(Of TClassType, TDataType, TReturnType).WithColumnName
  nameWithType: IMapProperty<TClassType, TDataType, TReturnType>.WithColumnName
  nameWithType.vb: IMapProperty(Of TClassType, TDataType, TReturnType).WithColumnName
- uid: Inflatable.ClassMapper.Interfaces.IProperty
  name: IProperty
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html
  commentId: T:Inflatable.ClassMapper.Interfaces.IProperty
  fullName: Inflatable.ClassMapper.Interfaces.IProperty
  nameWithType: IProperty
- uid: Inflatable.ClassMapper.Interfaces.IProperty.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  name: AddToTable(ITable)
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_AddToTable_Data_Modeler_Providers_Interfaces_ITable_
  commentId: M:Inflatable.ClassMapper.Interfaces.IProperty.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.AddToTable(Data.Modeler.Providers.Interfaces.ITable)
  nameWithType: IProperty.AddToTable(ITable)
- uid: Inflatable.ClassMapper.Interfaces.IProperty.AddToTable*
  name: AddToTable
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_AddToTable_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty.AddToTable
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.AddToTable
  nameWithType: IProperty.AddToTable
- uid: Inflatable.ClassMapper.Interfaces.IProperty.ColumnName
  name: ColumnName
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_ColumnName
  commentId: P:Inflatable.ClassMapper.Interfaces.IProperty.ColumnName
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.ColumnName
  nameWithType: IProperty.ColumnName
- uid: Inflatable.ClassMapper.Interfaces.IProperty.ColumnName*
  name: ColumnName
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_ColumnName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty.ColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.ColumnName
  nameWithType: IProperty.ColumnName
- uid: Inflatable.ClassMapper.Interfaces.IProperty.ComputedColumnSpecification
  name: ComputedColumnSpecification
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_ComputedColumnSpecification
  commentId: P:Inflatable.ClassMapper.Interfaces.IProperty.ComputedColumnSpecification
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.ComputedColumnSpecification
  nameWithType: IProperty.ComputedColumnSpecification
- uid: Inflatable.ClassMapper.Interfaces.IProperty.ComputedColumnSpecification*
  name: ComputedColumnSpecification
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_ComputedColumnSpecification_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty.ComputedColumnSpecification
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.ComputedColumnSpecification
  nameWithType: IProperty.ComputedColumnSpecification
- uid: Inflatable.ClassMapper.Interfaces.IProperty.Constraints
  name: Constraints
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_Constraints
  commentId: P:Inflatable.ClassMapper.Interfaces.IProperty.Constraints
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.Constraints
  nameWithType: IProperty.Constraints
- uid: Inflatable.ClassMapper.Interfaces.IProperty.Constraints*
  name: Constraints
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_Constraints_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty.Constraints
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.Constraints
  nameWithType: IProperty.Constraints
- uid: Inflatable.ClassMapper.Interfaces.IProperty.Convert*
  name: Convert
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_Convert_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty.Convert
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.Convert
  nameWithType: IProperty.Convert
- uid: Inflatable.ClassMapper.Interfaces.IProperty.Convert``1(Inflatable.Interfaces.IMapping)
  name: Convert<TResult>(IMapping)
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_Convert__1_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.ClassMapper.Interfaces.IProperty.Convert``1(Inflatable.Interfaces.IMapping)
  name.vb: Convert(Of TResult)(IMapping)
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.Convert<TResult>(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty.Convert(Of TResult)(Inflatable.Interfaces.IMapping)
  nameWithType: IProperty.Convert<TResult>(IMapping)
  nameWithType.vb: IProperty.Convert(Of TResult)(IMapping)
- uid: Inflatable.ClassMapper.Interfaces.IProperty.Index
  name: Index
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_Index
  commentId: P:Inflatable.ClassMapper.Interfaces.IProperty.Index
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.Index
  nameWithType: IProperty.Index
- uid: Inflatable.ClassMapper.Interfaces.IProperty.Index*
  name: Index
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_Index_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty.Index
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.Index
  nameWithType: IProperty.Index
- uid: Inflatable.ClassMapper.Interfaces.IProperty.InternalFieldName
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_InternalFieldName
  commentId: P:Inflatable.ClassMapper.Interfaces.IProperty.InternalFieldName
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.InternalFieldName
  nameWithType: IProperty.InternalFieldName
- uid: Inflatable.ClassMapper.Interfaces.IProperty.InternalFieldName*
  name: InternalFieldName
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_InternalFieldName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty.InternalFieldName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.InternalFieldName
  nameWithType: IProperty.InternalFieldName
- uid: Inflatable.ClassMapper.Interfaces.IProperty.MaxLength
  name: MaxLength
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_MaxLength
  commentId: P:Inflatable.ClassMapper.Interfaces.IProperty.MaxLength
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.MaxLength
  nameWithType: IProperty.MaxLength
- uid: Inflatable.ClassMapper.Interfaces.IProperty.MaxLength*
  name: MaxLength
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_MaxLength_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty.MaxLength
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.MaxLength
  nameWithType: IProperty.MaxLength
- uid: Inflatable.ClassMapper.Interfaces.IProperty.Name
  name: Name
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_Name
  commentId: P:Inflatable.ClassMapper.Interfaces.IProperty.Name
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.Name
  nameWithType: IProperty.Name
- uid: Inflatable.ClassMapper.Interfaces.IProperty.Name*
  name: Name
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_Name_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty.Name
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.Name
  nameWithType: IProperty.Name
- uid: Inflatable.ClassMapper.Interfaces.IProperty.Nullable
  name: Nullable
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_Nullable
  commentId: P:Inflatable.ClassMapper.Interfaces.IProperty.Nullable
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.Nullable
  nameWithType: IProperty.Nullable
- uid: Inflatable.ClassMapper.Interfaces.IProperty.Nullable*
  name: Nullable
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_Nullable_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty.Nullable
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.Nullable
  nameWithType: IProperty.Nullable
- uid: Inflatable.ClassMapper.Interfaces.IProperty.ParentMapping
  name: ParentMapping
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_ParentMapping
  commentId: P:Inflatable.ClassMapper.Interfaces.IProperty.ParentMapping
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.ParentMapping
  nameWithType: IProperty.ParentMapping
- uid: Inflatable.ClassMapper.Interfaces.IProperty.ParentMapping*
  name: ParentMapping
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_ParentMapping_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty.ParentMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.ParentMapping
  nameWithType: IProperty.ParentMapping
- uid: Inflatable.ClassMapper.Interfaces.IProperty.PropertyType
  name: PropertyType
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_PropertyType
  commentId: P:Inflatable.ClassMapper.Interfaces.IProperty.PropertyType
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.PropertyType
  nameWithType: IProperty.PropertyType
- uid: Inflatable.ClassMapper.Interfaces.IProperty.PropertyType*
  name: PropertyType
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_PropertyType_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty.PropertyType
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.PropertyType
  nameWithType: IProperty.PropertyType
- uid: Inflatable.ClassMapper.Interfaces.IProperty.ReadOnly
  name: ReadOnly
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_ReadOnly
  commentId: P:Inflatable.ClassMapper.Interfaces.IProperty.ReadOnly
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.ReadOnly
  nameWithType: IProperty.ReadOnly
- uid: Inflatable.ClassMapper.Interfaces.IProperty.ReadOnly*
  name: ReadOnly
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_ReadOnly_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty.ReadOnly
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.ReadOnly
  nameWithType: IProperty.ReadOnly
- uid: Inflatable.ClassMapper.Interfaces.IProperty.Setup
  name: Setup()
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_Setup
  commentId: M:Inflatable.ClassMapper.Interfaces.IProperty.Setup
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.Setup()
  nameWithType: IProperty.Setup()
- uid: Inflatable.ClassMapper.Interfaces.IProperty.Setup*
  name: Setup
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_Setup_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty.Setup
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.Setup
  nameWithType: IProperty.Setup
- uid: Inflatable.ClassMapper.Interfaces.IProperty.Similar(Inflatable.ClassMapper.Interfaces.IProperty)
  name: Similar(IProperty)
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_Similar_Inflatable_ClassMapper_Interfaces_IProperty_
  commentId: M:Inflatable.ClassMapper.Interfaces.IProperty.Similar(Inflatable.ClassMapper.Interfaces.IProperty)
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.Similar(Inflatable.ClassMapper.Interfaces.IProperty)
  nameWithType: IProperty.Similar(IProperty)
- uid: Inflatable.ClassMapper.Interfaces.IProperty.Similar*
  name: Similar
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_Similar_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty.Similar
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.Similar
  nameWithType: IProperty.Similar
- uid: Inflatable.ClassMapper.Interfaces.IProperty.TypeName
  name: TypeName
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_TypeName
  commentId: P:Inflatable.ClassMapper.Interfaces.IProperty.TypeName
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.TypeName
  nameWithType: IProperty.TypeName
- uid: Inflatable.ClassMapper.Interfaces.IProperty.TypeName*
  name: TypeName
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_TypeName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty.TypeName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.TypeName
  nameWithType: IProperty.TypeName
- uid: Inflatable.ClassMapper.Interfaces.IProperty.Unique
  name: Unique
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_Unique
  commentId: P:Inflatable.ClassMapper.Interfaces.IProperty.Unique
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.Unique
  nameWithType: IProperty.Unique
- uid: Inflatable.ClassMapper.Interfaces.IProperty.Unique*
  name: Unique
  href: api/Inflatable.ClassMapper.Interfaces.IProperty.html#Inflatable_ClassMapper_Interfaces_IProperty_Unique_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty.Unique
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty.Unique
  nameWithType: IProperty.Unique
- uid: Inflatable.ClassMapper.Interfaces.IProperty`2
  name: IProperty<ClassType, DataType>
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-2.html
  commentId: T:Inflatable.ClassMapper.Interfaces.IProperty`2
  name.vb: IProperty(Of ClassType, DataType)
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType>
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType)
  nameWithType: IProperty<ClassType, DataType>
  nameWithType.vb: IProperty(Of ClassType, DataType)
- uid: Inflatable.ClassMapper.Interfaces.IProperty`2.CompiledExpression
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-2.html#Inflatable_ClassMapper_Interfaces_IProperty_2_CompiledExpression
  commentId: P:Inflatable.ClassMapper.Interfaces.IProperty`2.CompiledExpression
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType).CompiledExpression
  nameWithType: IProperty<ClassType, DataType>.CompiledExpression
  nameWithType.vb: IProperty(Of ClassType, DataType).CompiledExpression
- uid: Inflatable.ClassMapper.Interfaces.IProperty`2.CompiledExpression*
  name: CompiledExpression
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-2.html#Inflatable_ClassMapper_Interfaces_IProperty_2_CompiledExpression_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty`2.CompiledExpression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType>.CompiledExpression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType).CompiledExpression
  nameWithType: IProperty<ClassType, DataType>.CompiledExpression
  nameWithType.vb: IProperty(Of ClassType, DataType).CompiledExpression
- uid: Inflatable.ClassMapper.Interfaces.IProperty`2.DefaultValue
  name: DefaultValue
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-2.html#Inflatable_ClassMapper_Interfaces_IProperty_2_DefaultValue
  commentId: P:Inflatable.ClassMapper.Interfaces.IProperty`2.DefaultValue
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType>.DefaultValue
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType).DefaultValue
  nameWithType: IProperty<ClassType, DataType>.DefaultValue
  nameWithType.vb: IProperty(Of ClassType, DataType).DefaultValue
- uid: Inflatable.ClassMapper.Interfaces.IProperty`2.DefaultValue*
  name: DefaultValue
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-2.html#Inflatable_ClassMapper_Interfaces_IProperty_2_DefaultValue_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty`2.DefaultValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType>.DefaultValue
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType).DefaultValue
  nameWithType: IProperty<ClassType, DataType>.DefaultValue
  nameWithType.vb: IProperty(Of ClassType, DataType).DefaultValue
- uid: Inflatable.ClassMapper.Interfaces.IProperty`2.Expression
  name: Expression
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-2.html#Inflatable_ClassMapper_Interfaces_IProperty_2_Expression
  commentId: P:Inflatable.ClassMapper.Interfaces.IProperty`2.Expression
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType>.Expression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType).Expression
  nameWithType: IProperty<ClassType, DataType>.Expression
  nameWithType.vb: IProperty(Of ClassType, DataType).Expression
- uid: Inflatable.ClassMapper.Interfaces.IProperty`2.Expression*
  name: Expression
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-2.html#Inflatable_ClassMapper_Interfaces_IProperty_2_Expression_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty`2.Expression
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType>.Expression
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType).Expression
  nameWithType: IProperty<ClassType, DataType>.Expression
  nameWithType.vb: IProperty(Of ClassType, DataType).Expression
- uid: Inflatable.ClassMapper.Interfaces.IProperty`3
  name: IProperty<ClassType, DataType, ReturnType>
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-3.html
  commentId: T:Inflatable.ClassMapper.Interfaces.IProperty`3
  name.vb: IProperty(Of ClassType, DataType, ReturnType)
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType, ReturnType>
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType, ReturnType)
  nameWithType: IProperty<ClassType, DataType, ReturnType>
  nameWithType.vb: IProperty(Of ClassType, DataType, ReturnType)
- uid: Inflatable.ClassMapper.Interfaces.IProperty`3.IsIndexed
  name: IsIndexed()
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-3.html#Inflatable_ClassMapper_Interfaces_IProperty_3_IsIndexed
  commentId: M:Inflatable.ClassMapper.Interfaces.IProperty`3.IsIndexed
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType, ReturnType>.IsIndexed()
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType, ReturnType).IsIndexed()
  nameWithType: IProperty<ClassType, DataType, ReturnType>.IsIndexed()
  nameWithType.vb: IProperty(Of ClassType, DataType, ReturnType).IsIndexed()
- uid: Inflatable.ClassMapper.Interfaces.IProperty`3.IsIndexed*
  name: IsIndexed
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-3.html#Inflatable_ClassMapper_Interfaces_IProperty_3_IsIndexed_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty`3.IsIndexed
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType, ReturnType>.IsIndexed
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType, ReturnType).IsIndexed
  nameWithType: IProperty<ClassType, DataType, ReturnType>.IsIndexed
  nameWithType.vb: IProperty(Of ClassType, DataType, ReturnType).IsIndexed
- uid: Inflatable.ClassMapper.Interfaces.IProperty`3.IsReadOnly
  name: IsReadOnly()
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-3.html#Inflatable_ClassMapper_Interfaces_IProperty_3_IsReadOnly
  commentId: M:Inflatable.ClassMapper.Interfaces.IProperty`3.IsReadOnly
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType, ReturnType>.IsReadOnly()
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType, ReturnType).IsReadOnly()
  nameWithType: IProperty<ClassType, DataType, ReturnType>.IsReadOnly()
  nameWithType.vb: IProperty(Of ClassType, DataType, ReturnType).IsReadOnly()
- uid: Inflatable.ClassMapper.Interfaces.IProperty`3.IsReadOnly*
  name: IsReadOnly
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-3.html#Inflatable_ClassMapper_Interfaces_IProperty_3_IsReadOnly_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty`3.IsReadOnly
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType, ReturnType>.IsReadOnly
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType, ReturnType).IsReadOnly
  nameWithType: IProperty<ClassType, DataType, ReturnType>.IsReadOnly
  nameWithType.vb: IProperty(Of ClassType, DataType, ReturnType).IsReadOnly
- uid: Inflatable.ClassMapper.Interfaces.IProperty`3.IsUnique
  name: IsUnique()
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-3.html#Inflatable_ClassMapper_Interfaces_IProperty_3_IsUnique
  commentId: M:Inflatable.ClassMapper.Interfaces.IProperty`3.IsUnique
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType, ReturnType>.IsUnique()
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType, ReturnType).IsUnique()
  nameWithType: IProperty<ClassType, DataType, ReturnType>.IsUnique()
  nameWithType.vb: IProperty(Of ClassType, DataType, ReturnType).IsUnique()
- uid: Inflatable.ClassMapper.Interfaces.IProperty`3.IsUnique*
  name: IsUnique
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-3.html#Inflatable_ClassMapper_Interfaces_IProperty_3_IsUnique_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty`3.IsUnique
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType, ReturnType>.IsUnique
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType, ReturnType).IsUnique
  nameWithType: IProperty<ClassType, DataType, ReturnType>.IsUnique
  nameWithType.vb: IProperty(Of ClassType, DataType, ReturnType).IsUnique
- uid: Inflatable.ClassMapper.Interfaces.IProperty`3.WithColumnName(System.String)
  name: WithColumnName(string)
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-3.html#Inflatable_ClassMapper_Interfaces_IProperty_3_WithColumnName_System_String_
  commentId: M:Inflatable.ClassMapper.Interfaces.IProperty`3.WithColumnName(System.String)
  name.vb: WithColumnName(String)
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType, ReturnType>.WithColumnName(string)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType, ReturnType).WithColumnName(String)
  nameWithType: IProperty<ClassType, DataType, ReturnType>.WithColumnName(string)
  nameWithType.vb: IProperty(Of ClassType, DataType, ReturnType).WithColumnName(String)
- uid: Inflatable.ClassMapper.Interfaces.IProperty`3.WithColumnName*
  name: WithColumnName
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-3.html#Inflatable_ClassMapper_Interfaces_IProperty_3_WithColumnName_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty`3.WithColumnName
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType, ReturnType>.WithColumnName
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType, ReturnType).WithColumnName
  nameWithType: IProperty<ClassType, DataType, ReturnType>.WithColumnName
  nameWithType.vb: IProperty(Of ClassType, DataType, ReturnType).WithColumnName
- uid: Inflatable.ClassMapper.Interfaces.IProperty`3.WithComputedColumnSpecification(System.String)
  name: WithComputedColumnSpecification(string)
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-3.html#Inflatable_ClassMapper_Interfaces_IProperty_3_WithComputedColumnSpecification_System_String_
  commentId: M:Inflatable.ClassMapper.Interfaces.IProperty`3.WithComputedColumnSpecification(System.String)
  name.vb: WithComputedColumnSpecification(String)
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType, ReturnType>.WithComputedColumnSpecification(string)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType, ReturnType).WithComputedColumnSpecification(String)
  nameWithType: IProperty<ClassType, DataType, ReturnType>.WithComputedColumnSpecification(string)
  nameWithType.vb: IProperty(Of ClassType, DataType, ReturnType).WithComputedColumnSpecification(String)
- uid: Inflatable.ClassMapper.Interfaces.IProperty`3.WithComputedColumnSpecification*
  name: WithComputedColumnSpecification
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-3.html#Inflatable_ClassMapper_Interfaces_IProperty_3_WithComputedColumnSpecification_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty`3.WithComputedColumnSpecification
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType, ReturnType>.WithComputedColumnSpecification
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType, ReturnType).WithComputedColumnSpecification
  nameWithType: IProperty<ClassType, DataType, ReturnType>.WithComputedColumnSpecification
  nameWithType.vb: IProperty(Of ClassType, DataType, ReturnType).WithComputedColumnSpecification
- uid: Inflatable.ClassMapper.Interfaces.IProperty`3.WithConstraint(System.String)
  name: WithConstraint(string)
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-3.html#Inflatable_ClassMapper_Interfaces_IProperty_3_WithConstraint_System_String_
  commentId: M:Inflatable.ClassMapper.Interfaces.IProperty`3.WithConstraint(System.String)
  name.vb: WithConstraint(String)
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType, ReturnType>.WithConstraint(string)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType, ReturnType).WithConstraint(String)
  nameWithType: IProperty<ClassType, DataType, ReturnType>.WithConstraint(string)
  nameWithType.vb: IProperty(Of ClassType, DataType, ReturnType).WithConstraint(String)
- uid: Inflatable.ClassMapper.Interfaces.IProperty`3.WithConstraint*
  name: WithConstraint
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-3.html#Inflatable_ClassMapper_Interfaces_IProperty_3_WithConstraint_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty`3.WithConstraint
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType, ReturnType>.WithConstraint
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType, ReturnType).WithConstraint
  nameWithType: IProperty<ClassType, DataType, ReturnType>.WithConstraint
  nameWithType.vb: IProperty(Of ClassType, DataType, ReturnType).WithConstraint
- uid: Inflatable.ClassMapper.Interfaces.IProperty`3.WithDefaultValue(System.Func{`1})
  name: WithDefaultValue(Func<DataType>)
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-3.html#Inflatable_ClassMapper_Interfaces_IProperty_3_WithDefaultValue_System_Func__1__
  commentId: M:Inflatable.ClassMapper.Interfaces.IProperty`3.WithDefaultValue(System.Func{`1})
  name.vb: WithDefaultValue(Func(Of DataType))
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType, ReturnType>.WithDefaultValue(System.Func<DataType>)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType, ReturnType).WithDefaultValue(System.Func(Of DataType))
  nameWithType: IProperty<ClassType, DataType, ReturnType>.WithDefaultValue(Func<DataType>)
  nameWithType.vb: IProperty(Of ClassType, DataType, ReturnType).WithDefaultValue(Func(Of DataType))
- uid: Inflatable.ClassMapper.Interfaces.IProperty`3.WithDefaultValue*
  name: WithDefaultValue
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-3.html#Inflatable_ClassMapper_Interfaces_IProperty_3_WithDefaultValue_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty`3.WithDefaultValue
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType, ReturnType>.WithDefaultValue
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType, ReturnType).WithDefaultValue
  nameWithType: IProperty<ClassType, DataType, ReturnType>.WithDefaultValue
  nameWithType.vb: IProperty(Of ClassType, DataType, ReturnType).WithDefaultValue
- uid: Inflatable.ClassMapper.Interfaces.IProperty`3.WithMaxLength
  name: WithMaxLength()
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-3.html#Inflatable_ClassMapper_Interfaces_IProperty_3_WithMaxLength
  commentId: M:Inflatable.ClassMapper.Interfaces.IProperty`3.WithMaxLength
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType, ReturnType>.WithMaxLength()
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType, ReturnType).WithMaxLength()
  nameWithType: IProperty<ClassType, DataType, ReturnType>.WithMaxLength()
  nameWithType.vb: IProperty(Of ClassType, DataType, ReturnType).WithMaxLength()
- uid: Inflatable.ClassMapper.Interfaces.IProperty`3.WithMaxLength(System.Int32)
  name: WithMaxLength(int)
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-3.html#Inflatable_ClassMapper_Interfaces_IProperty_3_WithMaxLength_System_Int32_
  commentId: M:Inflatable.ClassMapper.Interfaces.IProperty`3.WithMaxLength(System.Int32)
  name.vb: WithMaxLength(Integer)
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType, ReturnType>.WithMaxLength(int)
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType, ReturnType).WithMaxLength(Integer)
  nameWithType: IProperty<ClassType, DataType, ReturnType>.WithMaxLength(int)
  nameWithType.vb: IProperty(Of ClassType, DataType, ReturnType).WithMaxLength(Integer)
- uid: Inflatable.ClassMapper.Interfaces.IProperty`3.WithMaxLength*
  name: WithMaxLength
  href: api/Inflatable.ClassMapper.Interfaces.IProperty-3.html#Inflatable_ClassMapper_Interfaces_IProperty_3_WithMaxLength_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IProperty`3.WithMaxLength
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IProperty<ClassType, DataType, ReturnType>.WithMaxLength
  fullName.vb: Inflatable.ClassMapper.Interfaces.IProperty(Of ClassType, DataType, ReturnType).WithMaxLength
  nameWithType: IProperty<ClassType, DataType, ReturnType>.WithMaxLength
  nameWithType.vb: IProperty(Of ClassType, DataType, ReturnType).WithMaxLength
- uid: Inflatable.ClassMapper.Interfaces.IPropertyColumns
  name: IPropertyColumns
  href: api/Inflatable.ClassMapper.Interfaces.IPropertyColumns.html
  commentId: T:Inflatable.ClassMapper.Interfaces.IPropertyColumns
  fullName: Inflatable.ClassMapper.Interfaces.IPropertyColumns
  nameWithType: IPropertyColumns
- uid: Inflatable.ClassMapper.Interfaces.IPropertyColumns.GetColumnInfo
  name: GetColumnInfo()
  href: api/Inflatable.ClassMapper.Interfaces.IPropertyColumns.html#Inflatable_ClassMapper_Interfaces_IPropertyColumns_GetColumnInfo
  commentId: M:Inflatable.ClassMapper.Interfaces.IPropertyColumns.GetColumnInfo
  fullName: Inflatable.ClassMapper.Interfaces.IPropertyColumns.GetColumnInfo()
  nameWithType: IPropertyColumns.GetColumnInfo()
- uid: Inflatable.ClassMapper.Interfaces.IPropertyColumns.GetColumnInfo*
  name: GetColumnInfo
  href: api/Inflatable.ClassMapper.Interfaces.IPropertyColumns.html#Inflatable_ClassMapper_Interfaces_IPropertyColumns_GetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IPropertyColumns.GetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IPropertyColumns.GetColumnInfo
  nameWithType: IPropertyColumns.GetColumnInfo
- uid: Inflatable.ClassMapper.Interfaces.IPropertyColumns.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  name: SetColumnInfo(IMappingSource)
  href: api/Inflatable.ClassMapper.Interfaces.IPropertyColumns.html#Inflatable_ClassMapper_Interfaces_IPropertyColumns_SetColumnInfo_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.ClassMapper.Interfaces.IPropertyColumns.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.ClassMapper.Interfaces.IPropertyColumns.SetColumnInfo(Inflatable.ClassMapper.IMappingSource)
  nameWithType: IPropertyColumns.SetColumnInfo(IMappingSource)
- uid: Inflatable.ClassMapper.Interfaces.IPropertyColumns.SetColumnInfo*
  name: SetColumnInfo
  href: api/Inflatable.ClassMapper.Interfaces.IPropertyColumns.html#Inflatable_ClassMapper_Interfaces_IPropertyColumns_SetColumnInfo_
  commentId: Overload:Inflatable.ClassMapper.Interfaces.IPropertyColumns.SetColumnInfo
  isSpec: "True"
  fullName: Inflatable.ClassMapper.Interfaces.IPropertyColumns.SetColumnInfo
  nameWithType: IPropertyColumns.SetColumnInfo
- uid: Inflatable.ClassMapper.MappingManager
  name: MappingManager
  href: api/Inflatable.ClassMapper.MappingManager.html
  commentId: T:Inflatable.ClassMapper.MappingManager
  fullName: Inflatable.ClassMapper.MappingManager
  nameWithType: MappingManager
- uid: Inflatable.ClassMapper.MappingManager.#ctor(System.Collections.Generic.IEnumerable{Inflatable.Interfaces.IMapping},System.Collections.Generic.IEnumerable{Inflatable.Interfaces.IDatabase},Inflatable.QueryProvider.QueryProviderManager,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder},Microsoft.Extensions.Logging.ILogger{Inflatable.ClassMapper.MappingManager})
  name: MappingManager(IEnumerable<IMapping>, IEnumerable<IDatabase>, QueryProviderManager, ObjectPool<StringBuilder>, ILogger<MappingManager>?)
  href: api/Inflatable.ClassMapper.MappingManager.html#Inflatable_ClassMapper_MappingManager__ctor_System_Collections_Generic_IEnumerable_Inflatable_Interfaces_IMapping__System_Collections_Generic_IEnumerable_Inflatable_Interfaces_IDatabase__Inflatable_QueryProvider_QueryProviderManager_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__Microsoft_Extensions_Logging_ILogger_Inflatable_ClassMapper_MappingManager__
  commentId: M:Inflatable.ClassMapper.MappingManager.#ctor(System.Collections.Generic.IEnumerable{Inflatable.Interfaces.IMapping},System.Collections.Generic.IEnumerable{Inflatable.Interfaces.IDatabase},Inflatable.QueryProvider.QueryProviderManager,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder},Microsoft.Extensions.Logging.ILogger{Inflatable.ClassMapper.MappingManager})
  name.vb: New(IEnumerable(Of IMapping), IEnumerable(Of IDatabase), QueryProviderManager, ObjectPool(Of StringBuilder), ILogger(Of MappingManager))
  fullName: Inflatable.ClassMapper.MappingManager.MappingManager(System.Collections.Generic.IEnumerable<Inflatable.Interfaces.IMapping>, System.Collections.Generic.IEnumerable<Inflatable.Interfaces.IDatabase>, Inflatable.QueryProvider.QueryProviderManager, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>, Microsoft.Extensions.Logging.ILogger<Inflatable.ClassMapper.MappingManager>?)
  fullName.vb: Inflatable.ClassMapper.MappingManager.New(System.Collections.Generic.IEnumerable(Of Inflatable.Interfaces.IMapping), System.Collections.Generic.IEnumerable(Of Inflatable.Interfaces.IDatabase), Inflatable.QueryProvider.QueryProviderManager, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder), Microsoft.Extensions.Logging.ILogger(Of Inflatable.ClassMapper.MappingManager))
  nameWithType: MappingManager.MappingManager(IEnumerable<IMapping>, IEnumerable<IDatabase>, QueryProviderManager, ObjectPool<StringBuilder>, ILogger<MappingManager>?)
  nameWithType.vb: MappingManager.New(IEnumerable(Of IMapping), IEnumerable(Of IDatabase), QueryProviderManager, ObjectPool(Of StringBuilder), ILogger(Of MappingManager))
- uid: Inflatable.ClassMapper.MappingManager.#ctor*
  name: MappingManager
  href: api/Inflatable.ClassMapper.MappingManager.html#Inflatable_ClassMapper_MappingManager__ctor_
  commentId: Overload:Inflatable.ClassMapper.MappingManager.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.ClassMapper.MappingManager.MappingManager
  fullName.vb: Inflatable.ClassMapper.MappingManager.New
  nameWithType: MappingManager.MappingManager
  nameWithType.vb: MappingManager.New
- uid: Inflatable.ClassMapper.MappingManager.Logger
  name: Logger
  href: api/Inflatable.ClassMapper.MappingManager.html#Inflatable_ClassMapper_MappingManager_Logger
  commentId: P:Inflatable.ClassMapper.MappingManager.Logger
  fullName: Inflatable.ClassMapper.MappingManager.Logger
  nameWithType: MappingManager.Logger
- uid: Inflatable.ClassMapper.MappingManager.Logger*
  name: Logger
  href: api/Inflatable.ClassMapper.MappingManager.html#Inflatable_ClassMapper_MappingManager_Logger_
  commentId: Overload:Inflatable.ClassMapper.MappingManager.Logger
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingManager.Logger
  nameWithType: MappingManager.Logger
- uid: Inflatable.ClassMapper.MappingManager.ObjectPool
  name: ObjectPool
  href: api/Inflatable.ClassMapper.MappingManager.html#Inflatable_ClassMapper_MappingManager_ObjectPool
  commentId: P:Inflatable.ClassMapper.MappingManager.ObjectPool
  fullName: Inflatable.ClassMapper.MappingManager.ObjectPool
  nameWithType: MappingManager.ObjectPool
- uid: Inflatable.ClassMapper.MappingManager.ObjectPool*
  name: ObjectPool
  href: api/Inflatable.ClassMapper.MappingManager.html#Inflatable_ClassMapper_MappingManager_ObjectPool_
  commentId: Overload:Inflatable.ClassMapper.MappingManager.ObjectPool
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingManager.ObjectPool
  nameWithType: MappingManager.ObjectPool
- uid: Inflatable.ClassMapper.MappingManager.ReadSources
  name: ReadSources
  href: api/Inflatable.ClassMapper.MappingManager.html#Inflatable_ClassMapper_MappingManager_ReadSources
  commentId: P:Inflatable.ClassMapper.MappingManager.ReadSources
  fullName: Inflatable.ClassMapper.MappingManager.ReadSources
  nameWithType: MappingManager.ReadSources
- uid: Inflatable.ClassMapper.MappingManager.ReadSources*
  name: ReadSources
  href: api/Inflatable.ClassMapper.MappingManager.html#Inflatable_ClassMapper_MappingManager_ReadSources_
  commentId: Overload:Inflatable.ClassMapper.MappingManager.ReadSources
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingManager.ReadSources
  nameWithType: MappingManager.ReadSources
- uid: Inflatable.ClassMapper.MappingManager.Sources
  name: Sources
  href: api/Inflatable.ClassMapper.MappingManager.html#Inflatable_ClassMapper_MappingManager_Sources
  commentId: P:Inflatable.ClassMapper.MappingManager.Sources
  fullName: Inflatable.ClassMapper.MappingManager.Sources
  nameWithType: MappingManager.Sources
- uid: Inflatable.ClassMapper.MappingManager.Sources*
  name: Sources
  href: api/Inflatable.ClassMapper.MappingManager.html#Inflatable_ClassMapper_MappingManager_Sources_
  commentId: Overload:Inflatable.ClassMapper.MappingManager.Sources
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingManager.Sources
  nameWithType: MappingManager.Sources
- uid: Inflatable.ClassMapper.MappingManager.ToString
  name: ToString()
  href: api/Inflatable.ClassMapper.MappingManager.html#Inflatable_ClassMapper_MappingManager_ToString
  commentId: M:Inflatable.ClassMapper.MappingManager.ToString
  fullName: Inflatable.ClassMapper.MappingManager.ToString()
  nameWithType: MappingManager.ToString()
- uid: Inflatable.ClassMapper.MappingManager.ToString*
  name: ToString
  href: api/Inflatable.ClassMapper.MappingManager.html#Inflatable_ClassMapper_MappingManager_ToString_
  commentId: Overload:Inflatable.ClassMapper.MappingManager.ToString
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingManager.ToString
  nameWithType: MappingManager.ToString
- uid: Inflatable.ClassMapper.MappingManager.WriteSources
  name: WriteSources
  href: api/Inflatable.ClassMapper.MappingManager.html#Inflatable_ClassMapper_MappingManager_WriteSources
  commentId: P:Inflatable.ClassMapper.MappingManager.WriteSources
  fullName: Inflatable.ClassMapper.MappingManager.WriteSources
  nameWithType: MappingManager.WriteSources
- uid: Inflatable.ClassMapper.MappingManager.WriteSources*
  name: WriteSources
  href: api/Inflatable.ClassMapper.MappingManager.html#Inflatable_ClassMapper_MappingManager_WriteSources_
  commentId: Overload:Inflatable.ClassMapper.MappingManager.WriteSources
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingManager.WriteSources
  nameWithType: MappingManager.WriteSources
- uid: Inflatable.ClassMapper.MappingSource
  name: MappingSource
  href: api/Inflatable.ClassMapper.MappingSource.html
  commentId: T:Inflatable.ClassMapper.MappingSource
  fullName: Inflatable.ClassMapper.MappingSource
  nameWithType: MappingSource
- uid: Inflatable.ClassMapper.MappingSource.#ctor(System.Collections.Generic.IEnumerable{Inflatable.Interfaces.IMapping},Inflatable.Interfaces.IDatabase,Inflatable.QueryProvider.QueryProviderManager,Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: MappingSource(IEnumerable<IMapping>, IDatabase, QueryProviderManager, ILogger?, ObjectPool<StringBuilder>)
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource__ctor_System_Collections_Generic_IEnumerable_Inflatable_Interfaces_IMapping__Inflatable_Interfaces_IDatabase_Inflatable_QueryProvider_QueryProviderManager_Microsoft_Extensions_Logging_ILogger_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.ClassMapper.MappingSource.#ctor(System.Collections.Generic.IEnumerable{Inflatable.Interfaces.IMapping},Inflatable.Interfaces.IDatabase,Inflatable.QueryProvider.QueryProviderManager,Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: New(IEnumerable(Of IMapping), IDatabase, QueryProviderManager, ILogger, ObjectPool(Of StringBuilder))
  fullName: Inflatable.ClassMapper.MappingSource.MappingSource(System.Collections.Generic.IEnumerable<Inflatable.Interfaces.IMapping>, Inflatable.Interfaces.IDatabase, Inflatable.QueryProvider.QueryProviderManager, Microsoft.Extensions.Logging.ILogger?, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.ClassMapper.MappingSource.New(System.Collections.Generic.IEnumerable(Of Inflatable.Interfaces.IMapping), Inflatable.Interfaces.IDatabase, Inflatable.QueryProvider.QueryProviderManager, Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: MappingSource.MappingSource(IEnumerable<IMapping>, IDatabase, QueryProviderManager, ILogger?, ObjectPool<StringBuilder>)
  nameWithType.vb: MappingSource.New(IEnumerable(Of IMapping), IDatabase, QueryProviderManager, ILogger, ObjectPool(Of StringBuilder))
- uid: Inflatable.ClassMapper.MappingSource.#ctor*
  name: MappingSource
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource__ctor_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.ClassMapper.MappingSource.MappingSource
  fullName.vb: Inflatable.ClassMapper.MappingSource.New
  nameWithType: MappingSource.MappingSource
  nameWithType.vb: MappingSource.New
- uid: Inflatable.ClassMapper.MappingSource.ApplyAnalysis
  name: ApplyAnalysis
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_ApplyAnalysis
  commentId: P:Inflatable.ClassMapper.MappingSource.ApplyAnalysis
  fullName: Inflatable.ClassMapper.MappingSource.ApplyAnalysis
  nameWithType: MappingSource.ApplyAnalysis
- uid: Inflatable.ClassMapper.MappingSource.ApplyAnalysis*
  name: ApplyAnalysis
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_ApplyAnalysis_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.ApplyAnalysis
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.ApplyAnalysis
  nameWithType: MappingSource.ApplyAnalysis
- uid: Inflatable.ClassMapper.MappingSource.CanRead
  name: CanRead
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_CanRead
  commentId: P:Inflatable.ClassMapper.MappingSource.CanRead
  fullName: Inflatable.ClassMapper.MappingSource.CanRead
  nameWithType: MappingSource.CanRead
- uid: Inflatable.ClassMapper.MappingSource.CanRead*
  name: CanRead
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_CanRead_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.CanRead
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.CanRead
  nameWithType: MappingSource.CanRead
- uid: Inflatable.ClassMapper.MappingSource.CanWrite
  name: CanWrite
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_CanWrite
  commentId: P:Inflatable.ClassMapper.MappingSource.CanWrite
  fullName: Inflatable.ClassMapper.MappingSource.CanWrite
  nameWithType: MappingSource.CanWrite
- uid: Inflatable.ClassMapper.MappingSource.CanWrite*
  name: CanWrite
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_CanWrite_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.CanWrite
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.CanWrite
  nameWithType: MappingSource.CanWrite
- uid: Inflatable.ClassMapper.MappingSource.ChildTypes
  name: ChildTypes
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_ChildTypes
  commentId: P:Inflatable.ClassMapper.MappingSource.ChildTypes
  fullName: Inflatable.ClassMapper.MappingSource.ChildTypes
  nameWithType: MappingSource.ChildTypes
- uid: Inflatable.ClassMapper.MappingSource.ChildTypes*
  name: ChildTypes
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_ChildTypes_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.ChildTypes
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.ChildTypes
  nameWithType: MappingSource.ChildTypes
- uid: Inflatable.ClassMapper.MappingSource.ConcreteTypes
  name: ConcreteTypes
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_ConcreteTypes
  commentId: P:Inflatable.ClassMapper.MappingSource.ConcreteTypes
  fullName: Inflatable.ClassMapper.MappingSource.ConcreteTypes
  nameWithType: MappingSource.ConcreteTypes
- uid: Inflatable.ClassMapper.MappingSource.ConcreteTypes*
  name: ConcreteTypes
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_ConcreteTypes_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.ConcreteTypes
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.ConcreteTypes
  nameWithType: MappingSource.ConcreteTypes
- uid: Inflatable.ClassMapper.MappingSource.Equals(System.Object)
  name: Equals(object)
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_Equals_System_Object_
  commentId: M:Inflatable.ClassMapper.MappingSource.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Inflatable.ClassMapper.MappingSource.Equals(object)
  fullName.vb: Inflatable.ClassMapper.MappingSource.Equals(Object)
  nameWithType: MappingSource.Equals(object)
  nameWithType.vb: MappingSource.Equals(Object)
- uid: Inflatable.ClassMapper.MappingSource.Equals*
  name: Equals
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_Equals_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.Equals
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.Equals
  nameWithType: MappingSource.Equals
- uid: Inflatable.ClassMapper.MappingSource.GenerateAnalysis
  name: GenerateAnalysis
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_GenerateAnalysis
  commentId: P:Inflatable.ClassMapper.MappingSource.GenerateAnalysis
  fullName: Inflatable.ClassMapper.MappingSource.GenerateAnalysis
  nameWithType: MappingSource.GenerateAnalysis
- uid: Inflatable.ClassMapper.MappingSource.GenerateAnalysis*
  name: GenerateAnalysis
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_GenerateAnalysis_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.GenerateAnalysis
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.GenerateAnalysis
  nameWithType: MappingSource.GenerateAnalysis
- uid: Inflatable.ClassMapper.MappingSource.GenerateSchema
  name: GenerateSchema
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_GenerateSchema
  commentId: P:Inflatable.ClassMapper.MappingSource.GenerateSchema
  fullName: Inflatable.ClassMapper.MappingSource.GenerateSchema
  nameWithType: MappingSource.GenerateSchema
- uid: Inflatable.ClassMapper.MappingSource.GenerateSchema*
  name: GenerateSchema
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_GenerateSchema_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.GenerateSchema
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.GenerateSchema
  nameWithType: MappingSource.GenerateSchema
- uid: Inflatable.ClassMapper.MappingSource.GetChildMappings(System.Type)
  name: GetChildMappings(Type)
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_GetChildMappings_System_Type_
  commentId: M:Inflatable.ClassMapper.MappingSource.GetChildMappings(System.Type)
  fullName: Inflatable.ClassMapper.MappingSource.GetChildMappings(System.Type)
  nameWithType: MappingSource.GetChildMappings(Type)
- uid: Inflatable.ClassMapper.MappingSource.GetChildMappings*
  name: GetChildMappings
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_GetChildMappings_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.GetChildMappings
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.GetChildMappings
  nameWithType: MappingSource.GetChildMappings
- uid: Inflatable.ClassMapper.MappingSource.GetChildMappings``1
  name: GetChildMappings<TObject>()
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_GetChildMappings__1
  commentId: M:Inflatable.ClassMapper.MappingSource.GetChildMappings``1
  name.vb: GetChildMappings(Of TObject)()
  fullName: Inflatable.ClassMapper.MappingSource.GetChildMappings<TObject>()
  fullName.vb: Inflatable.ClassMapper.MappingSource.GetChildMappings(Of TObject)()
  nameWithType: MappingSource.GetChildMappings<TObject>()
  nameWithType.vb: MappingSource.GetChildMappings(Of TObject)()
- uid: Inflatable.ClassMapper.MappingSource.GetHashCode
  name: GetHashCode()
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_GetHashCode
  commentId: M:Inflatable.ClassMapper.MappingSource.GetHashCode
  fullName: Inflatable.ClassMapper.MappingSource.GetHashCode()
  nameWithType: MappingSource.GetHashCode()
- uid: Inflatable.ClassMapper.MappingSource.GetHashCode*
  name: GetHashCode
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_GetHashCode_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.GetHashCode
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.GetHashCode
  nameWithType: MappingSource.GetHashCode
- uid: Inflatable.ClassMapper.MappingSource.GetParentMapping(System.Type)
  name: GetParentMapping(Type)
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_GetParentMapping_System_Type_
  commentId: M:Inflatable.ClassMapper.MappingSource.GetParentMapping(System.Type)
  fullName: Inflatable.ClassMapper.MappingSource.GetParentMapping(System.Type)
  nameWithType: MappingSource.GetParentMapping(Type)
- uid: Inflatable.ClassMapper.MappingSource.GetParentMapping*
  name: GetParentMapping
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_GetParentMapping_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.GetParentMapping
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.GetParentMapping
  nameWithType: MappingSource.GetParentMapping
- uid: Inflatable.ClassMapper.MappingSource.GetParentMapping``1
  name: GetParentMapping<TObject>()
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_GetParentMapping__1
  commentId: M:Inflatable.ClassMapper.MappingSource.GetParentMapping``1
  name.vb: GetParentMapping(Of TObject)()
  fullName: Inflatable.ClassMapper.MappingSource.GetParentMapping<TObject>()
  fullName.vb: Inflatable.ClassMapper.MappingSource.GetParentMapping(Of TObject)()
  nameWithType: MappingSource.GetParentMapping<TObject>()
  nameWithType.vb: MappingSource.GetParentMapping(Of TObject)()
- uid: Inflatable.ClassMapper.MappingSource.Logger
  name: Logger
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_Logger
  commentId: P:Inflatable.ClassMapper.MappingSource.Logger
  fullName: Inflatable.ClassMapper.MappingSource.Logger
  nameWithType: MappingSource.Logger
- uid: Inflatable.ClassMapper.MappingSource.Logger*
  name: Logger
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_Logger_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.Logger
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.Logger
  nameWithType: MappingSource.Logger
- uid: Inflatable.ClassMapper.MappingSource.Mappings
  name: Mappings
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_Mappings
  commentId: P:Inflatable.ClassMapper.MappingSource.Mappings
  fullName: Inflatable.ClassMapper.MappingSource.Mappings
  nameWithType: MappingSource.Mappings
- uid: Inflatable.ClassMapper.MappingSource.Mappings*
  name: Mappings
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_Mappings_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.Mappings
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.Mappings
  nameWithType: MappingSource.Mappings
- uid: Inflatable.ClassMapper.MappingSource.ObjectPool
  name: ObjectPool
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_ObjectPool
  commentId: P:Inflatable.ClassMapper.MappingSource.ObjectPool
  fullName: Inflatable.ClassMapper.MappingSource.ObjectPool
  nameWithType: MappingSource.ObjectPool
- uid: Inflatable.ClassMapper.MappingSource.ObjectPool*
  name: ObjectPool
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_ObjectPool_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.ObjectPool
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.ObjectPool
  nameWithType: MappingSource.ObjectPool
- uid: Inflatable.ClassMapper.MappingSource.Optimize
  name: Optimize
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_Optimize
  commentId: P:Inflatable.ClassMapper.MappingSource.Optimize
  fullName: Inflatable.ClassMapper.MappingSource.Optimize
  nameWithType: MappingSource.Optimize
- uid: Inflatable.ClassMapper.MappingSource.Optimize*
  name: Optimize
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_Optimize_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.Optimize
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.Optimize
  nameWithType: MappingSource.Optimize
- uid: Inflatable.ClassMapper.MappingSource.Order
  name: Order
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_Order
  commentId: P:Inflatable.ClassMapper.MappingSource.Order
  fullName: Inflatable.ClassMapper.MappingSource.Order
  nameWithType: MappingSource.Order
- uid: Inflatable.ClassMapper.MappingSource.Order*
  name: Order
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_Order_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.Order
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.Order
  nameWithType: MappingSource.Order
- uid: Inflatable.ClassMapper.MappingSource.ParentTypes
  name: ParentTypes
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_ParentTypes
  commentId: P:Inflatable.ClassMapper.MappingSource.ParentTypes
  fullName: Inflatable.ClassMapper.MappingSource.ParentTypes
  nameWithType: MappingSource.ParentTypes
- uid: Inflatable.ClassMapper.MappingSource.ParentTypes*
  name: ParentTypes
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_ParentTypes_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.ParentTypes
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.ParentTypes
  nameWithType: MappingSource.ParentTypes
- uid: Inflatable.ClassMapper.MappingSource.QueryProvider
  name: QueryProvider
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_QueryProvider
  commentId: P:Inflatable.ClassMapper.MappingSource.QueryProvider
  fullName: Inflatable.ClassMapper.MappingSource.QueryProvider
  nameWithType: MappingSource.QueryProvider
- uid: Inflatable.ClassMapper.MappingSource.QueryProvider*
  name: QueryProvider
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_QueryProvider_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.QueryProvider
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.QueryProvider
  nameWithType: MappingSource.QueryProvider
- uid: Inflatable.ClassMapper.MappingSource.Source
  name: Source
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_Source
  commentId: P:Inflatable.ClassMapper.MappingSource.Source
  fullName: Inflatable.ClassMapper.MappingSource.Source
  nameWithType: MappingSource.Source
- uid: Inflatable.ClassMapper.MappingSource.Source*
  name: Source
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_Source_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.Source
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.Source
  nameWithType: MappingSource.Source
- uid: Inflatable.ClassMapper.MappingSource.ToString
  name: ToString()
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_ToString
  commentId: M:Inflatable.ClassMapper.MappingSource.ToString
  fullName: Inflatable.ClassMapper.MappingSource.ToString()
  nameWithType: MappingSource.ToString()
- uid: Inflatable.ClassMapper.MappingSource.ToString*
  name: ToString
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_ToString_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.ToString
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.ToString
  nameWithType: MappingSource.ToString
- uid: Inflatable.ClassMapper.MappingSource.TypeGraphs
  name: TypeGraphs
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_TypeGraphs
  commentId: P:Inflatable.ClassMapper.MappingSource.TypeGraphs
  fullName: Inflatable.ClassMapper.MappingSource.TypeGraphs
  nameWithType: MappingSource.TypeGraphs
- uid: Inflatable.ClassMapper.MappingSource.TypeGraphs*
  name: TypeGraphs
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_TypeGraphs_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.TypeGraphs
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.TypeGraphs
  nameWithType: MappingSource.TypeGraphs
- uid: Inflatable.ClassMapper.MappingSource.UpdateSchema
  name: UpdateSchema
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_UpdateSchema
  commentId: P:Inflatable.ClassMapper.MappingSource.UpdateSchema
  fullName: Inflatable.ClassMapper.MappingSource.UpdateSchema
  nameWithType: MappingSource.UpdateSchema
- uid: Inflatable.ClassMapper.MappingSource.UpdateSchema*
  name: UpdateSchema
  href: api/Inflatable.ClassMapper.MappingSource.html#Inflatable_ClassMapper_MappingSource_UpdateSchema_
  commentId: Overload:Inflatable.ClassMapper.MappingSource.UpdateSchema
  isSpec: "True"
  fullName: Inflatable.ClassMapper.MappingSource.UpdateSchema
  nameWithType: MappingSource.UpdateSchema
- uid: Inflatable.ClassMapper.TypeGraph
  name: Inflatable.ClassMapper.TypeGraph
  href: api/Inflatable.ClassMapper.TypeGraph.html
  commentId: N:Inflatable.ClassMapper.TypeGraph
  fullName: Inflatable.ClassMapper.TypeGraph
  nameWithType: Inflatable.ClassMapper.TypeGraph
- uid: Inflatable.ClassMapper.TypeGraph.DiscoverConcreteTypes
  name: DiscoverConcreteTypes
  href: api/Inflatable.ClassMapper.TypeGraph.DiscoverConcreteTypes.html
  commentId: T:Inflatable.ClassMapper.TypeGraph.DiscoverConcreteTypes
  fullName: Inflatable.ClassMapper.TypeGraph.DiscoverConcreteTypes
  nameWithType: DiscoverConcreteTypes
- uid: Inflatable.ClassMapper.TypeGraph.DiscoverConcreteTypes.FindConcreteTypes(System.Collections.Generic.IDictionary{System.Type,Inflatable.Utils.Tree{System.Type}})
  name: FindConcreteTypes(IDictionary<Type, Tree<Type>?>)
  href: api/Inflatable.ClassMapper.TypeGraph.DiscoverConcreteTypes.html#Inflatable_ClassMapper_TypeGraph_DiscoverConcreteTypes_FindConcreteTypes_System_Collections_Generic_IDictionary_System_Type_Inflatable_Utils_Tree_System_Type___
  commentId: M:Inflatable.ClassMapper.TypeGraph.DiscoverConcreteTypes.FindConcreteTypes(System.Collections.Generic.IDictionary{System.Type,Inflatable.Utils.Tree{System.Type}})
  name.vb: FindConcreteTypes(IDictionary(Of Type, Tree(Of Type)))
  fullName: Inflatable.ClassMapper.TypeGraph.DiscoverConcreteTypes.FindConcreteTypes(System.Collections.Generic.IDictionary<System.Type, Inflatable.Utils.Tree<System.Type>?>)
  fullName.vb: Inflatable.ClassMapper.TypeGraph.DiscoverConcreteTypes.FindConcreteTypes(System.Collections.Generic.IDictionary(Of System.Type, Inflatable.Utils.Tree(Of System.Type)))
  nameWithType: DiscoverConcreteTypes.FindConcreteTypes(IDictionary<Type, Tree<Type>?>)
  nameWithType.vb: DiscoverConcreteTypes.FindConcreteTypes(IDictionary(Of Type, Tree(Of Type)))
- uid: Inflatable.ClassMapper.TypeGraph.DiscoverConcreteTypes.FindConcreteTypes*
  name: FindConcreteTypes
  href: api/Inflatable.ClassMapper.TypeGraph.DiscoverConcreteTypes.html#Inflatable_ClassMapper_TypeGraph_DiscoverConcreteTypes_FindConcreteTypes_
  commentId: Overload:Inflatable.ClassMapper.TypeGraph.DiscoverConcreteTypes.FindConcreteTypes
  isSpec: "True"
  fullName: Inflatable.ClassMapper.TypeGraph.DiscoverConcreteTypes.FindConcreteTypes
  nameWithType: DiscoverConcreteTypes.FindConcreteTypes
- uid: Inflatable.ClassMapper.TypeGraph.Generator
  name: Generator
  href: api/Inflatable.ClassMapper.TypeGraph.Generator.html
  commentId: T:Inflatable.ClassMapper.TypeGraph.Generator
  fullName: Inflatable.ClassMapper.TypeGraph.Generator
  nameWithType: Generator
- uid: Inflatable.ClassMapper.TypeGraph.Generator.Generate(System.Type,System.Collections.Generic.Dictionary{System.Type,Inflatable.Interfaces.IMapping})
  name: Generate(Type, Dictionary<Type, IMapping>)
  href: api/Inflatable.ClassMapper.TypeGraph.Generator.html#Inflatable_ClassMapper_TypeGraph_Generator_Generate_System_Type_System_Collections_Generic_Dictionary_System_Type_Inflatable_Interfaces_IMapping__
  commentId: M:Inflatable.ClassMapper.TypeGraph.Generator.Generate(System.Type,System.Collections.Generic.Dictionary{System.Type,Inflatable.Interfaces.IMapping})
  name.vb: Generate(Type, Dictionary(Of Type, IMapping))
  fullName: Inflatable.ClassMapper.TypeGraph.Generator.Generate(System.Type, System.Collections.Generic.Dictionary<System.Type, Inflatable.Interfaces.IMapping>)
  fullName.vb: Inflatable.ClassMapper.TypeGraph.Generator.Generate(System.Type, System.Collections.Generic.Dictionary(Of System.Type, Inflatable.Interfaces.IMapping))
  nameWithType: Generator.Generate(Type, Dictionary<Type, IMapping>)
  nameWithType.vb: Generator.Generate(Type, Dictionary(Of Type, IMapping))
- uid: Inflatable.ClassMapper.TypeGraph.Generator.Generate*
  name: Generate
  href: api/Inflatable.ClassMapper.TypeGraph.Generator.html#Inflatable_ClassMapper_TypeGraph_Generator_Generate_
  commentId: Overload:Inflatable.ClassMapper.TypeGraph.Generator.Generate
  isSpec: "True"
  fullName: Inflatable.ClassMapper.TypeGraph.Generator.Generate
  nameWithType: Generator.Generate
- uid: Inflatable.ClassMapper.TypeGraph.MergeMapping
  name: MergeMapping
  href: api/Inflatable.ClassMapper.TypeGraph.MergeMapping.html
  commentId: T:Inflatable.ClassMapper.TypeGraph.MergeMapping
  fullName: Inflatable.ClassMapper.TypeGraph.MergeMapping
  nameWithType: MergeMapping
- uid: Inflatable.ClassMapper.TypeGraph.MergeMapping.Merge(Inflatable.Utils.Tree{System.Type},System.Collections.Generic.Dictionary{System.Type,Inflatable.Interfaces.IMapping},Microsoft.Extensions.Logging.ILogger)
  name: Merge(Tree<Type>?, Dictionary<Type, IMapping>, ILogger)
  href: api/Inflatable.ClassMapper.TypeGraph.MergeMapping.html#Inflatable_ClassMapper_TypeGraph_MergeMapping_Merge_Inflatable_Utils_Tree_System_Type__System_Collections_Generic_Dictionary_System_Type_Inflatable_Interfaces_IMapping__Microsoft_Extensions_Logging_ILogger_
  commentId: M:Inflatable.ClassMapper.TypeGraph.MergeMapping.Merge(Inflatable.Utils.Tree{System.Type},System.Collections.Generic.Dictionary{System.Type,Inflatable.Interfaces.IMapping},Microsoft.Extensions.Logging.ILogger)
  name.vb: Merge(Tree(Of Type), Dictionary(Of Type, IMapping), ILogger)
  fullName: Inflatable.ClassMapper.TypeGraph.MergeMapping.Merge(Inflatable.Utils.Tree<System.Type>?, System.Collections.Generic.Dictionary<System.Type, Inflatable.Interfaces.IMapping>, Microsoft.Extensions.Logging.ILogger)
  fullName.vb: Inflatable.ClassMapper.TypeGraph.MergeMapping.Merge(Inflatable.Utils.Tree(Of System.Type), System.Collections.Generic.Dictionary(Of System.Type, Inflatable.Interfaces.IMapping), Microsoft.Extensions.Logging.ILogger)
  nameWithType: MergeMapping.Merge(Tree<Type>?, Dictionary<Type, IMapping>, ILogger)
  nameWithType.vb: MergeMapping.Merge(Tree(Of Type), Dictionary(Of Type, IMapping), ILogger)
- uid: Inflatable.ClassMapper.TypeGraph.MergeMapping.Merge*
  name: Merge
  href: api/Inflatable.ClassMapper.TypeGraph.MergeMapping.html#Inflatable_ClassMapper_TypeGraph_MergeMapping_Merge_
  commentId: Overload:Inflatable.ClassMapper.TypeGraph.MergeMapping.Merge
  isSpec: "True"
  fullName: Inflatable.ClassMapper.TypeGraph.MergeMapping.Merge
  nameWithType: MergeMapping.Merge
- uid: Inflatable.ClassMapper.TypeGraph.ReduceMapping
  name: ReduceMapping
  href: api/Inflatable.ClassMapper.TypeGraph.ReduceMapping.html
  commentId: T:Inflatable.ClassMapper.TypeGraph.ReduceMapping
  fullName: Inflatable.ClassMapper.TypeGraph.ReduceMapping
  nameWithType: ReduceMapping
- uid: Inflatable.ClassMapper.TypeGraph.ReduceMapping.Reduce(Inflatable.Utils.Tree{System.Type},System.Collections.Generic.Dictionary{System.Type,Inflatable.Interfaces.IMapping},Microsoft.Extensions.Logging.ILogger)
  name: Reduce(Tree<Type>?, Dictionary<Type, IMapping>, ILogger)
  href: api/Inflatable.ClassMapper.TypeGraph.ReduceMapping.html#Inflatable_ClassMapper_TypeGraph_ReduceMapping_Reduce_Inflatable_Utils_Tree_System_Type__System_Collections_Generic_Dictionary_System_Type_Inflatable_Interfaces_IMapping__Microsoft_Extensions_Logging_ILogger_
  commentId: M:Inflatable.ClassMapper.TypeGraph.ReduceMapping.Reduce(Inflatable.Utils.Tree{System.Type},System.Collections.Generic.Dictionary{System.Type,Inflatable.Interfaces.IMapping},Microsoft.Extensions.Logging.ILogger)
  name.vb: Reduce(Tree(Of Type), Dictionary(Of Type, IMapping), ILogger)
  fullName: Inflatable.ClassMapper.TypeGraph.ReduceMapping.Reduce(Inflatable.Utils.Tree<System.Type>?, System.Collections.Generic.Dictionary<System.Type, Inflatable.Interfaces.IMapping>, Microsoft.Extensions.Logging.ILogger)
  fullName.vb: Inflatable.ClassMapper.TypeGraph.ReduceMapping.Reduce(Inflatable.Utils.Tree(Of System.Type), System.Collections.Generic.Dictionary(Of System.Type, Inflatable.Interfaces.IMapping), Microsoft.Extensions.Logging.ILogger)
  nameWithType: ReduceMapping.Reduce(Tree<Type>?, Dictionary<Type, IMapping>, ILogger)
  nameWithType.vb: ReduceMapping.Reduce(Tree(Of Type), Dictionary(Of Type, IMapping), ILogger)
- uid: Inflatable.ClassMapper.TypeGraph.ReduceMapping.Reduce*
  name: Reduce
  href: api/Inflatable.ClassMapper.TypeGraph.ReduceMapping.html#Inflatable_ClassMapper_TypeGraph_ReduceMapping_Reduce_
  commentId: Overload:Inflatable.ClassMapper.TypeGraph.ReduceMapping.Reduce
  isSpec: "True"
  fullName: Inflatable.ClassMapper.TypeGraph.ReduceMapping.Reduce
  nameWithType: ReduceMapping.Reduce
- uid: Inflatable.DataSource
  name: Inflatable.DataSource
  href: api/Inflatable.DataSource.html
  commentId: N:Inflatable.DataSource
  fullName: Inflatable.DataSource
  nameWithType: Inflatable.DataSource
- uid: Inflatable.DataSource.Options
  name: Options
  href: api/Inflatable.DataSource.Options.html
  commentId: T:Inflatable.DataSource.Options
  fullName: Inflatable.DataSource.Options
  nameWithType: Options
- uid: Inflatable.DataSource.Options.Access
  name: Access
  href: api/Inflatable.DataSource.Options.html#Inflatable_DataSource_Options_Access
  commentId: P:Inflatable.DataSource.Options.Access
  fullName: Inflatable.DataSource.Options.Access
  nameWithType: Options.Access
- uid: Inflatable.DataSource.Options.Access*
  name: Access
  href: api/Inflatable.DataSource.Options.html#Inflatable_DataSource_Options_Access_
  commentId: Overload:Inflatable.DataSource.Options.Access
  isSpec: "True"
  fullName: Inflatable.DataSource.Options.Access
  nameWithType: Options.Access
- uid: Inflatable.DataSource.Options.Analysis
  name: Analysis
  href: api/Inflatable.DataSource.Options.html#Inflatable_DataSource_Options_Analysis
  commentId: P:Inflatable.DataSource.Options.Analysis
  fullName: Inflatable.DataSource.Options.Analysis
  nameWithType: Options.Analysis
- uid: Inflatable.DataSource.Options.Analysis*
  name: Analysis
  href: api/Inflatable.DataSource.Options.html#Inflatable_DataSource_Options_Analysis_
  commentId: Overload:Inflatable.DataSource.Options.Analysis
  isSpec: "True"
  fullName: Inflatable.DataSource.Options.Analysis
  nameWithType: Options.Analysis
- uid: Inflatable.DataSource.Options.Audit
  name: Audit
  href: api/Inflatable.DataSource.Options.html#Inflatable_DataSource_Options_Audit
  commentId: P:Inflatable.DataSource.Options.Audit
  fullName: Inflatable.DataSource.Options.Audit
  nameWithType: Options.Audit
- uid: Inflatable.DataSource.Options.Audit*
  name: Audit
  href: api/Inflatable.DataSource.Options.html#Inflatable_DataSource_Options_Audit_
  commentId: Overload:Inflatable.DataSource.Options.Audit
  isSpec: "True"
  fullName: Inflatable.DataSource.Options.Audit
  nameWithType: Options.Audit
- uid: Inflatable.DataSource.Options.Optimize
  name: Optimize
  href: api/Inflatable.DataSource.Options.html#Inflatable_DataSource_Options_Optimize
  commentId: P:Inflatable.DataSource.Options.Optimize
  fullName: Inflatable.DataSource.Options.Optimize
  nameWithType: Options.Optimize
- uid: Inflatable.DataSource.Options.Optimize*
  name: Optimize
  href: api/Inflatable.DataSource.Options.html#Inflatable_DataSource_Options_Optimize_
  commentId: Overload:Inflatable.DataSource.Options.Optimize
  isSpec: "True"
  fullName: Inflatable.DataSource.Options.Optimize
  nameWithType: Options.Optimize
- uid: Inflatable.DataSource.Options.SchemaUpdate
  name: SchemaUpdate
  href: api/Inflatable.DataSource.Options.html#Inflatable_DataSource_Options_SchemaUpdate
  commentId: P:Inflatable.DataSource.Options.SchemaUpdate
  fullName: Inflatable.DataSource.Options.SchemaUpdate
  nameWithType: Options.SchemaUpdate
- uid: Inflatable.DataSource.Options.SchemaUpdate*
  name: SchemaUpdate
  href: api/Inflatable.DataSource.Options.html#Inflatable_DataSource_Options_SchemaUpdate_
  commentId: Overload:Inflatable.DataSource.Options.SchemaUpdate
  isSpec: "True"
  fullName: Inflatable.DataSource.Options.SchemaUpdate
  nameWithType: Options.SchemaUpdate
- uid: Inflatable.DbContext
  name: DbContext
  href: api/Inflatable.DbContext.html
  commentId: T:Inflatable.DbContext
  fullName: Inflatable.DbContext
  nameWithType: DbContext
- uid: Inflatable.DbContext.#ctor
  name: DbContext()
  href: api/Inflatable.DbContext.html#Inflatable_DbContext__ctor
  commentId: M:Inflatable.DbContext.#ctor
  name.vb: New()
  fullName: Inflatable.DbContext.DbContext()
  fullName.vb: Inflatable.DbContext.New()
  nameWithType: DbContext.DbContext()
  nameWithType.vb: DbContext.New()
- uid: Inflatable.DbContext.#ctor(Inflatable.Sessions.ISession)
  name: DbContext(ISession?)
  href: api/Inflatable.DbContext.html#Inflatable_DbContext__ctor_Inflatable_Sessions_ISession_
  commentId: M:Inflatable.DbContext.#ctor(Inflatable.Sessions.ISession)
  name.vb: New(ISession)
  fullName: Inflatable.DbContext.DbContext(Inflatable.Sessions.ISession?)
  fullName.vb: Inflatable.DbContext.New(Inflatable.Sessions.ISession)
  nameWithType: DbContext.DbContext(ISession?)
  nameWithType.vb: DbContext.New(ISession)
- uid: Inflatable.DbContext.#ctor*
  name: DbContext
  href: api/Inflatable.DbContext.html#Inflatable_DbContext__ctor_
  commentId: Overload:Inflatable.DbContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.DbContext.DbContext
  fullName.vb: Inflatable.DbContext.New
  nameWithType: DbContext.DbContext
  nameWithType.vb: DbContext.New
- uid: Inflatable.DbContext.Delete*
  name: Delete
  href: api/Inflatable.DbContext.html#Inflatable_DbContext_Delete_
  commentId: Overload:Inflatable.DbContext.Delete
  isSpec: "True"
  fullName: Inflatable.DbContext.Delete
  nameWithType: DbContext.Delete
- uid: Inflatable.DbContext.Delete``1(``0[])
  name: Delete<TObject>(params TObject[])
  href: api/Inflatable.DbContext.html#Inflatable_DbContext_Delete__1___0___
  commentId: M:Inflatable.DbContext.Delete``1(``0[])
  name.vb: Delete(Of TObject)(ParamArray TObject())
  fullName: Inflatable.DbContext.Delete<TObject>(params TObject[])
  fullName.vb: Inflatable.DbContext.Delete(Of TObject)(ParamArray TObject())
  nameWithType: DbContext.Delete<TObject>(params TObject[])
  nameWithType.vb: DbContext.Delete(Of TObject)(ParamArray TObject())
- uid: Inflatable.DbContext.ExecuteAsync
  name: ExecuteAsync()
  href: api/Inflatable.DbContext.html#Inflatable_DbContext_ExecuteAsync
  commentId: M:Inflatable.DbContext.ExecuteAsync
  fullName: Inflatable.DbContext.ExecuteAsync()
  nameWithType: DbContext.ExecuteAsync()
- uid: Inflatable.DbContext.ExecuteAsync(System.String,System.Data.CommandType,System.String,System.Object[])
  name: ExecuteAsync(string, CommandType, string, params object[])
  href: api/Inflatable.DbContext.html#Inflatable_DbContext_ExecuteAsync_System_String_System_Data_CommandType_System_String_System_Object___
  commentId: M:Inflatable.DbContext.ExecuteAsync(System.String,System.Data.CommandType,System.String,System.Object[])
  name.vb: ExecuteAsync(String, CommandType, String, ParamArray Object())
  fullName: Inflatable.DbContext.ExecuteAsync(string, System.Data.CommandType, string, params object[])
  fullName.vb: Inflatable.DbContext.ExecuteAsync(String, System.Data.CommandType, String, ParamArray Object())
  nameWithType: DbContext.ExecuteAsync(string, CommandType, string, params object[])
  nameWithType.vb: DbContext.ExecuteAsync(String, CommandType, String, ParamArray Object())
- uid: Inflatable.DbContext.ExecuteAsync*
  name: ExecuteAsync
  href: api/Inflatable.DbContext.html#Inflatable_DbContext_ExecuteAsync_
  commentId: Overload:Inflatable.DbContext.ExecuteAsync
  isSpec: "True"
  fullName: Inflatable.DbContext.ExecuteAsync
  nameWithType: DbContext.ExecuteAsync
- uid: Inflatable.DbContext.Save*
  name: Save
  href: api/Inflatable.DbContext.html#Inflatable_DbContext_Save_
  commentId: Overload:Inflatable.DbContext.Save
  isSpec: "True"
  fullName: Inflatable.DbContext.Save
  nameWithType: DbContext.Save
- uid: Inflatable.DbContext.Save``1(``0[])
  name: Save<TObject>(params TObject[])
  href: api/Inflatable.DbContext.html#Inflatable_DbContext_Save__1___0___
  commentId: M:Inflatable.DbContext.Save``1(``0[])
  name.vb: Save(Of TObject)(ParamArray TObject())
  fullName: Inflatable.DbContext.Save<TObject>(params TObject[])
  fullName.vb: Inflatable.DbContext.Save(Of TObject)(ParamArray TObject())
  nameWithType: DbContext.Save<TObject>(params TObject[])
  nameWithType.vb: DbContext.Save(Of TObject)(ParamArray TObject())
- uid: Inflatable.DbContext`1
  name: DbContext<TObject>
  href: api/Inflatable.DbContext-1.html
  commentId: T:Inflatable.DbContext`1
  name.vb: DbContext(Of TObject)
  fullName: Inflatable.DbContext<TObject>
  fullName.vb: Inflatable.DbContext(Of TObject)
  nameWithType: DbContext<TObject>
  nameWithType.vb: DbContext(Of TObject)
- uid: Inflatable.DbContext`1.CreateQuery
  name: CreateQuery()
  href: api/Inflatable.DbContext-1.html#Inflatable_DbContext_1_CreateQuery
  commentId: M:Inflatable.DbContext`1.CreateQuery
  fullName: Inflatable.DbContext<TObject>.CreateQuery()
  fullName.vb: Inflatable.DbContext(Of TObject).CreateQuery()
  nameWithType: DbContext<TObject>.CreateQuery()
  nameWithType.vb: DbContext(Of TObject).CreateQuery()
- uid: Inflatable.DbContext`1.CreateQuery*
  name: CreateQuery
  href: api/Inflatable.DbContext-1.html#Inflatable_DbContext_1_CreateQuery_
  commentId: Overload:Inflatable.DbContext`1.CreateQuery
  isSpec: "True"
  fullName: Inflatable.DbContext<TObject>.CreateQuery
  fullName.vb: Inflatable.DbContext(Of TObject).CreateQuery
  nameWithType: DbContext<TObject>.CreateQuery
  nameWithType.vb: DbContext(Of TObject).CreateQuery
- uid: Inflatable.DbContext`1.Execute(System.Linq.Expressions.Expression)
  name: Execute(Expression)
  href: api/Inflatable.DbContext-1.html#Inflatable_DbContext_1_Execute_System_Linq_Expressions_Expression_
  commentId: M:Inflatable.DbContext`1.Execute(System.Linq.Expressions.Expression)
  fullName: Inflatable.DbContext<TObject>.Execute(System.Linq.Expressions.Expression)
  fullName.vb: Inflatable.DbContext(Of TObject).Execute(System.Linq.Expressions.Expression)
  nameWithType: DbContext<TObject>.Execute(Expression)
  nameWithType.vb: DbContext(Of TObject).Execute(Expression)
- uid: Inflatable.DbContext`1.Execute*
  name: Execute
  href: api/Inflatable.DbContext-1.html#Inflatable_DbContext_1_Execute_
  commentId: Overload:Inflatable.DbContext`1.Execute
  isSpec: "True"
  fullName: Inflatable.DbContext<TObject>.Execute
  fullName.vb: Inflatable.DbContext(Of TObject).Execute
  nameWithType: DbContext<TObject>.Execute
  nameWithType.vb: DbContext(Of TObject).Execute
- uid: Inflatable.DbContext`1.ExecuteAsync(System.String,System.Data.CommandType,System.String,System.Object[])
  name: ExecuteAsync(string, CommandType, string, params object[])
  href: api/Inflatable.DbContext-1.html#Inflatable_DbContext_1_ExecuteAsync_System_String_System_Data_CommandType_System_String_System_Object___
  commentId: M:Inflatable.DbContext`1.ExecuteAsync(System.String,System.Data.CommandType,System.String,System.Object[])
  name.vb: ExecuteAsync(String, CommandType, String, ParamArray Object())
  fullName: Inflatable.DbContext<TObject>.ExecuteAsync(string, System.Data.CommandType, string, params object[])
  fullName.vb: Inflatable.DbContext(Of TObject).ExecuteAsync(String, System.Data.CommandType, String, ParamArray Object())
  nameWithType: DbContext<TObject>.ExecuteAsync(string, CommandType, string, params object[])
  nameWithType.vb: DbContext(Of TObject).ExecuteAsync(String, CommandType, String, ParamArray Object())
- uid: Inflatable.DbContext`1.ExecuteAsync*
  name: ExecuteAsync
  href: api/Inflatable.DbContext-1.html#Inflatable_DbContext_1_ExecuteAsync_
  commentId: Overload:Inflatable.DbContext`1.ExecuteAsync
  isSpec: "True"
  fullName: Inflatable.DbContext<TObject>.ExecuteAsync
  fullName.vb: Inflatable.DbContext(Of TObject).ExecuteAsync
  nameWithType: DbContext<TObject>.ExecuteAsync
  nameWithType.vb: DbContext(Of TObject).ExecuteAsync
- uid: Inflatable.DbContext`1.ExecuteScalarAsync(System.String,System.Data.CommandType,System.String,System.Object[])
  name: ExecuteScalarAsync(string, CommandType, string, params object[])
  href: api/Inflatable.DbContext-1.html#Inflatable_DbContext_1_ExecuteScalarAsync_System_String_System_Data_CommandType_System_String_System_Object___
  commentId: M:Inflatable.DbContext`1.ExecuteScalarAsync(System.String,System.Data.CommandType,System.String,System.Object[])
  name.vb: ExecuteScalarAsync(String, CommandType, String, ParamArray Object())
  fullName: Inflatable.DbContext<TObject>.ExecuteScalarAsync(string, System.Data.CommandType, string, params object[])
  fullName.vb: Inflatable.DbContext(Of TObject).ExecuteScalarAsync(String, System.Data.CommandType, String, ParamArray Object())
  nameWithType: DbContext<TObject>.ExecuteScalarAsync(string, CommandType, string, params object[])
  nameWithType.vb: DbContext(Of TObject).ExecuteScalarAsync(String, CommandType, String, ParamArray Object())
- uid: Inflatable.DbContext`1.ExecuteScalarAsync*
  name: ExecuteScalarAsync
  href: api/Inflatable.DbContext-1.html#Inflatable_DbContext_1_ExecuteScalarAsync_
  commentId: Overload:Inflatable.DbContext`1.ExecuteScalarAsync
  isSpec: "True"
  fullName: Inflatable.DbContext<TObject>.ExecuteScalarAsync
  fullName.vb: Inflatable.DbContext(Of TObject).ExecuteScalarAsync
  nameWithType: DbContext<TObject>.ExecuteScalarAsync
  nameWithType.vb: DbContext(Of TObject).ExecuteScalarAsync
- uid: Inflatable.DbContext`1.GetQueryText(System.Linq.Expressions.Expression)
  name: GetQueryText(Expression)
  href: api/Inflatable.DbContext-1.html#Inflatable_DbContext_1_GetQueryText_System_Linq_Expressions_Expression_
  commentId: M:Inflatable.DbContext`1.GetQueryText(System.Linq.Expressions.Expression)
  fullName: Inflatable.DbContext<TObject>.GetQueryText(System.Linq.Expressions.Expression)
  fullName.vb: Inflatable.DbContext(Of TObject).GetQueryText(System.Linq.Expressions.Expression)
  nameWithType: DbContext<TObject>.GetQueryText(Expression)
  nameWithType.vb: DbContext(Of TObject).GetQueryText(Expression)
- uid: Inflatable.DbContext`1.GetQueryText*
  name: GetQueryText
  href: api/Inflatable.DbContext-1.html#Inflatable_DbContext_1_GetQueryText_
  commentId: Overload:Inflatable.DbContext`1.GetQueryText
  isSpec: "True"
  fullName: Inflatable.DbContext<TObject>.GetQueryText
  fullName.vb: Inflatable.DbContext(Of TObject).GetQueryText
  nameWithType: DbContext<TObject>.GetQueryText
  nameWithType.vb: DbContext(Of TObject).GetQueryText
- uid: Inflatable.Enums
  name: Inflatable.Enums
  href: api/Inflatable.Enums.html
  commentId: N:Inflatable.Enums
  fullName: Inflatable.Enums
  nameWithType: Inflatable.Enums
- uid: Inflatable.Enums.SchemaAnalysis
  name: SchemaAnalysis
  href: api/Inflatable.Enums.SchemaAnalysis.html
  commentId: T:Inflatable.Enums.SchemaAnalysis
  fullName: Inflatable.Enums.SchemaAnalysis
  nameWithType: SchemaAnalysis
- uid: Inflatable.Enums.SchemaAnalysis.ApplyAnalysis
  name: ApplyAnalysis
  href: api/Inflatable.Enums.SchemaAnalysis.html#Inflatable_Enums_SchemaAnalysis_ApplyAnalysis
  commentId: F:Inflatable.Enums.SchemaAnalysis.ApplyAnalysis
  fullName: Inflatable.Enums.SchemaAnalysis.ApplyAnalysis
  nameWithType: SchemaAnalysis.ApplyAnalysis
- uid: Inflatable.Enums.SchemaAnalysis.GenerateAnalysis
  name: GenerateAnalysis
  href: api/Inflatable.Enums.SchemaAnalysis.html#Inflatable_Enums_SchemaAnalysis_GenerateAnalysis
  commentId: F:Inflatable.Enums.SchemaAnalysis.GenerateAnalysis
  fullName: Inflatable.Enums.SchemaAnalysis.GenerateAnalysis
  nameWithType: SchemaAnalysis.GenerateAnalysis
- uid: Inflatable.Enums.SchemaAnalysis.NoAnalysis
  name: NoAnalysis
  href: api/Inflatable.Enums.SchemaAnalysis.html#Inflatable_Enums_SchemaAnalysis_NoAnalysis
  commentId: F:Inflatable.Enums.SchemaAnalysis.NoAnalysis
  fullName: Inflatable.Enums.SchemaAnalysis.NoAnalysis
  nameWithType: SchemaAnalysis.NoAnalysis
- uid: Inflatable.Enums.SchemaGeneration
  name: SchemaGeneration
  href: api/Inflatable.Enums.SchemaGeneration.html
  commentId: T:Inflatable.Enums.SchemaGeneration
  fullName: Inflatable.Enums.SchemaGeneration
  nameWithType: SchemaGeneration
- uid: Inflatable.Enums.SchemaGeneration.GenerateSchemaChanges
  name: GenerateSchemaChanges
  href: api/Inflatable.Enums.SchemaGeneration.html#Inflatable_Enums_SchemaGeneration_GenerateSchemaChanges
  commentId: F:Inflatable.Enums.SchemaGeneration.GenerateSchemaChanges
  fullName: Inflatable.Enums.SchemaGeneration.GenerateSchemaChanges
  nameWithType: SchemaGeneration.GenerateSchemaChanges
- uid: Inflatable.Enums.SchemaGeneration.NoGeneration
  name: NoGeneration
  href: api/Inflatable.Enums.SchemaGeneration.html#Inflatable_Enums_SchemaGeneration_NoGeneration
  commentId: F:Inflatable.Enums.SchemaGeneration.NoGeneration
  fullName: Inflatable.Enums.SchemaGeneration.NoGeneration
  nameWithType: SchemaGeneration.NoGeneration
- uid: Inflatable.Enums.SchemaGeneration.UpdateSchema
  name: UpdateSchema
  href: api/Inflatable.Enums.SchemaGeneration.html#Inflatable_Enums_SchemaGeneration_UpdateSchema
  commentId: F:Inflatable.Enums.SchemaGeneration.UpdateSchema
  fullName: Inflatable.Enums.SchemaGeneration.UpdateSchema
  nameWithType: SchemaGeneration.UpdateSchema
- uid: Inflatable.Enums.SourceAccess
  name: SourceAccess
  href: api/Inflatable.Enums.SourceAccess.html
  commentId: T:Inflatable.Enums.SourceAccess
  fullName: Inflatable.Enums.SourceAccess
  nameWithType: SourceAccess
- uid: Inflatable.Enums.SourceAccess.None
  name: None
  href: api/Inflatable.Enums.SourceAccess.html#Inflatable_Enums_SourceAccess_None
  commentId: F:Inflatable.Enums.SourceAccess.None
  fullName: Inflatable.Enums.SourceAccess.None
  nameWithType: SourceAccess.None
- uid: Inflatable.Enums.SourceAccess.Read
  name: Read
  href: api/Inflatable.Enums.SourceAccess.html#Inflatable_Enums_SourceAccess_Read
  commentId: F:Inflatable.Enums.SourceAccess.Read
  fullName: Inflatable.Enums.SourceAccess.Read
  nameWithType: SourceAccess.Read
- uid: Inflatable.Enums.SourceAccess.Write
  name: Write
  href: api/Inflatable.Enums.SourceAccess.html#Inflatable_Enums_SourceAccess_Write
  commentId: F:Inflatable.Enums.SourceAccess.Write
  fullName: Inflatable.Enums.SourceAccess.Write
  nameWithType: SourceAccess.Write
- uid: Inflatable.Interfaces
  name: Inflatable.Interfaces
  href: api/Inflatable.Interfaces.html
  commentId: N:Inflatable.Interfaces
  fullName: Inflatable.Interfaces
  nameWithType: Inflatable.Interfaces
- uid: Inflatable.Interfaces.IDatabase
  name: IDatabase
  href: api/Inflatable.Interfaces.IDatabase.html
  commentId: T:Inflatable.Interfaces.IDatabase
  fullName: Inflatable.Interfaces.IDatabase
  nameWithType: IDatabase
- uid: Inflatable.Interfaces.IDatabase.Name
  name: Name
  href: api/Inflatable.Interfaces.IDatabase.html#Inflatable_Interfaces_IDatabase_Name
  commentId: P:Inflatable.Interfaces.IDatabase.Name
  fullName: Inflatable.Interfaces.IDatabase.Name
  nameWithType: IDatabase.Name
- uid: Inflatable.Interfaces.IDatabase.Name*
  name: Name
  href: api/Inflatable.Interfaces.IDatabase.html#Inflatable_Interfaces_IDatabase_Name_
  commentId: Overload:Inflatable.Interfaces.IDatabase.Name
  isSpec: "True"
  fullName: Inflatable.Interfaces.IDatabase.Name
  nameWithType: IDatabase.Name
- uid: Inflatable.Interfaces.IDatabase.Order
  name: Order
  href: api/Inflatable.Interfaces.IDatabase.html#Inflatable_Interfaces_IDatabase_Order
  commentId: P:Inflatable.Interfaces.IDatabase.Order
  fullName: Inflatable.Interfaces.IDatabase.Order
  nameWithType: IDatabase.Order
- uid: Inflatable.Interfaces.IDatabase.Order*
  name: Order
  href: api/Inflatable.Interfaces.IDatabase.html#Inflatable_Interfaces_IDatabase_Order_
  commentId: Overload:Inflatable.Interfaces.IDatabase.Order
  isSpec: "True"
  fullName: Inflatable.Interfaces.IDatabase.Order
  nameWithType: IDatabase.Order
- uid: Inflatable.Interfaces.IDatabase.Provider
  name: Provider
  href: api/Inflatable.Interfaces.IDatabase.html#Inflatable_Interfaces_IDatabase_Provider
  commentId: P:Inflatable.Interfaces.IDatabase.Provider
  fullName: Inflatable.Interfaces.IDatabase.Provider
  nameWithType: IDatabase.Provider
- uid: Inflatable.Interfaces.IDatabase.Provider*
  name: Provider
  href: api/Inflatable.Interfaces.IDatabase.html#Inflatable_Interfaces_IDatabase_Provider_
  commentId: Overload:Inflatable.Interfaces.IDatabase.Provider
  isSpec: "True"
  fullName: Inflatable.Interfaces.IDatabase.Provider
  nameWithType: IDatabase.Provider
- uid: Inflatable.Interfaces.IDatabase.SourceOptions
  name: SourceOptions
  href: api/Inflatable.Interfaces.IDatabase.html#Inflatable_Interfaces_IDatabase_SourceOptions
  commentId: P:Inflatable.Interfaces.IDatabase.SourceOptions
  fullName: Inflatable.Interfaces.IDatabase.SourceOptions
  nameWithType: IDatabase.SourceOptions
- uid: Inflatable.Interfaces.IDatabase.SourceOptions*
  name: SourceOptions
  href: api/Inflatable.Interfaces.IDatabase.html#Inflatable_Interfaces_IDatabase_SourceOptions_
  commentId: Overload:Inflatable.Interfaces.IDatabase.SourceOptions
  isSpec: "True"
  fullName: Inflatable.Interfaces.IDatabase.SourceOptions
  nameWithType: IDatabase.SourceOptions
- uid: Inflatable.Interfaces.IMapping
  name: IMapping
  href: api/Inflatable.Interfaces.IMapping.html
  commentId: T:Inflatable.Interfaces.IMapping
  fullName: Inflatable.Interfaces.IMapping
  nameWithType: IMapping
- uid: Inflatable.Interfaces.IMapping.AddAutoKey
  name: AddAutoKey()
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_AddAutoKey
  commentId: M:Inflatable.Interfaces.IMapping.AddAutoKey
  fullName: Inflatable.Interfaces.IMapping.AddAutoKey()
  nameWithType: IMapping.AddAutoKey()
- uid: Inflatable.Interfaces.IMapping.AddAutoKey*
  name: AddAutoKey
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_AddAutoKey_
  commentId: Overload:Inflatable.Interfaces.IMapping.AddAutoKey
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.AddAutoKey
  nameWithType: IMapping.AddAutoKey
- uid: Inflatable.Interfaces.IMapping.AutoIDProperties
  name: AutoIDProperties
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_AutoIDProperties
  commentId: P:Inflatable.Interfaces.IMapping.AutoIDProperties
  fullName: Inflatable.Interfaces.IMapping.AutoIDProperties
  nameWithType: IMapping.AutoIDProperties
- uid: Inflatable.Interfaces.IMapping.AutoIDProperties*
  name: AutoIDProperties
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_AutoIDProperties_
  commentId: Overload:Inflatable.Interfaces.IMapping.AutoIDProperties
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.AutoIDProperties
  nameWithType: IMapping.AutoIDProperties
- uid: Inflatable.Interfaces.IMapping.ContainsProperty(System.String)
  name: ContainsProperty(string)
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_ContainsProperty_System_String_
  commentId: M:Inflatable.Interfaces.IMapping.ContainsProperty(System.String)
  name.vb: ContainsProperty(String)
  fullName: Inflatable.Interfaces.IMapping.ContainsProperty(string)
  fullName.vb: Inflatable.Interfaces.IMapping.ContainsProperty(String)
  nameWithType: IMapping.ContainsProperty(string)
  nameWithType.vb: IMapping.ContainsProperty(String)
- uid: Inflatable.Interfaces.IMapping.ContainsProperty*
  name: ContainsProperty
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_ContainsProperty_
  commentId: Overload:Inflatable.Interfaces.IMapping.ContainsProperty
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.ContainsProperty
  nameWithType: IMapping.ContainsProperty
- uid: Inflatable.Interfaces.IMapping.Copy(Inflatable.Interfaces.IMapping)
  name: Copy(IMapping)
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_Copy_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.Interfaces.IMapping.Copy(Inflatable.Interfaces.IMapping)
  fullName: Inflatable.Interfaces.IMapping.Copy(Inflatable.Interfaces.IMapping)
  nameWithType: IMapping.Copy(IMapping)
- uid: Inflatable.Interfaces.IMapping.Copy*
  name: Copy
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_Copy_
  commentId: Overload:Inflatable.Interfaces.IMapping.Copy
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.Copy
  nameWithType: IMapping.Copy
- uid: Inflatable.Interfaces.IMapping.CopyProperty(Inflatable.ClassMapper.Interfaces.IIDProperty)
  name: CopyProperty(IIDProperty)
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_CopyProperty_Inflatable_ClassMapper_Interfaces_IIDProperty_
  commentId: M:Inflatable.Interfaces.IMapping.CopyProperty(Inflatable.ClassMapper.Interfaces.IIDProperty)
  fullName: Inflatable.Interfaces.IMapping.CopyProperty(Inflatable.ClassMapper.Interfaces.IIDProperty)
  nameWithType: IMapping.CopyProperty(IIDProperty)
- uid: Inflatable.Interfaces.IMapping.CopyProperty(Inflatable.ClassMapper.Interfaces.IManyToManyProperty)
  name: CopyProperty(IManyToManyProperty)
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_CopyProperty_Inflatable_ClassMapper_Interfaces_IManyToManyProperty_
  commentId: M:Inflatable.Interfaces.IMapping.CopyProperty(Inflatable.ClassMapper.Interfaces.IManyToManyProperty)
  fullName: Inflatable.Interfaces.IMapping.CopyProperty(Inflatable.ClassMapper.Interfaces.IManyToManyProperty)
  nameWithType: IMapping.CopyProperty(IManyToManyProperty)
- uid: Inflatable.Interfaces.IMapping.CopyProperty(Inflatable.ClassMapper.Interfaces.IManyToOneProperty)
  name: CopyProperty(IManyToOneProperty)
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_CopyProperty_Inflatable_ClassMapper_Interfaces_IManyToOneProperty_
  commentId: M:Inflatable.Interfaces.IMapping.CopyProperty(Inflatable.ClassMapper.Interfaces.IManyToOneProperty)
  fullName: Inflatable.Interfaces.IMapping.CopyProperty(Inflatable.ClassMapper.Interfaces.IManyToOneProperty)
  nameWithType: IMapping.CopyProperty(IManyToOneProperty)
- uid: Inflatable.Interfaces.IMapping.CopyProperty(Inflatable.ClassMapper.Interfaces.IMapProperty)
  name: CopyProperty(IMapProperty)
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_CopyProperty_Inflatable_ClassMapper_Interfaces_IMapProperty_
  commentId: M:Inflatable.Interfaces.IMapping.CopyProperty(Inflatable.ClassMapper.Interfaces.IMapProperty)
  fullName: Inflatable.Interfaces.IMapping.CopyProperty(Inflatable.ClassMapper.Interfaces.IMapProperty)
  nameWithType: IMapping.CopyProperty(IMapProperty)
- uid: Inflatable.Interfaces.IMapping.CopyProperty(Inflatable.ClassMapper.Interfaces.IProperty)
  name: CopyProperty(IProperty)
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_CopyProperty_Inflatable_ClassMapper_Interfaces_IProperty_
  commentId: M:Inflatable.Interfaces.IMapping.CopyProperty(Inflatable.ClassMapper.Interfaces.IProperty)
  fullName: Inflatable.Interfaces.IMapping.CopyProperty(Inflatable.ClassMapper.Interfaces.IProperty)
  nameWithType: IMapping.CopyProperty(IProperty)
- uid: Inflatable.Interfaces.IMapping.CopyProperty*
  name: CopyProperty
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_CopyProperty_
  commentId: Overload:Inflatable.Interfaces.IMapping.CopyProperty
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.CopyProperty
  nameWithType: IMapping.CopyProperty
- uid: Inflatable.Interfaces.IMapping.DatabaseConfigType
  name: DatabaseConfigType
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_DatabaseConfigType
  commentId: P:Inflatable.Interfaces.IMapping.DatabaseConfigType
  fullName: Inflatable.Interfaces.IMapping.DatabaseConfigType
  nameWithType: IMapping.DatabaseConfigType
- uid: Inflatable.Interfaces.IMapping.DatabaseConfigType*
  name: DatabaseConfigType
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_DatabaseConfigType_
  commentId: Overload:Inflatable.Interfaces.IMapping.DatabaseConfigType
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.DatabaseConfigType
  nameWithType: IMapping.DatabaseConfigType
- uid: Inflatable.Interfaces.IMapping.GetColumnName(System.String)
  name: GetColumnName(string)
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_GetColumnName_System_String_
  commentId: M:Inflatable.Interfaces.IMapping.GetColumnName(System.String)
  name.vb: GetColumnName(String)
  fullName: Inflatable.Interfaces.IMapping.GetColumnName(string)
  fullName.vb: Inflatable.Interfaces.IMapping.GetColumnName(String)
  nameWithType: IMapping.GetColumnName(string)
  nameWithType.vb: IMapping.GetColumnName(String)
- uid: Inflatable.Interfaces.IMapping.GetColumnName*
  name: GetColumnName
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_GetColumnName_
  commentId: Overload:Inflatable.Interfaces.IMapping.GetColumnName
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.GetColumnName
  nameWithType: IMapping.GetColumnName
- uid: Inflatable.Interfaces.IMapping.IDProperties
  name: IDProperties
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_IDProperties
  commentId: P:Inflatable.Interfaces.IMapping.IDProperties
  fullName: Inflatable.Interfaces.IMapping.IDProperties
  nameWithType: IMapping.IDProperties
- uid: Inflatable.Interfaces.IMapping.IDProperties*
  name: IDProperties
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_IDProperties_
  commentId: Overload:Inflatable.Interfaces.IMapping.IDProperties
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.IDProperties
  nameWithType: IMapping.IDProperties
- uid: Inflatable.Interfaces.IMapping.ManyToManyProperties
  name: ManyToManyProperties
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_ManyToManyProperties
  commentId: P:Inflatable.Interfaces.IMapping.ManyToManyProperties
  fullName: Inflatable.Interfaces.IMapping.ManyToManyProperties
  nameWithType: IMapping.ManyToManyProperties
- uid: Inflatable.Interfaces.IMapping.ManyToManyProperties*
  name: ManyToManyProperties
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_ManyToManyProperties_
  commentId: Overload:Inflatable.Interfaces.IMapping.ManyToManyProperties
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.ManyToManyProperties
  nameWithType: IMapping.ManyToManyProperties
- uid: Inflatable.Interfaces.IMapping.ManyToOneProperties
  name: ManyToOneProperties
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_ManyToOneProperties
  commentId: P:Inflatable.Interfaces.IMapping.ManyToOneProperties
  fullName: Inflatable.Interfaces.IMapping.ManyToOneProperties
  nameWithType: IMapping.ManyToOneProperties
- uid: Inflatable.Interfaces.IMapping.ManyToOneProperties*
  name: ManyToOneProperties
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_ManyToOneProperties_
  commentId: Overload:Inflatable.Interfaces.IMapping.ManyToOneProperties
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.ManyToOneProperties
  nameWithType: IMapping.ManyToOneProperties
- uid: Inflatable.Interfaces.IMapping.MapProperties
  name: MapProperties
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_MapProperties
  commentId: P:Inflatable.Interfaces.IMapping.MapProperties
  fullName: Inflatable.Interfaces.IMapping.MapProperties
  nameWithType: IMapping.MapProperties
- uid: Inflatable.Interfaces.IMapping.MapProperties*
  name: MapProperties
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_MapProperties_
  commentId: Overload:Inflatable.Interfaces.IMapping.MapProperties
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.MapProperties
  nameWithType: IMapping.MapProperties
- uid: Inflatable.Interfaces.IMapping.Merge
  name: Merge
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_Merge
  commentId: P:Inflatable.Interfaces.IMapping.Merge
  fullName: Inflatable.Interfaces.IMapping.Merge
  nameWithType: IMapping.Merge
- uid: Inflatable.Interfaces.IMapping.Merge*
  name: Merge
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_Merge_
  commentId: Overload:Inflatable.Interfaces.IMapping.Merge
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.Merge
  nameWithType: IMapping.Merge
- uid: Inflatable.Interfaces.IMapping.ObjectType
  name: ObjectType
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_ObjectType
  commentId: P:Inflatable.Interfaces.IMapping.ObjectType
  fullName: Inflatable.Interfaces.IMapping.ObjectType
  nameWithType: IMapping.ObjectType
- uid: Inflatable.Interfaces.IMapping.ObjectType*
  name: ObjectType
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_ObjectType_
  commentId: Overload:Inflatable.Interfaces.IMapping.ObjectType
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.ObjectType
  nameWithType: IMapping.ObjectType
- uid: Inflatable.Interfaces.IMapping.Order
  name: Order
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_Order
  commentId: P:Inflatable.Interfaces.IMapping.Order
  fullName: Inflatable.Interfaces.IMapping.Order
  nameWithType: IMapping.Order
- uid: Inflatable.Interfaces.IMapping.Order*
  name: Order
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_Order_
  commentId: Overload:Inflatable.Interfaces.IMapping.Order
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.Order
  nameWithType: IMapping.Order
- uid: Inflatable.Interfaces.IMapping.Prefix
  name: Prefix
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_Prefix
  commentId: P:Inflatable.Interfaces.IMapping.Prefix
  fullName: Inflatable.Interfaces.IMapping.Prefix
  nameWithType: IMapping.Prefix
- uid: Inflatable.Interfaces.IMapping.Prefix*
  name: Prefix
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_Prefix_
  commentId: Overload:Inflatable.Interfaces.IMapping.Prefix
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.Prefix
  nameWithType: IMapping.Prefix
- uid: Inflatable.Interfaces.IMapping.Queries
  name: Queries
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_Queries
  commentId: P:Inflatable.Interfaces.IMapping.Queries
  fullName: Inflatable.Interfaces.IMapping.Queries
  nameWithType: IMapping.Queries
- uid: Inflatable.Interfaces.IMapping.Queries*
  name: Queries
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_Queries_
  commentId: Overload:Inflatable.Interfaces.IMapping.Queries
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.Queries
  nameWithType: IMapping.Queries
- uid: Inflatable.Interfaces.IMapping.Reduce(Inflatable.Interfaces.IMapping,Microsoft.Extensions.Logging.ILogger)
  name: Reduce(IMapping, ILogger)
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_Reduce_Inflatable_Interfaces_IMapping_Microsoft_Extensions_Logging_ILogger_
  commentId: M:Inflatable.Interfaces.IMapping.Reduce(Inflatable.Interfaces.IMapping,Microsoft.Extensions.Logging.ILogger)
  fullName: Inflatable.Interfaces.IMapping.Reduce(Inflatable.Interfaces.IMapping, Microsoft.Extensions.Logging.ILogger)
  nameWithType: IMapping.Reduce(IMapping, ILogger)
- uid: Inflatable.Interfaces.IMapping.Reduce(Microsoft.Extensions.Logging.ILogger)
  name: Reduce(ILogger)
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_Reduce_Microsoft_Extensions_Logging_ILogger_
  commentId: M:Inflatable.Interfaces.IMapping.Reduce(Microsoft.Extensions.Logging.ILogger)
  fullName: Inflatable.Interfaces.IMapping.Reduce(Microsoft.Extensions.Logging.ILogger)
  nameWithType: IMapping.Reduce(ILogger)
- uid: Inflatable.Interfaces.IMapping.Reduce*
  name: Reduce
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_Reduce_
  commentId: Overload:Inflatable.Interfaces.IMapping.Reduce
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.Reduce
  nameWithType: IMapping.Reduce
- uid: Inflatable.Interfaces.IMapping.ReferenceProperties
  name: ReferenceProperties
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_ReferenceProperties
  commentId: P:Inflatable.Interfaces.IMapping.ReferenceProperties
  fullName: Inflatable.Interfaces.IMapping.ReferenceProperties
  nameWithType: IMapping.ReferenceProperties
- uid: Inflatable.Interfaces.IMapping.ReferenceProperties*
  name: ReferenceProperties
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_ReferenceProperties_
  commentId: Overload:Inflatable.Interfaces.IMapping.ReferenceProperties
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.ReferenceProperties
  nameWithType: IMapping.ReferenceProperties
- uid: Inflatable.Interfaces.IMapping.SchemaName
  name: SchemaName
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_SchemaName
  commentId: P:Inflatable.Interfaces.IMapping.SchemaName
  fullName: Inflatable.Interfaces.IMapping.SchemaName
  nameWithType: IMapping.SchemaName
- uid: Inflatable.Interfaces.IMapping.SchemaName*
  name: SchemaName
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_SchemaName_
  commentId: Overload:Inflatable.Interfaces.IMapping.SchemaName
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.SchemaName
  nameWithType: IMapping.SchemaName
- uid: Inflatable.Interfaces.IMapping.SetQuery(Inflatable.QueryProvider.Enums.QueryType,System.String,System.Data.CommandType,SQLHelperDB.HelperClasses.Interfaces.IParameter[])
  name: SetQuery(QueryType, string, CommandType, params IParameter[])
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_SetQuery_Inflatable_QueryProvider_Enums_QueryType_System_String_System_Data_CommandType_SQLHelperDB_HelperClasses_Interfaces_IParameter___
  commentId: M:Inflatable.Interfaces.IMapping.SetQuery(Inflatable.QueryProvider.Enums.QueryType,System.String,System.Data.CommandType,SQLHelperDB.HelperClasses.Interfaces.IParameter[])
  name.vb: SetQuery(QueryType, String, CommandType, ParamArray IParameter())
  fullName: Inflatable.Interfaces.IMapping.SetQuery(Inflatable.QueryProvider.Enums.QueryType, string, System.Data.CommandType, params SQLHelperDB.HelperClasses.Interfaces.IParameter[])
  fullName.vb: Inflatable.Interfaces.IMapping.SetQuery(Inflatable.QueryProvider.Enums.QueryType, String, System.Data.CommandType, ParamArray SQLHelperDB.HelperClasses.Interfaces.IParameter())
  nameWithType: IMapping.SetQuery(QueryType, string, CommandType, params IParameter[])
  nameWithType.vb: IMapping.SetQuery(QueryType, String, CommandType, ParamArray IParameter())
- uid: Inflatable.Interfaces.IMapping.SetQuery*
  name: SetQuery
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_SetQuery_
  commentId: Overload:Inflatable.Interfaces.IMapping.SetQuery
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.SetQuery
  nameWithType: IMapping.SetQuery
- uid: Inflatable.Interfaces.IMapping.Setup
  name: Setup()
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_Setup
  commentId: M:Inflatable.Interfaces.IMapping.Setup
  fullName: Inflatable.Interfaces.IMapping.Setup()
  nameWithType: IMapping.Setup()
- uid: Inflatable.Interfaces.IMapping.Setup*
  name: Setup
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_Setup_
  commentId: Overload:Inflatable.Interfaces.IMapping.Setup
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.Setup
  nameWithType: IMapping.Setup
- uid: Inflatable.Interfaces.IMapping.Suffix
  name: Suffix
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_Suffix
  commentId: P:Inflatable.Interfaces.IMapping.Suffix
  fullName: Inflatable.Interfaces.IMapping.Suffix
  nameWithType: IMapping.Suffix
- uid: Inflatable.Interfaces.IMapping.Suffix*
  name: Suffix
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_Suffix_
  commentId: Overload:Inflatable.Interfaces.IMapping.Suffix
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.Suffix
  nameWithType: IMapping.Suffix
- uid: Inflatable.Interfaces.IMapping.TableName
  name: TableName
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_TableName
  commentId: P:Inflatable.Interfaces.IMapping.TableName
  fullName: Inflatable.Interfaces.IMapping.TableName
  nameWithType: IMapping.TableName
- uid: Inflatable.Interfaces.IMapping.TableName*
  name: TableName
  href: api/Inflatable.Interfaces.IMapping.html#Inflatable_Interfaces_IMapping_TableName_
  commentId: Overload:Inflatable.Interfaces.IMapping.TableName
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping.TableName
  nameWithType: IMapping.TableName
- uid: Inflatable.Interfaces.IMapping`1
  name: IMapping<TClassType>
  href: api/Inflatable.Interfaces.IMapping-1.html
  commentId: T:Inflatable.Interfaces.IMapping`1
  name.vb: IMapping(Of TClassType)
  fullName: Inflatable.Interfaces.IMapping<TClassType>
  fullName.vb: Inflatable.Interfaces.IMapping(Of TClassType)
  nameWithType: IMapping<TClassType>
  nameWithType.vb: IMapping(Of TClassType)
- uid: Inflatable.Interfaces.IMapping`1.ID*
  name: ID
  href: api/Inflatable.Interfaces.IMapping-1.html#Inflatable_Interfaces_IMapping_1_ID_
  commentId: Overload:Inflatable.Interfaces.IMapping`1.ID
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping<TClassType>.ID
  fullName.vb: Inflatable.Interfaces.IMapping(Of TClassType).ID
  nameWithType: IMapping<TClassType>.ID
  nameWithType.vb: IMapping(Of TClassType).ID
- uid: Inflatable.Interfaces.IMapping`1.ID``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  name: ID<TDataType>(Expression<Func<TClassType, TDataType>>)
  href: api/Inflatable.Interfaces.IMapping-1.html#Inflatable_Interfaces_IMapping_1_ID__1_System_Linq_Expressions_Expression_System_Func__0___0___
  commentId: M:Inflatable.Interfaces.IMapping`1.ID``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  name.vb: ID(Of TDataType)(Expression(Of Func(Of TClassType, TDataType)))
  fullName: Inflatable.Interfaces.IMapping<TClassType>.ID<TDataType>(System.Linq.Expressions.Expression<System.Func<TClassType, TDataType>>)
  fullName.vb: Inflatable.Interfaces.IMapping(Of TClassType).ID(Of TDataType)(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, TDataType)))
  nameWithType: IMapping<TClassType>.ID<TDataType>(Expression<Func<TClassType, TDataType>>)
  nameWithType.vb: IMapping(Of TClassType).ID(Of TDataType)(Expression(Of Func(Of TClassType, TDataType)))
- uid: Inflatable.Interfaces.IMapping`1.ManyToMany*
  name: ManyToMany
  href: api/Inflatable.Interfaces.IMapping-1.html#Inflatable_Interfaces_IMapping_1_ManyToMany_
  commentId: Overload:Inflatable.Interfaces.IMapping`1.ManyToMany
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping<TClassType>.ManyToMany
  fullName.vb: Inflatable.Interfaces.IMapping(Of TClassType).ManyToMany
  nameWithType: IMapping<TClassType>.ManyToMany
  nameWithType.vb: IMapping(Of TClassType).ManyToMany
- uid: Inflatable.Interfaces.IMapping`1.ManyToMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{``0}}})
  name: ManyToMany<TDataType>(Expression<Func<TClassType, IList<TDataType>>>)
  href: api/Inflatable.Interfaces.IMapping-1.html#Inflatable_Interfaces_IMapping_1_ManyToMany__1_System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_IList___0____
  commentId: M:Inflatable.Interfaces.IMapping`1.ManyToMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{``0}}})
  name.vb: ManyToMany(Of TDataType)(Expression(Of Func(Of TClassType, IList(Of TDataType))))
  fullName: Inflatable.Interfaces.IMapping<TClassType>.ManyToMany<TDataType>(System.Linq.Expressions.Expression<System.Func<TClassType, System.Collections.Generic.IList<TDataType>>>)
  fullName.vb: Inflatable.Interfaces.IMapping(Of TClassType).ManyToMany(Of TDataType)(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, System.Collections.Generic.IList(Of TDataType))))
  nameWithType: IMapping<TClassType>.ManyToMany<TDataType>(Expression<Func<TClassType, IList<TDataType>>>)
  nameWithType.vb: IMapping(Of TClassType).ManyToMany(Of TDataType)(Expression(Of Func(Of TClassType, IList(Of TDataType))))
- uid: Inflatable.Interfaces.IMapping`1.ManyToOne*
  name: ManyToOne
  href: api/Inflatable.Interfaces.IMapping-1.html#Inflatable_Interfaces_IMapping_1_ManyToOne_
  commentId: Overload:Inflatable.Interfaces.IMapping`1.ManyToOne
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping<TClassType>.ManyToOne
  fullName.vb: Inflatable.Interfaces.IMapping(Of TClassType).ManyToOne
  nameWithType: IMapping<TClassType>.ManyToOne
  nameWithType.vb: IMapping(Of TClassType).ManyToOne
- uid: Inflatable.Interfaces.IMapping`1.ManyToOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  name: ManyToOne<TDataType>(Expression<Func<TClassType, TDataType?>>)
  href: api/Inflatable.Interfaces.IMapping-1.html#Inflatable_Interfaces_IMapping_1_ManyToOne__1_System_Linq_Expressions_Expression_System_Func__0___0___
  commentId: M:Inflatable.Interfaces.IMapping`1.ManyToOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  name.vb: ManyToOne(Of TDataType)(Expression(Of Func(Of TClassType, TDataType)))
  fullName: Inflatable.Interfaces.IMapping<TClassType>.ManyToOne<TDataType>(System.Linq.Expressions.Expression<System.Func<TClassType, TDataType?>>)
  fullName.vb: Inflatable.Interfaces.IMapping(Of TClassType).ManyToOne(Of TDataType)(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, TDataType)))
  nameWithType: IMapping<TClassType>.ManyToOne<TDataType>(Expression<Func<TClassType, TDataType?>>)
  nameWithType.vb: IMapping(Of TClassType).ManyToOne(Of TDataType)(Expression(Of Func(Of TClassType, TDataType)))
- uid: Inflatable.Interfaces.IMapping`1.ManyToOne``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{``0}}})
  name: ManyToOne<TDataType>(Expression<Func<TClassType, IList<TDataType>>>)
  href: api/Inflatable.Interfaces.IMapping-1.html#Inflatable_Interfaces_IMapping_1_ManyToOne__1_System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_IList___0____
  commentId: M:Inflatable.Interfaces.IMapping`1.ManyToOne``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{``0}}})
  name.vb: ManyToOne(Of TDataType)(Expression(Of Func(Of TClassType, IList(Of TDataType))))
  fullName: Inflatable.Interfaces.IMapping<TClassType>.ManyToOne<TDataType>(System.Linq.Expressions.Expression<System.Func<TClassType, System.Collections.Generic.IList<TDataType>>>)
  fullName.vb: Inflatable.Interfaces.IMapping(Of TClassType).ManyToOne(Of TDataType)(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, System.Collections.Generic.IList(Of TDataType))))
  nameWithType: IMapping<TClassType>.ManyToOne<TDataType>(Expression<Func<TClassType, IList<TDataType>>>)
  nameWithType.vb: IMapping(Of TClassType).ManyToOne(Of TDataType)(Expression(Of Func(Of TClassType, IList(Of TDataType))))
- uid: Inflatable.Interfaces.IMapping`1.Map*
  name: Map
  href: api/Inflatable.Interfaces.IMapping-1.html#Inflatable_Interfaces_IMapping_1_Map_
  commentId: Overload:Inflatable.Interfaces.IMapping`1.Map
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping<TClassType>.Map
  fullName.vb: Inflatable.Interfaces.IMapping(Of TClassType).Map
  nameWithType: IMapping<TClassType>.Map
  nameWithType.vb: IMapping(Of TClassType).Map
- uid: Inflatable.Interfaces.IMapping`1.Map``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  name: Map<TDataType>(Expression<Func<TClassType, TDataType?>>)
  href: api/Inflatable.Interfaces.IMapping-1.html#Inflatable_Interfaces_IMapping_1_Map__1_System_Linq_Expressions_Expression_System_Func__0___0___
  commentId: M:Inflatable.Interfaces.IMapping`1.Map``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  name.vb: Map(Of TDataType)(Expression(Of Func(Of TClassType, TDataType)))
  fullName: Inflatable.Interfaces.IMapping<TClassType>.Map<TDataType>(System.Linq.Expressions.Expression<System.Func<TClassType, TDataType?>>)
  fullName.vb: Inflatable.Interfaces.IMapping(Of TClassType).Map(Of TDataType)(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, TDataType)))
  nameWithType: IMapping<TClassType>.Map<TDataType>(Expression<Func<TClassType, TDataType?>>)
  nameWithType.vb: IMapping(Of TClassType).Map(Of TDataType)(Expression(Of Func(Of TClassType, TDataType)))
- uid: Inflatable.Interfaces.IMapping`1.Reference*
  name: Reference
  href: api/Inflatable.Interfaces.IMapping-1.html#Inflatable_Interfaces_IMapping_1_Reference_
  commentId: Overload:Inflatable.Interfaces.IMapping`1.Reference
  isSpec: "True"
  fullName: Inflatable.Interfaces.IMapping<TClassType>.Reference
  fullName.vb: Inflatable.Interfaces.IMapping(Of TClassType).Reference
  nameWithType: IMapping<TClassType>.Reference
  nameWithType.vb: IMapping(Of TClassType).Reference
- uid: Inflatable.Interfaces.IMapping`1.Reference``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  name: Reference<TDataType>(Expression<Func<TClassType, TDataType>>)
  href: api/Inflatable.Interfaces.IMapping-1.html#Inflatable_Interfaces_IMapping_1_Reference__1_System_Linq_Expressions_Expression_System_Func__0___0___
  commentId: M:Inflatable.Interfaces.IMapping`1.Reference``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  name.vb: Reference(Of TDataType)(Expression(Of Func(Of TClassType, TDataType)))
  fullName: Inflatable.Interfaces.IMapping<TClassType>.Reference<TDataType>(System.Linq.Expressions.Expression<System.Func<TClassType, TDataType>>)
  fullName.vb: Inflatable.Interfaces.IMapping(Of TClassType).Reference(Of TDataType)(System.Linq.Expressions.Expression(Of System.Func(Of TClassType, TDataType)))
  nameWithType: IMapping<TClassType>.Reference<TDataType>(Expression<Func<TClassType, TDataType>>)
  nameWithType.vb: IMapping(Of TClassType).Reference(Of TDataType)(Expression(Of Func(Of TClassType, TDataType)))
- uid: Inflatable.Interfaces.IObject`1
  name: IObject<IDType>
  href: api/Inflatable.Interfaces.IObject-1.html
  commentId: T:Inflatable.Interfaces.IObject`1
  name.vb: IObject(Of IDType)
  fullName: Inflatable.Interfaces.IObject<IDType>
  fullName.vb: Inflatable.Interfaces.IObject(Of IDType)
  nameWithType: IObject<IDType>
  nameWithType.vb: IObject(Of IDType)
- uid: Inflatable.Interfaces.IObject`1.Active
  name: Active
  href: api/Inflatable.Interfaces.IObject-1.html#Inflatable_Interfaces_IObject_1_Active
  commentId: P:Inflatable.Interfaces.IObject`1.Active
  fullName: Inflatable.Interfaces.IObject<IDType>.Active
  fullName.vb: Inflatable.Interfaces.IObject(Of IDType).Active
  nameWithType: IObject<IDType>.Active
  nameWithType.vb: IObject(Of IDType).Active
- uid: Inflatable.Interfaces.IObject`1.Active*
  name: Active
  href: api/Inflatable.Interfaces.IObject-1.html#Inflatable_Interfaces_IObject_1_Active_
  commentId: Overload:Inflatable.Interfaces.IObject`1.Active
  isSpec: "True"
  fullName: Inflatable.Interfaces.IObject<IDType>.Active
  fullName.vb: Inflatable.Interfaces.IObject(Of IDType).Active
  nameWithType: IObject<IDType>.Active
  nameWithType.vb: IObject(Of IDType).Active
- uid: Inflatable.Interfaces.IObject`1.DateCreated
  name: DateCreated
  href: api/Inflatable.Interfaces.IObject-1.html#Inflatable_Interfaces_IObject_1_DateCreated
  commentId: P:Inflatable.Interfaces.IObject`1.DateCreated
  fullName: Inflatable.Interfaces.IObject<IDType>.DateCreated
  fullName.vb: Inflatable.Interfaces.IObject(Of IDType).DateCreated
  nameWithType: IObject<IDType>.DateCreated
  nameWithType.vb: IObject(Of IDType).DateCreated
- uid: Inflatable.Interfaces.IObject`1.DateCreated*
  name: DateCreated
  href: api/Inflatable.Interfaces.IObject-1.html#Inflatable_Interfaces_IObject_1_DateCreated_
  commentId: Overload:Inflatable.Interfaces.IObject`1.DateCreated
  isSpec: "True"
  fullName: Inflatable.Interfaces.IObject<IDType>.DateCreated
  fullName.vb: Inflatable.Interfaces.IObject(Of IDType).DateCreated
  nameWithType: IObject<IDType>.DateCreated
  nameWithType.vb: IObject(Of IDType).DateCreated
- uid: Inflatable.Interfaces.IObject`1.DateModified
  name: DateModified
  href: api/Inflatable.Interfaces.IObject-1.html#Inflatable_Interfaces_IObject_1_DateModified
  commentId: P:Inflatable.Interfaces.IObject`1.DateModified
  fullName: Inflatable.Interfaces.IObject<IDType>.DateModified
  fullName.vb: Inflatable.Interfaces.IObject(Of IDType).DateModified
  nameWithType: IObject<IDType>.DateModified
  nameWithType.vb: IObject(Of IDType).DateModified
- uid: Inflatable.Interfaces.IObject`1.DateModified*
  name: DateModified
  href: api/Inflatable.Interfaces.IObject-1.html#Inflatable_Interfaces_IObject_1_DateModified_
  commentId: Overload:Inflatable.Interfaces.IObject`1.DateModified
  isSpec: "True"
  fullName: Inflatable.Interfaces.IObject<IDType>.DateModified
  fullName.vb: Inflatable.Interfaces.IObject(Of IDType).DateModified
  nameWithType: IObject<IDType>.DateModified
  nameWithType.vb: IObject(Of IDType).DateModified
- uid: Inflatable.Interfaces.IObject`1.ID
  name: ID
  href: api/Inflatable.Interfaces.IObject-1.html#Inflatable_Interfaces_IObject_1_ID
  commentId: P:Inflatable.Interfaces.IObject`1.ID
  fullName: Inflatable.Interfaces.IObject<IDType>.ID
  fullName.vb: Inflatable.Interfaces.IObject(Of IDType).ID
  nameWithType: IObject<IDType>.ID
  nameWithType.vb: IObject(Of IDType).ID
- uid: Inflatable.Interfaces.IObject`1.ID*
  name: ID
  href: api/Inflatable.Interfaces.IObject-1.html#Inflatable_Interfaces_IObject_1_ID_
  commentId: Overload:Inflatable.Interfaces.IObject`1.ID
  isSpec: "True"
  fullName: Inflatable.Interfaces.IObject<IDType>.ID
  fullName.vb: Inflatable.Interfaces.IObject(Of IDType).ID
  nameWithType: IObject<IDType>.ID
  nameWithType.vb: IObject(Of IDType).ID
- uid: Inflatable.LinqExpression
  name: Inflatable.LinqExpression
  href: api/Inflatable.LinqExpression.html
  commentId: N:Inflatable.LinqExpression
  fullName: Inflatable.LinqExpression
  nameWithType: Inflatable.LinqExpression
- uid: Inflatable.LinqExpression.HelperClasses
  name: Inflatable.LinqExpression.HelperClasses
  href: api/Inflatable.LinqExpression.HelperClasses.html
  commentId: N:Inflatable.LinqExpression.HelperClasses
  fullName: Inflatable.LinqExpression.HelperClasses
  nameWithType: Inflatable.LinqExpression.HelperClasses
- uid: Inflatable.LinqExpression.HelperClasses.Evaluator
  name: Evaluator
  href: api/Inflatable.LinqExpression.HelperClasses.Evaluator.html
  commentId: T:Inflatable.LinqExpression.HelperClasses.Evaluator
  fullName: Inflatable.LinqExpression.HelperClasses.Evaluator
  nameWithType: Evaluator
- uid: Inflatable.LinqExpression.HelperClasses.Evaluator.PartialEval(System.Linq.Expressions.Expression,System.Func{System.Linq.Expressions.Expression,System.Boolean})
  name: PartialEval(Expression, Func<Expression, bool>)
  href: api/Inflatable.LinqExpression.HelperClasses.Evaluator.html#Inflatable_LinqExpression_HelperClasses_Evaluator_PartialEval_System_Linq_Expressions_Expression_System_Func_System_Linq_Expressions_Expression_System_Boolean__
  commentId: M:Inflatable.LinqExpression.HelperClasses.Evaluator.PartialEval(System.Linq.Expressions.Expression,System.Func{System.Linq.Expressions.Expression,System.Boolean})
  name.vb: PartialEval(Expression, Func(Of Expression, Boolean))
  fullName: Inflatable.LinqExpression.HelperClasses.Evaluator.PartialEval(System.Linq.Expressions.Expression, System.Func<System.Linq.Expressions.Expression, bool>)
  fullName.vb: Inflatable.LinqExpression.HelperClasses.Evaluator.PartialEval(System.Linq.Expressions.Expression, System.Func(Of System.Linq.Expressions.Expression, Boolean))
  nameWithType: Evaluator.PartialEval(Expression, Func<Expression, bool>)
  nameWithType.vb: Evaluator.PartialEval(Expression, Func(Of Expression, Boolean))
- uid: Inflatable.LinqExpression.HelperClasses.Evaluator.PartialEval(System.Linq.Expressions.Expression)
  name: PartialEval(Expression)
  href: api/Inflatable.LinqExpression.HelperClasses.Evaluator.html#Inflatable_LinqExpression_HelperClasses_Evaluator_PartialEval_System_Linq_Expressions_Expression_
  commentId: M:Inflatable.LinqExpression.HelperClasses.Evaluator.PartialEval(System.Linq.Expressions.Expression)
  fullName: Inflatable.LinqExpression.HelperClasses.Evaluator.PartialEval(System.Linq.Expressions.Expression)
  nameWithType: Evaluator.PartialEval(Expression)
- uid: Inflatable.LinqExpression.HelperClasses.Evaluator.PartialEval*
  name: PartialEval
  href: api/Inflatable.LinqExpression.HelperClasses.Evaluator.html#Inflatable_LinqExpression_HelperClasses_Evaluator_PartialEval_
  commentId: Overload:Inflatable.LinqExpression.HelperClasses.Evaluator.PartialEval
  isSpec: "True"
  fullName: Inflatable.LinqExpression.HelperClasses.Evaluator.PartialEval
  nameWithType: Evaluator.PartialEval
- uid: Inflatable.LinqExpression.HelperClasses.Nominator
  name: Nominator
  href: api/Inflatable.LinqExpression.HelperClasses.Nominator.html
  commentId: T:Inflatable.LinqExpression.HelperClasses.Nominator
  fullName: Inflatable.LinqExpression.HelperClasses.Nominator
  nameWithType: Nominator
- uid: Inflatable.LinqExpression.HelperClasses.Nominator.#ctor(System.Func{System.Linq.Expressions.Expression,System.Boolean})
  name: Nominator(Func<Expression, bool>)
  href: api/Inflatable.LinqExpression.HelperClasses.Nominator.html#Inflatable_LinqExpression_HelperClasses_Nominator__ctor_System_Func_System_Linq_Expressions_Expression_System_Boolean__
  commentId: M:Inflatable.LinqExpression.HelperClasses.Nominator.#ctor(System.Func{System.Linq.Expressions.Expression,System.Boolean})
  name.vb: New(Func(Of Expression, Boolean))
  fullName: Inflatable.LinqExpression.HelperClasses.Nominator.Nominator(System.Func<System.Linq.Expressions.Expression, bool>)
  fullName.vb: Inflatable.LinqExpression.HelperClasses.Nominator.New(System.Func(Of System.Linq.Expressions.Expression, Boolean))
  nameWithType: Nominator.Nominator(Func<Expression, bool>)
  nameWithType.vb: Nominator.New(Func(Of Expression, Boolean))
- uid: Inflatable.LinqExpression.HelperClasses.Nominator.#ctor*
  name: Nominator
  href: api/Inflatable.LinqExpression.HelperClasses.Nominator.html#Inflatable_LinqExpression_HelperClasses_Nominator__ctor_
  commentId: Overload:Inflatable.LinqExpression.HelperClasses.Nominator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.LinqExpression.HelperClasses.Nominator.Nominator
  fullName.vb: Inflatable.LinqExpression.HelperClasses.Nominator.New
  nameWithType: Nominator.Nominator
  nameWithType.vb: Nominator.New
- uid: Inflatable.LinqExpression.HelperClasses.Nominator.Nominate(System.Linq.Expressions.Expression)
  name: Nominate(Expression)
  href: api/Inflatable.LinqExpression.HelperClasses.Nominator.html#Inflatable_LinqExpression_HelperClasses_Nominator_Nominate_System_Linq_Expressions_Expression_
  commentId: M:Inflatable.LinqExpression.HelperClasses.Nominator.Nominate(System.Linq.Expressions.Expression)
  fullName: Inflatable.LinqExpression.HelperClasses.Nominator.Nominate(System.Linq.Expressions.Expression)
  nameWithType: Nominator.Nominate(Expression)
- uid: Inflatable.LinqExpression.HelperClasses.Nominator.Nominate*
  name: Nominate
  href: api/Inflatable.LinqExpression.HelperClasses.Nominator.html#Inflatable_LinqExpression_HelperClasses_Nominator_Nominate_
  commentId: Overload:Inflatable.LinqExpression.HelperClasses.Nominator.Nominate
  isSpec: "True"
  fullName: Inflatable.LinqExpression.HelperClasses.Nominator.Nominate
  nameWithType: Nominator.Nominate
- uid: Inflatable.LinqExpression.HelperClasses.Nominator.Visit(System.Linq.Expressions.Expression)
  name: Visit(Expression)
  href: api/Inflatable.LinqExpression.HelperClasses.Nominator.html#Inflatable_LinqExpression_HelperClasses_Nominator_Visit_System_Linq_Expressions_Expression_
  commentId: M:Inflatable.LinqExpression.HelperClasses.Nominator.Visit(System.Linq.Expressions.Expression)
  fullName: Inflatable.LinqExpression.HelperClasses.Nominator.Visit(System.Linq.Expressions.Expression)
  nameWithType: Nominator.Visit(Expression)
- uid: Inflatable.LinqExpression.HelperClasses.Nominator.Visit*
  name: Visit
  href: api/Inflatable.LinqExpression.HelperClasses.Nominator.html#Inflatable_LinqExpression_HelperClasses_Nominator_Visit_
  commentId: Overload:Inflatable.LinqExpression.HelperClasses.Nominator.Visit
  isSpec: "True"
  fullName: Inflatable.LinqExpression.HelperClasses.Nominator.Visit
  nameWithType: Nominator.Visit
- uid: Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator
  name: SubtreeEvaluator
  href: api/Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.html
  commentId: T:Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator
  fullName: Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator
  nameWithType: SubtreeEvaluator
- uid: Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.#ctor(System.Collections.Generic.HashSet{System.Linq.Expressions.Expression})
  name: SubtreeEvaluator(HashSet<Expression>)
  href: api/Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.html#Inflatable_LinqExpression_HelperClasses_SubtreeEvaluator__ctor_System_Collections_Generic_HashSet_System_Linq_Expressions_Expression__
  commentId: M:Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.#ctor(System.Collections.Generic.HashSet{System.Linq.Expressions.Expression})
  name.vb: New(HashSet(Of Expression))
  fullName: Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.SubtreeEvaluator(System.Collections.Generic.HashSet<System.Linq.Expressions.Expression>)
  fullName.vb: Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.New(System.Collections.Generic.HashSet(Of System.Linq.Expressions.Expression))
  nameWithType: SubtreeEvaluator.SubtreeEvaluator(HashSet<Expression>)
  nameWithType.vb: SubtreeEvaluator.New(HashSet(Of Expression))
- uid: Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.#ctor*
  name: SubtreeEvaluator
  href: api/Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.html#Inflatable_LinqExpression_HelperClasses_SubtreeEvaluator__ctor_
  commentId: Overload:Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.SubtreeEvaluator
  fullName.vb: Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.New
  nameWithType: SubtreeEvaluator.SubtreeEvaluator
  nameWithType.vb: SubtreeEvaluator.New
- uid: Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.Eval(System.Linq.Expressions.Expression)
  name: Eval(Expression)
  href: api/Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.html#Inflatable_LinqExpression_HelperClasses_SubtreeEvaluator_Eval_System_Linq_Expressions_Expression_
  commentId: M:Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.Eval(System.Linq.Expressions.Expression)
  fullName: Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.Eval(System.Linq.Expressions.Expression)
  nameWithType: SubtreeEvaluator.Eval(Expression)
- uid: Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.Eval*
  name: Eval
  href: api/Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.html#Inflatable_LinqExpression_HelperClasses_SubtreeEvaluator_Eval_
  commentId: Overload:Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.Eval
  isSpec: "True"
  fullName: Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.Eval
  nameWithType: SubtreeEvaluator.Eval
- uid: Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.Visit(System.Linq.Expressions.Expression)
  name: Visit(Expression)
  href: api/Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.html#Inflatable_LinqExpression_HelperClasses_SubtreeEvaluator_Visit_System_Linq_Expressions_Expression_
  commentId: M:Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.Visit(System.Linq.Expressions.Expression)
  fullName: Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.Visit(System.Linq.Expressions.Expression)
  nameWithType: SubtreeEvaluator.Visit(Expression)
- uid: Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.Visit*
  name: Visit
  href: api/Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.html#Inflatable_LinqExpression_HelperClasses_SubtreeEvaluator_Visit_
  commentId: Overload:Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.Visit
  isSpec: "True"
  fullName: Inflatable.LinqExpression.HelperClasses.SubtreeEvaluator.Visit
  nameWithType: SubtreeEvaluator.Visit
- uid: Inflatable.LinqExpression.Interfaces
  name: Inflatable.LinqExpression.Interfaces
  href: api/Inflatable.LinqExpression.Interfaces.html
  commentId: N:Inflatable.LinqExpression.Interfaces
  fullName: Inflatable.LinqExpression.Interfaces
  nameWithType: Inflatable.LinqExpression.Interfaces
- uid: Inflatable.LinqExpression.Interfaces.IQueryData
  name: IQueryData
  href: api/Inflatable.LinqExpression.Interfaces.IQueryData.html
  commentId: T:Inflatable.LinqExpression.Interfaces.IQueryData
  fullName: Inflatable.LinqExpression.Interfaces.IQueryData
  nameWithType: IQueryData
- uid: Inflatable.LinqExpression.OrderBy
  name: Inflatable.LinqExpression.OrderBy
  href: api/Inflatable.LinqExpression.OrderBy.html
  commentId: N:Inflatable.LinqExpression.OrderBy
  fullName: Inflatable.LinqExpression.OrderBy
  nameWithType: Inflatable.LinqExpression.OrderBy
- uid: Inflatable.LinqExpression.OrderBy.Enums
  name: Inflatable.LinqExpression.OrderBy.Enums
  href: api/Inflatable.LinqExpression.OrderBy.Enums.html
  commentId: N:Inflatable.LinqExpression.OrderBy.Enums
  fullName: Inflatable.LinqExpression.OrderBy.Enums
  nameWithType: Inflatable.LinqExpression.OrderBy.Enums
- uid: Inflatable.LinqExpression.OrderBy.Enums.Direction
  name: Direction
  href: api/Inflatable.LinqExpression.OrderBy.Enums.Direction.html
  commentId: T:Inflatable.LinqExpression.OrderBy.Enums.Direction
  fullName: Inflatable.LinqExpression.OrderBy.Enums.Direction
  nameWithType: Direction
- uid: Inflatable.LinqExpression.OrderBy.Enums.Direction.Ascending
  name: Ascending
  href: api/Inflatable.LinqExpression.OrderBy.Enums.Direction.html#Inflatable_LinqExpression_OrderBy_Enums_Direction_Ascending
  commentId: F:Inflatable.LinqExpression.OrderBy.Enums.Direction.Ascending
  fullName: Inflatable.LinqExpression.OrderBy.Enums.Direction.Ascending
  nameWithType: Direction.Ascending
- uid: Inflatable.LinqExpression.OrderBy.Enums.Direction.Descending
  name: Descending
  href: api/Inflatable.LinqExpression.OrderBy.Enums.Direction.html#Inflatable_LinqExpression_OrderBy_Enums_Direction_Descending
  commentId: F:Inflatable.LinqExpression.OrderBy.Enums.Direction.Descending
  fullName: Inflatable.LinqExpression.OrderBy.Enums.Direction.Descending
  nameWithType: Direction.Descending
- uid: Inflatable.LinqExpression.OrderBy.OrderByClause
  name: OrderByClause
  href: api/Inflatable.LinqExpression.OrderBy.OrderByClause.html
  commentId: T:Inflatable.LinqExpression.OrderBy.OrderByClause
  fullName: Inflatable.LinqExpression.OrderBy.OrderByClause
  nameWithType: OrderByClause
- uid: Inflatable.LinqExpression.OrderBy.OrderByClause.#ctor(System.Int32,System.Reflection.PropertyInfo,Inflatable.LinqExpression.OrderBy.Enums.Direction)
  name: OrderByClause(int, PropertyInfo, Direction)
  href: api/Inflatable.LinqExpression.OrderBy.OrderByClause.html#Inflatable_LinqExpression_OrderBy_OrderByClause__ctor_System_Int32_System_Reflection_PropertyInfo_Inflatable_LinqExpression_OrderBy_Enums_Direction_
  commentId: M:Inflatable.LinqExpression.OrderBy.OrderByClause.#ctor(System.Int32,System.Reflection.PropertyInfo,Inflatable.LinqExpression.OrderBy.Enums.Direction)
  name.vb: New(Integer, PropertyInfo, Direction)
  fullName: Inflatable.LinqExpression.OrderBy.OrderByClause.OrderByClause(int, System.Reflection.PropertyInfo, Inflatable.LinqExpression.OrderBy.Enums.Direction)
  fullName.vb: Inflatable.LinqExpression.OrderBy.OrderByClause.New(Integer, System.Reflection.PropertyInfo, Inflatable.LinqExpression.OrderBy.Enums.Direction)
  nameWithType: OrderByClause.OrderByClause(int, PropertyInfo, Direction)
  nameWithType.vb: OrderByClause.New(Integer, PropertyInfo, Direction)
- uid: Inflatable.LinqExpression.OrderBy.OrderByClause.#ctor*
  name: OrderByClause
  href: api/Inflatable.LinqExpression.OrderBy.OrderByClause.html#Inflatable_LinqExpression_OrderBy_OrderByClause__ctor_
  commentId: Overload:Inflatable.LinqExpression.OrderBy.OrderByClause.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.LinqExpression.OrderBy.OrderByClause.OrderByClause
  fullName.vb: Inflatable.LinqExpression.OrderBy.OrderByClause.New
  nameWithType: OrderByClause.OrderByClause
  nameWithType.vb: OrderByClause.New
- uid: Inflatable.LinqExpression.OrderBy.OrderByClause.Direction
  name: Direction
  href: api/Inflatable.LinqExpression.OrderBy.OrderByClause.html#Inflatable_LinqExpression_OrderBy_OrderByClause_Direction
  commentId: P:Inflatable.LinqExpression.OrderBy.OrderByClause.Direction
  fullName: Inflatable.LinqExpression.OrderBy.OrderByClause.Direction
  nameWithType: OrderByClause.Direction
- uid: Inflatable.LinqExpression.OrderBy.OrderByClause.Direction*
  name: Direction
  href: api/Inflatable.LinqExpression.OrderBy.OrderByClause.html#Inflatable_LinqExpression_OrderBy_OrderByClause_Direction_
  commentId: Overload:Inflatable.LinqExpression.OrderBy.OrderByClause.Direction
  isSpec: "True"
  fullName: Inflatable.LinqExpression.OrderBy.OrderByClause.Direction
  nameWithType: OrderByClause.Direction
- uid: Inflatable.LinqExpression.OrderBy.OrderByClause.Order
  name: Order
  href: api/Inflatable.LinqExpression.OrderBy.OrderByClause.html#Inflatable_LinqExpression_OrderBy_OrderByClause_Order
  commentId: P:Inflatable.LinqExpression.OrderBy.OrderByClause.Order
  fullName: Inflatable.LinqExpression.OrderBy.OrderByClause.Order
  nameWithType: OrderByClause.Order
- uid: Inflatable.LinqExpression.OrderBy.OrderByClause.Order*
  name: Order
  href: api/Inflatable.LinqExpression.OrderBy.OrderByClause.html#Inflatable_LinqExpression_OrderBy_OrderByClause_Order_
  commentId: Overload:Inflatable.LinqExpression.OrderBy.OrderByClause.Order
  isSpec: "True"
  fullName: Inflatable.LinqExpression.OrderBy.OrderByClause.Order
  nameWithType: OrderByClause.Order
- uid: Inflatable.LinqExpression.OrderBy.OrderByClause.Property
  name: Property
  href: api/Inflatable.LinqExpression.OrderBy.OrderByClause.html#Inflatable_LinqExpression_OrderBy_OrderByClause_Property
  commentId: P:Inflatable.LinqExpression.OrderBy.OrderByClause.Property
  fullName: Inflatable.LinqExpression.OrderBy.OrderByClause.Property
  nameWithType: OrderByClause.Property
- uid: Inflatable.LinqExpression.OrderBy.OrderByClause.Property*
  name: Property
  href: api/Inflatable.LinqExpression.OrderBy.OrderByClause.html#Inflatable_LinqExpression_OrderBy_OrderByClause_Property_
  commentId: Overload:Inflatable.LinqExpression.OrderBy.OrderByClause.Property
  isSpec: "True"
  fullName: Inflatable.LinqExpression.OrderBy.OrderByClause.Property
  nameWithType: OrderByClause.Property
- uid: Inflatable.LinqExpression.OrderBy.OrderByClause.ToString
  name: ToString()
  href: api/Inflatable.LinqExpression.OrderBy.OrderByClause.html#Inflatable_LinqExpression_OrderBy_OrderByClause_ToString
  commentId: M:Inflatable.LinqExpression.OrderBy.OrderByClause.ToString
  fullName: Inflatable.LinqExpression.OrderBy.OrderByClause.ToString()
  nameWithType: OrderByClause.ToString()
- uid: Inflatable.LinqExpression.OrderBy.OrderByClause.ToString*
  name: ToString
  href: api/Inflatable.LinqExpression.OrderBy.OrderByClause.html#Inflatable_LinqExpression_OrderBy_OrderByClause_ToString_
  commentId: Overload:Inflatable.LinqExpression.OrderBy.OrderByClause.ToString
  isSpec: "True"
  fullName: Inflatable.LinqExpression.OrderBy.OrderByClause.ToString
  nameWithType: OrderByClause.ToString
- uid: Inflatable.LinqExpression.QueryData`1
  name: QueryData<TObject>
  href: api/Inflatable.LinqExpression.QueryData-1.html
  commentId: T:Inflatable.LinqExpression.QueryData`1
  name.vb: QueryData(Of TObject)
  fullName: Inflatable.LinqExpression.QueryData<TObject>
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject)
  nameWithType: QueryData<TObject>
  nameWithType.vb: QueryData(Of TObject)
- uid: Inflatable.LinqExpression.QueryData`1.#ctor(Inflatable.ClassMapper.IMappingSource)
  name: QueryData(IMappingSource)
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1__ctor_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.LinqExpression.QueryData`1.#ctor(Inflatable.ClassMapper.IMappingSource)
  name.vb: New(IMappingSource)
  fullName: Inflatable.LinqExpression.QueryData<TObject>.QueryData(Inflatable.ClassMapper.IMappingSource)
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).New(Inflatable.ClassMapper.IMappingSource)
  nameWithType: QueryData<TObject>.QueryData(IMappingSource)
  nameWithType.vb: QueryData(Of TObject).New(IMappingSource)
- uid: Inflatable.LinqExpression.QueryData`1.#ctor*
  name: QueryData
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1__ctor_
  commentId: Overload:Inflatable.LinqExpression.QueryData`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.LinqExpression.QueryData<TObject>.QueryData
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).New
  nameWithType: QueryData<TObject>.QueryData
  nameWithType.vb: QueryData(Of TObject).New
- uid: Inflatable.LinqExpression.QueryData`1.Count
  name: Count
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_Count
  commentId: P:Inflatable.LinqExpression.QueryData`1.Count
  fullName: Inflatable.LinqExpression.QueryData<TObject>.Count
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).Count
  nameWithType: QueryData<TObject>.Count
  nameWithType.vb: QueryData(Of TObject).Count
- uid: Inflatable.LinqExpression.QueryData`1.Count*
  name: Count
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_Count_
  commentId: Overload:Inflatable.LinqExpression.QueryData`1.Count
  isSpec: "True"
  fullName: Inflatable.LinqExpression.QueryData<TObject>.Count
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).Count
  nameWithType: QueryData<TObject>.Count
  nameWithType.vb: QueryData(Of TObject).Count
- uid: Inflatable.LinqExpression.QueryData`1.Distinct
  name: Distinct
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_Distinct
  commentId: P:Inflatable.LinqExpression.QueryData`1.Distinct
  fullName: Inflatable.LinqExpression.QueryData<TObject>.Distinct
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).Distinct
  nameWithType: QueryData<TObject>.Distinct
  nameWithType.vb: QueryData(Of TObject).Distinct
- uid: Inflatable.LinqExpression.QueryData`1.Distinct*
  name: Distinct
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_Distinct_
  commentId: Overload:Inflatable.LinqExpression.QueryData`1.Distinct
  isSpec: "True"
  fullName: Inflatable.LinqExpression.QueryData<TObject>.Distinct
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).Distinct
  nameWithType: QueryData<TObject>.Distinct
  nameWithType.vb: QueryData(Of TObject).Distinct
- uid: Inflatable.LinqExpression.QueryData`1.ObjectType
  name: ObjectType
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_ObjectType
  commentId: P:Inflatable.LinqExpression.QueryData`1.ObjectType
  fullName: Inflatable.LinqExpression.QueryData<TObject>.ObjectType
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).ObjectType
  nameWithType: QueryData<TObject>.ObjectType
  nameWithType.vb: QueryData(Of TObject).ObjectType
- uid: Inflatable.LinqExpression.QueryData`1.ObjectType*
  name: ObjectType
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_ObjectType_
  commentId: Overload:Inflatable.LinqExpression.QueryData`1.ObjectType
  isSpec: "True"
  fullName: Inflatable.LinqExpression.QueryData<TObject>.ObjectType
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).ObjectType
  nameWithType: QueryData<TObject>.ObjectType
  nameWithType.vb: QueryData(Of TObject).ObjectType
- uid: Inflatable.LinqExpression.QueryData`1.OrderByValues
  name: OrderByValues
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_OrderByValues
  commentId: P:Inflatable.LinqExpression.QueryData`1.OrderByValues
  fullName: Inflatable.LinqExpression.QueryData<TObject>.OrderByValues
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).OrderByValues
  nameWithType: QueryData<TObject>.OrderByValues
  nameWithType.vb: QueryData(Of TObject).OrderByValues
- uid: Inflatable.LinqExpression.QueryData`1.OrderByValues*
  name: OrderByValues
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_OrderByValues_
  commentId: Overload:Inflatable.LinqExpression.QueryData`1.OrderByValues
  isSpec: "True"
  fullName: Inflatable.LinqExpression.QueryData<TObject>.OrderByValues
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).OrderByValues
  nameWithType: QueryData<TObject>.OrderByValues
  nameWithType.vb: QueryData(Of TObject).OrderByValues
- uid: Inflatable.LinqExpression.QueryData`1.Parameters
  name: Parameters
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_Parameters
  commentId: P:Inflatable.LinqExpression.QueryData`1.Parameters
  fullName: Inflatable.LinqExpression.QueryData<TObject>.Parameters
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).Parameters
  nameWithType: QueryData<TObject>.Parameters
  nameWithType.vb: QueryData(Of TObject).Parameters
- uid: Inflatable.LinqExpression.QueryData`1.Parameters*
  name: Parameters
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_Parameters_
  commentId: Overload:Inflatable.LinqExpression.QueryData`1.Parameters
  isSpec: "True"
  fullName: Inflatable.LinqExpression.QueryData<TObject>.Parameters
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).Parameters
  nameWithType: QueryData<TObject>.Parameters
  nameWithType.vb: QueryData(Of TObject).Parameters
- uid: Inflatable.LinqExpression.QueryData`1.SelectValues
  name: SelectValues
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_SelectValues
  commentId: P:Inflatable.LinqExpression.QueryData`1.SelectValues
  fullName: Inflatable.LinqExpression.QueryData<TObject>.SelectValues
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).SelectValues
  nameWithType: QueryData<TObject>.SelectValues
  nameWithType.vb: QueryData(Of TObject).SelectValues
- uid: Inflatable.LinqExpression.QueryData`1.SelectValues*
  name: SelectValues
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_SelectValues_
  commentId: Overload:Inflatable.LinqExpression.QueryData`1.SelectValues
  isSpec: "True"
  fullName: Inflatable.LinqExpression.QueryData<TObject>.SelectValues
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).SelectValues
  nameWithType: QueryData<TObject>.SelectValues
  nameWithType.vb: QueryData(Of TObject).SelectValues
- uid: Inflatable.LinqExpression.QueryData`1.Skip
  name: Skip
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_Skip
  commentId: P:Inflatable.LinqExpression.QueryData`1.Skip
  fullName: Inflatable.LinqExpression.QueryData<TObject>.Skip
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).Skip
  nameWithType: QueryData<TObject>.Skip
  nameWithType.vb: QueryData(Of TObject).Skip
- uid: Inflatable.LinqExpression.QueryData`1.Skip*
  name: Skip
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_Skip_
  commentId: Overload:Inflatable.LinqExpression.QueryData`1.Skip
  isSpec: "True"
  fullName: Inflatable.LinqExpression.QueryData<TObject>.Skip
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).Skip
  nameWithType: QueryData<TObject>.Skip
  nameWithType.vb: QueryData(Of TObject).Skip
- uid: Inflatable.LinqExpression.QueryData`1.Source
  name: Source
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_Source
  commentId: P:Inflatable.LinqExpression.QueryData`1.Source
  fullName: Inflatable.LinqExpression.QueryData<TObject>.Source
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).Source
  nameWithType: QueryData<TObject>.Source
  nameWithType.vb: QueryData(Of TObject).Source
- uid: Inflatable.LinqExpression.QueryData`1.Source*
  name: Source
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_Source_
  commentId: Overload:Inflatable.LinqExpression.QueryData`1.Source
  isSpec: "True"
  fullName: Inflatable.LinqExpression.QueryData<TObject>.Source
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).Source
  nameWithType: QueryData<TObject>.Source
  nameWithType.vb: QueryData(Of TObject).Source
- uid: Inflatable.LinqExpression.QueryData`1.Top
  name: Top
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_Top
  commentId: P:Inflatable.LinqExpression.QueryData`1.Top
  fullName: Inflatable.LinqExpression.QueryData<TObject>.Top
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).Top
  nameWithType: QueryData<TObject>.Top
  nameWithType.vb: QueryData(Of TObject).Top
- uid: Inflatable.LinqExpression.QueryData`1.Top*
  name: Top
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_Top_
  commentId: Overload:Inflatable.LinqExpression.QueryData`1.Top
  isSpec: "True"
  fullName: Inflatable.LinqExpression.QueryData<TObject>.Top
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).Top
  nameWithType: QueryData<TObject>.Top
  nameWithType.vb: QueryData(Of TObject).Top
- uid: Inflatable.LinqExpression.QueryData`1.ToString
  name: ToString()
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_ToString
  commentId: M:Inflatable.LinqExpression.QueryData`1.ToString
  fullName: Inflatable.LinqExpression.QueryData<TObject>.ToString()
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).ToString()
  nameWithType: QueryData<TObject>.ToString()
  nameWithType.vb: QueryData(Of TObject).ToString()
- uid: Inflatable.LinqExpression.QueryData`1.ToString*
  name: ToString
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_ToString_
  commentId: Overload:Inflatable.LinqExpression.QueryData`1.ToString
  isSpec: "True"
  fullName: Inflatable.LinqExpression.QueryData<TObject>.ToString
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).ToString
  nameWithType: QueryData<TObject>.ToString
  nameWithType.vb: QueryData(Of TObject).ToString
- uid: Inflatable.LinqExpression.QueryData`1.WhereClause
  name: WhereClause
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_WhereClause
  commentId: P:Inflatable.LinqExpression.QueryData`1.WhereClause
  fullName: Inflatable.LinqExpression.QueryData<TObject>.WhereClause
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).WhereClause
  nameWithType: QueryData<TObject>.WhereClause
  nameWithType.vb: QueryData(Of TObject).WhereClause
- uid: Inflatable.LinqExpression.QueryData`1.WhereClause*
  name: WhereClause
  href: api/Inflatable.LinqExpression.QueryData-1.html#Inflatable_LinqExpression_QueryData_1_WhereClause_
  commentId: Overload:Inflatable.LinqExpression.QueryData`1.WhereClause
  isSpec: "True"
  fullName: Inflatable.LinqExpression.QueryData<TObject>.WhereClause
  fullName.vb: Inflatable.LinqExpression.QueryData(Of TObject).WhereClause
  nameWithType: QueryData<TObject>.WhereClause
  nameWithType.vb: QueryData(Of TObject).WhereClause
- uid: Inflatable.LinqExpression.QueryTranslator`1
  name: QueryTranslator<TObject>
  href: api/Inflatable.LinqExpression.QueryTranslator-1.html
  commentId: T:Inflatable.LinqExpression.QueryTranslator`1
  name.vb: QueryTranslator(Of TObject)
  fullName: Inflatable.LinqExpression.QueryTranslator<TObject>
  fullName.vb: Inflatable.LinqExpression.QueryTranslator(Of TObject)
  nameWithType: QueryTranslator<TObject>
  nameWithType.vb: QueryTranslator(Of TObject)
- uid: Inflatable.LinqExpression.QueryTranslator`1.#ctor(Inflatable.ClassMapper.MappingManager,Inflatable.QueryProvider.QueryProviderManager)
  name: QueryTranslator(MappingManager, QueryProviderManager)
  href: api/Inflatable.LinqExpression.QueryTranslator-1.html#Inflatable_LinqExpression_QueryTranslator_1__ctor_Inflatable_ClassMapper_MappingManager_Inflatable_QueryProvider_QueryProviderManager_
  commentId: M:Inflatable.LinqExpression.QueryTranslator`1.#ctor(Inflatable.ClassMapper.MappingManager,Inflatable.QueryProvider.QueryProviderManager)
  name.vb: New(MappingManager, QueryProviderManager)
  fullName: Inflatable.LinqExpression.QueryTranslator<TObject>.QueryTranslator(Inflatable.ClassMapper.MappingManager, Inflatable.QueryProvider.QueryProviderManager)
  fullName.vb: Inflatable.LinqExpression.QueryTranslator(Of TObject).New(Inflatable.ClassMapper.MappingManager, Inflatable.QueryProvider.QueryProviderManager)
  nameWithType: QueryTranslator<TObject>.QueryTranslator(MappingManager, QueryProviderManager)
  nameWithType.vb: QueryTranslator(Of TObject).New(MappingManager, QueryProviderManager)
- uid: Inflatable.LinqExpression.QueryTranslator`1.#ctor*
  name: QueryTranslator
  href: api/Inflatable.LinqExpression.QueryTranslator-1.html#Inflatable_LinqExpression_QueryTranslator_1__ctor_
  commentId: Overload:Inflatable.LinqExpression.QueryTranslator`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.LinqExpression.QueryTranslator<TObject>.QueryTranslator
  fullName.vb: Inflatable.LinqExpression.QueryTranslator(Of TObject).New
  nameWithType: QueryTranslator<TObject>.QueryTranslator
  nameWithType.vb: QueryTranslator(Of TObject).New
- uid: Inflatable.LinqExpression.QueryTranslator`1.MappingManager
  name: MappingManager
  href: api/Inflatable.LinqExpression.QueryTranslator-1.html#Inflatable_LinqExpression_QueryTranslator_1_MappingManager
  commentId: P:Inflatable.LinqExpression.QueryTranslator`1.MappingManager
  fullName: Inflatable.LinqExpression.QueryTranslator<TObject>.MappingManager
  fullName.vb: Inflatable.LinqExpression.QueryTranslator(Of TObject).MappingManager
  nameWithType: QueryTranslator<TObject>.MappingManager
  nameWithType.vb: QueryTranslator(Of TObject).MappingManager
- uid: Inflatable.LinqExpression.QueryTranslator`1.MappingManager*
  name: MappingManager
  href: api/Inflatable.LinqExpression.QueryTranslator-1.html#Inflatable_LinqExpression_QueryTranslator_1_MappingManager_
  commentId: Overload:Inflatable.LinqExpression.QueryTranslator`1.MappingManager
  isSpec: "True"
  fullName: Inflatable.LinqExpression.QueryTranslator<TObject>.MappingManager
  fullName.vb: Inflatable.LinqExpression.QueryTranslator(Of TObject).MappingManager
  nameWithType: QueryTranslator<TObject>.MappingManager
  nameWithType.vb: QueryTranslator(Of TObject).MappingManager
- uid: Inflatable.LinqExpression.QueryTranslator`1.QueryProviderManager
  name: QueryProviderManager
  href: api/Inflatable.LinqExpression.QueryTranslator-1.html#Inflatable_LinqExpression_QueryTranslator_1_QueryProviderManager
  commentId: P:Inflatable.LinqExpression.QueryTranslator`1.QueryProviderManager
  fullName: Inflatable.LinqExpression.QueryTranslator<TObject>.QueryProviderManager
  fullName.vb: Inflatable.LinqExpression.QueryTranslator(Of TObject).QueryProviderManager
  nameWithType: QueryTranslator<TObject>.QueryProviderManager
  nameWithType.vb: QueryTranslator(Of TObject).QueryProviderManager
- uid: Inflatable.LinqExpression.QueryTranslator`1.QueryProviderManager*
  name: QueryProviderManager
  href: api/Inflatable.LinqExpression.QueryTranslator-1.html#Inflatable_LinqExpression_QueryTranslator_1_QueryProviderManager_
  commentId: Overload:Inflatable.LinqExpression.QueryTranslator`1.QueryProviderManager
  isSpec: "True"
  fullName: Inflatable.LinqExpression.QueryTranslator<TObject>.QueryProviderManager
  fullName.vb: Inflatable.LinqExpression.QueryTranslator(Of TObject).QueryProviderManager
  nameWithType: QueryTranslator<TObject>.QueryProviderManager
  nameWithType.vb: QueryTranslator(Of TObject).QueryProviderManager
- uid: Inflatable.LinqExpression.QueryTranslator`1.Translate(System.Linq.Expressions.Expression)
  name: Translate(Expression)
  href: api/Inflatable.LinqExpression.QueryTranslator-1.html#Inflatable_LinqExpression_QueryTranslator_1_Translate_System_Linq_Expressions_Expression_
  commentId: M:Inflatable.LinqExpression.QueryTranslator`1.Translate(System.Linq.Expressions.Expression)
  fullName: Inflatable.LinqExpression.QueryTranslator<TObject>.Translate(System.Linq.Expressions.Expression)
  fullName.vb: Inflatable.LinqExpression.QueryTranslator(Of TObject).Translate(System.Linq.Expressions.Expression)
  nameWithType: QueryTranslator<TObject>.Translate(Expression)
  nameWithType.vb: QueryTranslator(Of TObject).Translate(Expression)
- uid: Inflatable.LinqExpression.QueryTranslator`1.Translate*
  name: Translate
  href: api/Inflatable.LinqExpression.QueryTranslator-1.html#Inflatable_LinqExpression_QueryTranslator_1_Translate_
  commentId: Overload:Inflatable.LinqExpression.QueryTranslator`1.Translate
  isSpec: "True"
  fullName: Inflatable.LinqExpression.QueryTranslator<TObject>.Translate
  fullName.vb: Inflatable.LinqExpression.QueryTranslator(Of TObject).Translate
  nameWithType: QueryTranslator<TObject>.Translate
  nameWithType.vb: QueryTranslator(Of TObject).Translate
- uid: Inflatable.LinqExpression.QueryTranslator`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  name: VisitMethodCall(MethodCallExpression)
  href: api/Inflatable.LinqExpression.QueryTranslator-1.html#Inflatable_LinqExpression_QueryTranslator_1_VisitMethodCall_System_Linq_Expressions_MethodCallExpression_
  commentId: M:Inflatable.LinqExpression.QueryTranslator`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  fullName: Inflatable.LinqExpression.QueryTranslator<TObject>.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  fullName.vb: Inflatable.LinqExpression.QueryTranslator(Of TObject).VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  nameWithType: QueryTranslator<TObject>.VisitMethodCall(MethodCallExpression)
  nameWithType.vb: QueryTranslator(Of TObject).VisitMethodCall(MethodCallExpression)
- uid: Inflatable.LinqExpression.QueryTranslator`1.VisitMethodCall*
  name: VisitMethodCall
  href: api/Inflatable.LinqExpression.QueryTranslator-1.html#Inflatable_LinqExpression_QueryTranslator_1_VisitMethodCall_
  commentId: Overload:Inflatable.LinqExpression.QueryTranslator`1.VisitMethodCall
  isSpec: "True"
  fullName: Inflatable.LinqExpression.QueryTranslator<TObject>.VisitMethodCall
  fullName.vb: Inflatable.LinqExpression.QueryTranslator(Of TObject).VisitMethodCall
  nameWithType: QueryTranslator<TObject>.VisitMethodCall
  nameWithType.vb: QueryTranslator(Of TObject).VisitMethodCall
- uid: Inflatable.LinqExpression.Select
  name: Inflatable.LinqExpression.Select
  href: api/Inflatable.LinqExpression.Select.html
  commentId: N:Inflatable.LinqExpression.Select
  fullName: Inflatable.LinqExpression.Select
  nameWithType: Inflatable.LinqExpression.Select
- uid: Inflatable.LinqExpression.Select.ColumnProjector
  name: ColumnProjector
  href: api/Inflatable.LinqExpression.Select.ColumnProjector.html
  commentId: T:Inflatable.LinqExpression.Select.ColumnProjector
  fullName: Inflatable.LinqExpression.Select.ColumnProjector
  nameWithType: ColumnProjector
- uid: Inflatable.LinqExpression.Select.ColumnProjector.#ctor
  name: ColumnProjector()
  href: api/Inflatable.LinqExpression.Select.ColumnProjector.html#Inflatable_LinqExpression_Select_ColumnProjector__ctor
  commentId: M:Inflatable.LinqExpression.Select.ColumnProjector.#ctor
  name.vb: New()
  fullName: Inflatable.LinqExpression.Select.ColumnProjector.ColumnProjector()
  fullName.vb: Inflatable.LinqExpression.Select.ColumnProjector.New()
  nameWithType: ColumnProjector.ColumnProjector()
  nameWithType.vb: ColumnProjector.New()
- uid: Inflatable.LinqExpression.Select.ColumnProjector.#ctor*
  name: ColumnProjector
  href: api/Inflatable.LinqExpression.Select.ColumnProjector.html#Inflatable_LinqExpression_Select_ColumnProjector__ctor_
  commentId: Overload:Inflatable.LinqExpression.Select.ColumnProjector.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.LinqExpression.Select.ColumnProjector.ColumnProjector
  fullName.vb: Inflatable.LinqExpression.Select.ColumnProjector.New
  nameWithType: ColumnProjector.ColumnProjector
  nameWithType.vb: ColumnProjector.New
- uid: Inflatable.LinqExpression.Select.ColumnProjector.ProjectColumns(System.Linq.Expressions.Expression)
  name: ProjectColumns(Expression)
  href: api/Inflatable.LinqExpression.Select.ColumnProjector.html#Inflatable_LinqExpression_Select_ColumnProjector_ProjectColumns_System_Linq_Expressions_Expression_
  commentId: M:Inflatable.LinqExpression.Select.ColumnProjector.ProjectColumns(System.Linq.Expressions.Expression)
  fullName: Inflatable.LinqExpression.Select.ColumnProjector.ProjectColumns(System.Linq.Expressions.Expression)
  nameWithType: ColumnProjector.ProjectColumns(Expression)
- uid: Inflatable.LinqExpression.Select.ColumnProjector.ProjectColumns*
  name: ProjectColumns
  href: api/Inflatable.LinqExpression.Select.ColumnProjector.html#Inflatable_LinqExpression_Select_ColumnProjector_ProjectColumns_
  commentId: Overload:Inflatable.LinqExpression.Select.ColumnProjector.ProjectColumns
  isSpec: "True"
  fullName: Inflatable.LinqExpression.Select.ColumnProjector.ProjectColumns
  nameWithType: ColumnProjector.ProjectColumns
- uid: Inflatable.LinqExpression.Select.ColumnProjector.VisitMember(System.Linq.Expressions.MemberExpression)
  name: VisitMember(MemberExpression)
  href: api/Inflatable.LinqExpression.Select.ColumnProjector.html#Inflatable_LinqExpression_Select_ColumnProjector_VisitMember_System_Linq_Expressions_MemberExpression_
  commentId: M:Inflatable.LinqExpression.Select.ColumnProjector.VisitMember(System.Linq.Expressions.MemberExpression)
  fullName: Inflatable.LinqExpression.Select.ColumnProjector.VisitMember(System.Linq.Expressions.MemberExpression)
  nameWithType: ColumnProjector.VisitMember(MemberExpression)
- uid: Inflatable.LinqExpression.Select.ColumnProjector.VisitMember*
  name: VisitMember
  href: api/Inflatable.LinqExpression.Select.ColumnProjector.html#Inflatable_LinqExpression_Select_ColumnProjector_VisitMember_
  commentId: Overload:Inflatable.LinqExpression.Select.ColumnProjector.VisitMember
  isSpec: "True"
  fullName: Inflatable.LinqExpression.Select.ColumnProjector.VisitMember
  nameWithType: ColumnProjector.VisitMember
- uid: Inflatable.LinqExpression.WhereClauses
  name: Inflatable.LinqExpression.WhereClauses
  href: api/Inflatable.LinqExpression.WhereClauses.html
  commentId: N:Inflatable.LinqExpression.WhereClauses
  fullName: Inflatable.LinqExpression.WhereClauses
  nameWithType: Inflatable.LinqExpression.WhereClauses
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator
  name: BinaryOperator
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html
  commentId: T:Inflatable.LinqExpression.WhereClauses.BinaryOperator
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator
  nameWithType: BinaryOperator
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.#ctor(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator,Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator,System.Linq.Expressions.ExpressionType)
  name: BinaryOperator(IOperator, IOperator, ExpressionType)
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator__ctor_Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_System_Linq_Expressions_ExpressionType_
  commentId: M:Inflatable.LinqExpression.WhereClauses.BinaryOperator.#ctor(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator,Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator,System.Linq.Expressions.ExpressionType)
  name.vb: New(IOperator, IOperator, ExpressionType)
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.BinaryOperator(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator, Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator, System.Linq.Expressions.ExpressionType)
  fullName.vb: Inflatable.LinqExpression.WhereClauses.BinaryOperator.New(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator, Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator, System.Linq.Expressions.ExpressionType)
  nameWithType: BinaryOperator.BinaryOperator(IOperator, IOperator, ExpressionType)
  nameWithType.vb: BinaryOperator.New(IOperator, IOperator, ExpressionType)
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.#ctor*
  name: BinaryOperator
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator__ctor_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.BinaryOperator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.BinaryOperator
  fullName.vb: Inflatable.LinqExpression.WhereClauses.BinaryOperator.New
  nameWithType: BinaryOperator.BinaryOperator
  nameWithType.vb: BinaryOperator.New
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Copy
  name: Copy()
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_Copy
  commentId: M:Inflatable.LinqExpression.WhereClauses.BinaryOperator.Copy
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Copy()
  nameWithType: BinaryOperator.Copy()
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Copy*
  name: Copy
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_Copy_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.BinaryOperator.Copy
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Copy
  nameWithType: BinaryOperator.Copy
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.GetParameters
  name: GetParameters()
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_GetParameters
  commentId: M:Inflatable.LinqExpression.WhereClauses.BinaryOperator.GetParameters
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.GetParameters()
  nameWithType: BinaryOperator.GetParameters()
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.GetParameters*
  name: GetParameters
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_GetParameters_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.BinaryOperator.GetParameters
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.GetParameters
  nameWithType: BinaryOperator.GetParameters
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.IsNull
  name: IsNull
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_IsNull
  commentId: P:Inflatable.LinqExpression.WhereClauses.BinaryOperator.IsNull
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.IsNull
  nameWithType: BinaryOperator.IsNull
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.IsNull*
  name: IsNull
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_IsNull_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.BinaryOperator.IsNull
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.IsNull
  nameWithType: BinaryOperator.IsNull
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Left
  name: Left
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_Left
  commentId: P:Inflatable.LinqExpression.WhereClauses.BinaryOperator.Left
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Left
  nameWithType: BinaryOperator.Left
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Left*
  name: Left
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_Left_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.BinaryOperator.Left
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Left
  nameWithType: BinaryOperator.Left
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.LogicallyNegate
  name: LogicallyNegate()
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_LogicallyNegate
  commentId: M:Inflatable.LinqExpression.WhereClauses.BinaryOperator.LogicallyNegate
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.LogicallyNegate()
  nameWithType: BinaryOperator.LogicallyNegate()
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.LogicallyNegate*
  name: LogicallyNegate
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_LogicallyNegate_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.BinaryOperator.LogicallyNegate
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.LogicallyNegate
  nameWithType: BinaryOperator.LogicallyNegate
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Operator
  name: Operator
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_Operator
  commentId: P:Inflatable.LinqExpression.WhereClauses.BinaryOperator.Operator
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Operator
  nameWithType: BinaryOperator.Operator
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Operator*
  name: Operator
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_Operator_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.BinaryOperator.Operator
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Operator
  nameWithType: BinaryOperator.Operator
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Optimize(Inflatable.ClassMapper.IMappingSource)
  name: Optimize(IMappingSource)
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_Optimize_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.LinqExpression.WhereClauses.BinaryOperator.Optimize(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Optimize(Inflatable.ClassMapper.IMappingSource)
  nameWithType: BinaryOperator.Optimize(IMappingSource)
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Optimize*
  name: Optimize
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_Optimize_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.BinaryOperator.Optimize
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Optimize
  nameWithType: BinaryOperator.Optimize
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Parent
  name: Parent
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_Parent
  commentId: P:Inflatable.LinqExpression.WhereClauses.BinaryOperator.Parent
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Parent
  nameWithType: BinaryOperator.Parent
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Parent*
  name: Parent
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_Parent_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.BinaryOperator.Parent
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Parent
  nameWithType: BinaryOperator.Parent
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Right
  name: Right
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_Right
  commentId: P:Inflatable.LinqExpression.WhereClauses.BinaryOperator.Right
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Right
  nameWithType: BinaryOperator.Right
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Right*
  name: Right
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_Right_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.BinaryOperator.Right
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.Right
  nameWithType: BinaryOperator.Right
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.SetColumnNames(Inflatable.ClassMapper.IMappingSource,Inflatable.Interfaces.IMapping)
  name: SetColumnNames(IMappingSource, IMapping)
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_SetColumnNames_Inflatable_ClassMapper_IMappingSource_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.LinqExpression.WhereClauses.BinaryOperator.SetColumnNames(Inflatable.ClassMapper.IMappingSource,Inflatable.Interfaces.IMapping)
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.SetColumnNames(Inflatable.ClassMapper.IMappingSource, Inflatable.Interfaces.IMapping)
  nameWithType: BinaryOperator.SetColumnNames(IMappingSource, IMapping)
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.SetColumnNames*
  name: SetColumnNames
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_SetColumnNames_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.BinaryOperator.SetColumnNames
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.SetColumnNames
  nameWithType: BinaryOperator.SetColumnNames
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.ToString
  name: ToString()
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_ToString
  commentId: M:Inflatable.LinqExpression.WhereClauses.BinaryOperator.ToString
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.ToString()
  nameWithType: BinaryOperator.ToString()
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.ToString*
  name: ToString
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_ToString_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.BinaryOperator.ToString
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.ToString
  nameWithType: BinaryOperator.ToString
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.TypeCode
  name: TypeCode
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_TypeCode
  commentId: P:Inflatable.LinqExpression.WhereClauses.BinaryOperator.TypeCode
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.TypeCode
  nameWithType: BinaryOperator.TypeCode
- uid: Inflatable.LinqExpression.WhereClauses.BinaryOperator.TypeCode*
  name: TypeCode
  href: api/Inflatable.LinqExpression.WhereClauses.BinaryOperator.html#Inflatable_LinqExpression_WhereClauses_BinaryOperator_TypeCode_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.BinaryOperator.TypeCode
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.BinaryOperator.TypeCode
  nameWithType: BinaryOperator.TypeCode
- uid: Inflatable.LinqExpression.WhereClauses.Constant
  name: Constant
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html
  commentId: T:Inflatable.LinqExpression.WhereClauses.Constant
  fullName: Inflatable.LinqExpression.WhereClauses.Constant
  nameWithType: Constant
- uid: Inflatable.LinqExpression.WhereClauses.Constant.#ctor(System.Object,System.Int32)
  name: Constant(object, int)
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant__ctor_System_Object_System_Int32_
  commentId: M:Inflatable.LinqExpression.WhereClauses.Constant.#ctor(System.Object,System.Int32)
  name.vb: New(Object, Integer)
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.Constant(object, int)
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Constant.New(Object, Integer)
  nameWithType: Constant.Constant(object, int)
  nameWithType.vb: Constant.New(Object, Integer)
- uid: Inflatable.LinqExpression.WhereClauses.Constant.#ctor*
  name: Constant
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant__ctor_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Constant.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.Constant
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Constant.New
  nameWithType: Constant.Constant
  nameWithType.vb: Constant.New
- uid: Inflatable.LinqExpression.WhereClauses.Constant.Copy
  name: Copy()
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_Copy
  commentId: M:Inflatable.LinqExpression.WhereClauses.Constant.Copy
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.Copy()
  nameWithType: Constant.Copy()
- uid: Inflatable.LinqExpression.WhereClauses.Constant.Copy*
  name: Copy
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_Copy_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Constant.Copy
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.Copy
  nameWithType: Constant.Copy
- uid: Inflatable.LinqExpression.WhereClauses.Constant.Count
  name: Count
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_Count
  commentId: P:Inflatable.LinqExpression.WhereClauses.Constant.Count
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.Count
  nameWithType: Constant.Count
- uid: Inflatable.LinqExpression.WhereClauses.Constant.Count*
  name: Count
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_Count_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Constant.Count
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.Count
  nameWithType: Constant.Count
- uid: Inflatable.LinqExpression.WhereClauses.Constant.GetParameters
  name: GetParameters()
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_GetParameters
  commentId: M:Inflatable.LinqExpression.WhereClauses.Constant.GetParameters
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.GetParameters()
  nameWithType: Constant.GetParameters()
- uid: Inflatable.LinqExpression.WhereClauses.Constant.GetParameters*
  name: GetParameters
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_GetParameters_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Constant.GetParameters
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.GetParameters
  nameWithType: Constant.GetParameters
- uid: Inflatable.LinqExpression.WhereClauses.Constant.IsNull
  name: IsNull
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_IsNull
  commentId: P:Inflatable.LinqExpression.WhereClauses.Constant.IsNull
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.IsNull
  nameWithType: Constant.IsNull
- uid: Inflatable.LinqExpression.WhereClauses.Constant.IsNull*
  name: IsNull
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_IsNull_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Constant.IsNull
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.IsNull
  nameWithType: Constant.IsNull
- uid: Inflatable.LinqExpression.WhereClauses.Constant.LogicallyNegate
  name: LogicallyNegate()
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_LogicallyNegate
  commentId: M:Inflatable.LinqExpression.WhereClauses.Constant.LogicallyNegate
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.LogicallyNegate()
  nameWithType: Constant.LogicallyNegate()
- uid: Inflatable.LinqExpression.WhereClauses.Constant.LogicallyNegate*
  name: LogicallyNegate
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_LogicallyNegate_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Constant.LogicallyNegate
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.LogicallyNegate
  nameWithType: Constant.LogicallyNegate
- uid: Inflatable.LinqExpression.WhereClauses.Constant.Optimize(Inflatable.ClassMapper.IMappingSource)
  name: Optimize(IMappingSource)
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_Optimize_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.LinqExpression.WhereClauses.Constant.Optimize(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.Optimize(Inflatable.ClassMapper.IMappingSource)
  nameWithType: Constant.Optimize(IMappingSource)
- uid: Inflatable.LinqExpression.WhereClauses.Constant.Optimize*
  name: Optimize
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_Optimize_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Constant.Optimize
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.Optimize
  nameWithType: Constant.Optimize
- uid: Inflatable.LinqExpression.WhereClauses.Constant.Parent
  name: Parent
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_Parent
  commentId: P:Inflatable.LinqExpression.WhereClauses.Constant.Parent
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.Parent
  nameWithType: Constant.Parent
- uid: Inflatable.LinqExpression.WhereClauses.Constant.Parent*
  name: Parent
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_Parent_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Constant.Parent
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.Parent
  nameWithType: Constant.Parent
- uid: Inflatable.LinqExpression.WhereClauses.Constant.SetColumnNames(Inflatable.ClassMapper.IMappingSource,Inflatable.Interfaces.IMapping)
  name: SetColumnNames(IMappingSource, IMapping)
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_SetColumnNames_Inflatable_ClassMapper_IMappingSource_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.LinqExpression.WhereClauses.Constant.SetColumnNames(Inflatable.ClassMapper.IMappingSource,Inflatable.Interfaces.IMapping)
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.SetColumnNames(Inflatable.ClassMapper.IMappingSource, Inflatable.Interfaces.IMapping)
  nameWithType: Constant.SetColumnNames(IMappingSource, IMapping)
- uid: Inflatable.LinqExpression.WhereClauses.Constant.SetColumnNames*
  name: SetColumnNames
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_SetColumnNames_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Constant.SetColumnNames
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.SetColumnNames
  nameWithType: Constant.SetColumnNames
- uid: Inflatable.LinqExpression.WhereClauses.Constant.ToString
  name: ToString()
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_ToString
  commentId: M:Inflatable.LinqExpression.WhereClauses.Constant.ToString
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.ToString()
  nameWithType: Constant.ToString()
- uid: Inflatable.LinqExpression.WhereClauses.Constant.ToString*
  name: ToString
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_ToString_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Constant.ToString
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.ToString
  nameWithType: Constant.ToString
- uid: Inflatable.LinqExpression.WhereClauses.Constant.TypeCode
  name: TypeCode
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_TypeCode
  commentId: P:Inflatable.LinqExpression.WhereClauses.Constant.TypeCode
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.TypeCode
  nameWithType: Constant.TypeCode
- uid: Inflatable.LinqExpression.WhereClauses.Constant.TypeCode*
  name: TypeCode
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_TypeCode_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Constant.TypeCode
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.TypeCode
  nameWithType: Constant.TypeCode
- uid: Inflatable.LinqExpression.WhereClauses.Constant.Value
  name: Value
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_Value
  commentId: P:Inflatable.LinqExpression.WhereClauses.Constant.Value
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.Value
  nameWithType: Constant.Value
- uid: Inflatable.LinqExpression.WhereClauses.Constant.Value*
  name: Value
  href: api/Inflatable.LinqExpression.WhereClauses.Constant.html#Inflatable_LinqExpression_WhereClauses_Constant_Value_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Constant.Value
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Constant.Value
  nameWithType: Constant.Value
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause
  name: EmptyClause
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html
  commentId: T:Inflatable.LinqExpression.WhereClauses.EmptyClause
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause
  nameWithType: EmptyClause
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.#ctor
  name: EmptyClause()
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause__ctor
  commentId: M:Inflatable.LinqExpression.WhereClauses.EmptyClause.#ctor
  name.vb: New()
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.EmptyClause()
  fullName.vb: Inflatable.LinqExpression.WhereClauses.EmptyClause.New()
  nameWithType: EmptyClause.EmptyClause()
  nameWithType.vb: EmptyClause.New()
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.#ctor*
  name: EmptyClause
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause__ctor_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.EmptyClause.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.EmptyClause
  fullName.vb: Inflatable.LinqExpression.WhereClauses.EmptyClause.New
  nameWithType: EmptyClause.EmptyClause
  nameWithType.vb: EmptyClause.New
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.Copy
  name: Copy()
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause_Copy
  commentId: M:Inflatable.LinqExpression.WhereClauses.EmptyClause.Copy
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.Copy()
  nameWithType: EmptyClause.Copy()
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.Copy*
  name: Copy
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause_Copy_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.EmptyClause.Copy
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.Copy
  nameWithType: EmptyClause.Copy
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.GetParameters
  name: GetParameters()
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause_GetParameters
  commentId: M:Inflatable.LinqExpression.WhereClauses.EmptyClause.GetParameters
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.GetParameters()
  nameWithType: EmptyClause.GetParameters()
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.GetParameters*
  name: GetParameters
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause_GetParameters_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.EmptyClause.GetParameters
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.GetParameters
  nameWithType: EmptyClause.GetParameters
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.IsNull
  name: IsNull
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause_IsNull
  commentId: P:Inflatable.LinqExpression.WhereClauses.EmptyClause.IsNull
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.IsNull
  nameWithType: EmptyClause.IsNull
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.IsNull*
  name: IsNull
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause_IsNull_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.EmptyClause.IsNull
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.IsNull
  nameWithType: EmptyClause.IsNull
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.LogicallyNegate
  name: LogicallyNegate()
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause_LogicallyNegate
  commentId: M:Inflatable.LinqExpression.WhereClauses.EmptyClause.LogicallyNegate
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.LogicallyNegate()
  nameWithType: EmptyClause.LogicallyNegate()
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.LogicallyNegate*
  name: LogicallyNegate
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause_LogicallyNegate_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.EmptyClause.LogicallyNegate
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.LogicallyNegate
  nameWithType: EmptyClause.LogicallyNegate
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.Optimize(Inflatable.ClassMapper.IMappingSource)
  name: Optimize(IMappingSource)
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause_Optimize_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.LinqExpression.WhereClauses.EmptyClause.Optimize(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.Optimize(Inflatable.ClassMapper.IMappingSource)
  nameWithType: EmptyClause.Optimize(IMappingSource)
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.Optimize*
  name: Optimize
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause_Optimize_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.EmptyClause.Optimize
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.Optimize
  nameWithType: EmptyClause.Optimize
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.Parent
  name: Parent
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause_Parent
  commentId: P:Inflatable.LinqExpression.WhereClauses.EmptyClause.Parent
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.Parent
  nameWithType: EmptyClause.Parent
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.Parent*
  name: Parent
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause_Parent_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.EmptyClause.Parent
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.Parent
  nameWithType: EmptyClause.Parent
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.SetColumnNames(Inflatable.ClassMapper.IMappingSource,Inflatable.Interfaces.IMapping)
  name: SetColumnNames(IMappingSource, IMapping)
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause_SetColumnNames_Inflatable_ClassMapper_IMappingSource_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.LinqExpression.WhereClauses.EmptyClause.SetColumnNames(Inflatable.ClassMapper.IMappingSource,Inflatable.Interfaces.IMapping)
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.SetColumnNames(Inflatable.ClassMapper.IMappingSource, Inflatable.Interfaces.IMapping)
  nameWithType: EmptyClause.SetColumnNames(IMappingSource, IMapping)
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.SetColumnNames*
  name: SetColumnNames
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause_SetColumnNames_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.EmptyClause.SetColumnNames
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.SetColumnNames
  nameWithType: EmptyClause.SetColumnNames
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.ToString
  name: ToString()
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause_ToString
  commentId: M:Inflatable.LinqExpression.WhereClauses.EmptyClause.ToString
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.ToString()
  nameWithType: EmptyClause.ToString()
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.ToString*
  name: ToString
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause_ToString_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.EmptyClause.ToString
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.ToString
  nameWithType: EmptyClause.ToString
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.TypeCode
  name: TypeCode
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause_TypeCode
  commentId: P:Inflatable.LinqExpression.WhereClauses.EmptyClause.TypeCode
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.TypeCode
  nameWithType: EmptyClause.TypeCode
- uid: Inflatable.LinqExpression.WhereClauses.EmptyClause.TypeCode*
  name: TypeCode
  href: api/Inflatable.LinqExpression.WhereClauses.EmptyClause.html#Inflatable_LinqExpression_WhereClauses_EmptyClause_TypeCode_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.EmptyClause.TypeCode
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.EmptyClause.TypeCode
  nameWithType: EmptyClause.TypeCode
- uid: Inflatable.LinqExpression.WhereClauses.Interfaces
  name: Inflatable.LinqExpression.WhereClauses.Interfaces
  href: api/Inflatable.LinqExpression.WhereClauses.Interfaces.html
  commentId: N:Inflatable.LinqExpression.WhereClauses.Interfaces
  fullName: Inflatable.LinqExpression.WhereClauses.Interfaces
  nameWithType: Inflatable.LinqExpression.WhereClauses.Interfaces
- uid: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator
  name: IOperator
  href: api/Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.html
  commentId: T:Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator
  fullName: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator
  nameWithType: IOperator
- uid: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.Copy
  name: Copy()
  href: api/Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.html#Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_Copy
  commentId: M:Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.Copy
  fullName: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.Copy()
  nameWithType: IOperator.Copy()
- uid: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.Copy*
  name: Copy
  href: api/Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.html#Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_Copy_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.Copy
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.Copy
  nameWithType: IOperator.Copy
- uid: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.GetParameters
  name: GetParameters()
  href: api/Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.html#Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_GetParameters
  commentId: M:Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.GetParameters
  fullName: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.GetParameters()
  nameWithType: IOperator.GetParameters()
- uid: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.GetParameters*
  name: GetParameters
  href: api/Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.html#Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_GetParameters_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.GetParameters
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.GetParameters
  nameWithType: IOperator.GetParameters
- uid: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.IsNull
  name: IsNull
  href: api/Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.html#Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_IsNull
  commentId: P:Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.IsNull
  fullName: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.IsNull
  nameWithType: IOperator.IsNull
- uid: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.IsNull*
  name: IsNull
  href: api/Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.html#Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_IsNull_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.IsNull
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.IsNull
  nameWithType: IOperator.IsNull
- uid: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.LogicallyNegate
  name: LogicallyNegate()
  href: api/Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.html#Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_LogicallyNegate
  commentId: M:Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.LogicallyNegate
  fullName: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.LogicallyNegate()
  nameWithType: IOperator.LogicallyNegate()
- uid: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.LogicallyNegate*
  name: LogicallyNegate
  href: api/Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.html#Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_LogicallyNegate_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.LogicallyNegate
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.LogicallyNegate
  nameWithType: IOperator.LogicallyNegate
- uid: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.Optimize(Inflatable.ClassMapper.IMappingSource)
  name: Optimize(IMappingSource)
  href: api/Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.html#Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_Optimize_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.Optimize(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.Optimize(Inflatable.ClassMapper.IMappingSource)
  nameWithType: IOperator.Optimize(IMappingSource)
- uid: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.Optimize*
  name: Optimize
  href: api/Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.html#Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_Optimize_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.Optimize
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.Optimize
  nameWithType: IOperator.Optimize
- uid: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.Parent
  name: Parent
  href: api/Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.html#Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_Parent
  commentId: P:Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.Parent
  fullName: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.Parent
  nameWithType: IOperator.Parent
- uid: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.Parent*
  name: Parent
  href: api/Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.html#Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_Parent_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.Parent
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.Parent
  nameWithType: IOperator.Parent
- uid: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.SetColumnNames(Inflatable.ClassMapper.IMappingSource,Inflatable.Interfaces.IMapping)
  name: SetColumnNames(IMappingSource, IMapping)
  href: api/Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.html#Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_SetColumnNames_Inflatable_ClassMapper_IMappingSource_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.SetColumnNames(Inflatable.ClassMapper.IMappingSource,Inflatable.Interfaces.IMapping)
  fullName: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.SetColumnNames(Inflatable.ClassMapper.IMappingSource, Inflatable.Interfaces.IMapping)
  nameWithType: IOperator.SetColumnNames(IMappingSource, IMapping)
- uid: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.SetColumnNames*
  name: SetColumnNames
  href: api/Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.html#Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_SetColumnNames_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.SetColumnNames
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.SetColumnNames
  nameWithType: IOperator.SetColumnNames
- uid: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.TypeCode
  name: TypeCode
  href: api/Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.html#Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_TypeCode
  commentId: P:Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.TypeCode
  fullName: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.TypeCode
  nameWithType: IOperator.TypeCode
- uid: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.TypeCode*
  name: TypeCode
  href: api/Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.html#Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_TypeCode_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.TypeCode
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator.TypeCode
  nameWithType: IOperator.TypeCode
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator
  name: LikeOperator
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html
  commentId: T:Inflatable.LinqExpression.WhereClauses.LikeOperator
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator
  nameWithType: LikeOperator
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.#ctor(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator,Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator,System.String)
  name: LikeOperator(IOperator, IOperator, string)
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator__ctor_Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_System_String_
  commentId: M:Inflatable.LinqExpression.WhereClauses.LikeOperator.#ctor(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator,Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator,System.String)
  name.vb: New(IOperator, IOperator, String)
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.LikeOperator(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator, Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator, string)
  fullName.vb: Inflatable.LinqExpression.WhereClauses.LikeOperator.New(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator, Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator, String)
  nameWithType: LikeOperator.LikeOperator(IOperator, IOperator, string)
  nameWithType.vb: LikeOperator.New(IOperator, IOperator, String)
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.#ctor*
  name: LikeOperator
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator__ctor_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.LikeOperator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.LikeOperator
  fullName.vb: Inflatable.LinqExpression.WhereClauses.LikeOperator.New
  nameWithType: LikeOperator.LikeOperator
  nameWithType.vb: LikeOperator.New
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.Copy
  name: Copy()
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_Copy
  commentId: M:Inflatable.LinqExpression.WhereClauses.LikeOperator.Copy
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.Copy()
  nameWithType: LikeOperator.Copy()
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.Copy*
  name: Copy
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_Copy_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.LikeOperator.Copy
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.Copy
  nameWithType: LikeOperator.Copy
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.GetParameters
  name: GetParameters()
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_GetParameters
  commentId: M:Inflatable.LinqExpression.WhereClauses.LikeOperator.GetParameters
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.GetParameters()
  nameWithType: LikeOperator.GetParameters()
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.GetParameters*
  name: GetParameters
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_GetParameters_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.LikeOperator.GetParameters
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.GetParameters
  nameWithType: LikeOperator.GetParameters
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.IsNull
  name: IsNull
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_IsNull
  commentId: P:Inflatable.LinqExpression.WhereClauses.LikeOperator.IsNull
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.IsNull
  nameWithType: LikeOperator.IsNull
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.IsNull*
  name: IsNull
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_IsNull_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.LikeOperator.IsNull
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.IsNull
  nameWithType: LikeOperator.IsNull
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.LogicallyNegate
  name: LogicallyNegate()
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_LogicallyNegate
  commentId: M:Inflatable.LinqExpression.WhereClauses.LikeOperator.LogicallyNegate
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.LogicallyNegate()
  nameWithType: LikeOperator.LogicallyNegate()
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.LogicallyNegate*
  name: LogicallyNegate
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_LogicallyNegate_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.LikeOperator.LogicallyNegate
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.LogicallyNegate
  nameWithType: LikeOperator.LogicallyNegate
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.MethodType
  name: MethodType
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_MethodType
  commentId: P:Inflatable.LinqExpression.WhereClauses.LikeOperator.MethodType
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.MethodType
  nameWithType: LikeOperator.MethodType
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.MethodType*
  name: MethodType
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_MethodType_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.LikeOperator.MethodType
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.MethodType
  nameWithType: LikeOperator.MethodType
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.Optimize(Inflatable.ClassMapper.IMappingSource)
  name: Optimize(IMappingSource)
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_Optimize_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.LinqExpression.WhereClauses.LikeOperator.Optimize(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.Optimize(Inflatable.ClassMapper.IMappingSource)
  nameWithType: LikeOperator.Optimize(IMappingSource)
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.Optimize*
  name: Optimize
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_Optimize_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.LikeOperator.Optimize
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.Optimize
  nameWithType: LikeOperator.Optimize
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.Parent
  name: Parent
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_Parent
  commentId: P:Inflatable.LinqExpression.WhereClauses.LikeOperator.Parent
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.Parent
  nameWithType: LikeOperator.Parent
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.Parent*
  name: Parent
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_Parent_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.LikeOperator.Parent
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.Parent
  nameWithType: LikeOperator.Parent
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.Property
  name: Property
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_Property
  commentId: P:Inflatable.LinqExpression.WhereClauses.LikeOperator.Property
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.Property
  nameWithType: LikeOperator.Property
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.Property*
  name: Property
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_Property_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.LikeOperator.Property
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.Property
  nameWithType: LikeOperator.Property
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.SetColumnNames(Inflatable.ClassMapper.IMappingSource,Inflatable.Interfaces.IMapping)
  name: SetColumnNames(IMappingSource, IMapping)
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_SetColumnNames_Inflatable_ClassMapper_IMappingSource_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.LinqExpression.WhereClauses.LikeOperator.SetColumnNames(Inflatable.ClassMapper.IMappingSource,Inflatable.Interfaces.IMapping)
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.SetColumnNames(Inflatable.ClassMapper.IMappingSource, Inflatable.Interfaces.IMapping)
  nameWithType: LikeOperator.SetColumnNames(IMappingSource, IMapping)
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.SetColumnNames*
  name: SetColumnNames
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_SetColumnNames_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.LikeOperator.SetColumnNames
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.SetColumnNames
  nameWithType: LikeOperator.SetColumnNames
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.ToString
  name: ToString()
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_ToString
  commentId: M:Inflatable.LinqExpression.WhereClauses.LikeOperator.ToString
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.ToString()
  nameWithType: LikeOperator.ToString()
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.ToString*
  name: ToString
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_ToString_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.LikeOperator.ToString
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.ToString
  nameWithType: LikeOperator.ToString
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.TypeCode
  name: TypeCode
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_TypeCode
  commentId: P:Inflatable.LinqExpression.WhereClauses.LikeOperator.TypeCode
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.TypeCode
  nameWithType: LikeOperator.TypeCode
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.TypeCode*
  name: TypeCode
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_TypeCode_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.LikeOperator.TypeCode
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.TypeCode
  nameWithType: LikeOperator.TypeCode
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.Value
  name: Value
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_Value
  commentId: P:Inflatable.LinqExpression.WhereClauses.LikeOperator.Value
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.Value
  nameWithType: LikeOperator.Value
- uid: Inflatable.LinqExpression.WhereClauses.LikeOperator.Value*
  name: Value
  href: api/Inflatable.LinqExpression.WhereClauses.LikeOperator.html#Inflatable_LinqExpression_WhereClauses_LikeOperator_Value_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.LikeOperator.Value
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.LikeOperator.Value
  nameWithType: LikeOperator.Value
- uid: Inflatable.LinqExpression.WhereClauses.Property`1
  name: Property<TObject>
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html
  commentId: T:Inflatable.LinqExpression.WhereClauses.Property`1
  name.vb: Property(Of TObject)
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject)
  nameWithType: Property<TObject>
  nameWithType.vb: Property(Of TObject)
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.#ctor(System.Reflection.PropertyInfo,System.Int32)
  name: Property(PropertyInfo, int)
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1__ctor_System_Reflection_PropertyInfo_System_Int32_
  commentId: M:Inflatable.LinqExpression.WhereClauses.Property`1.#ctor(System.Reflection.PropertyInfo,System.Int32)
  name.vb: New(PropertyInfo, Integer)
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.Property(System.Reflection.PropertyInfo, int)
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).New(System.Reflection.PropertyInfo, Integer)
  nameWithType: Property<TObject>.Property(PropertyInfo, int)
  nameWithType.vb: Property(Of TObject).New(PropertyInfo, Integer)
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.#ctor*
  name: Property
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1__ctor_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Property`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.Property
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).New
  nameWithType: Property<TObject>.Property
  nameWithType.vb: Property(Of TObject).New
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.Copy
  name: Copy()
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_Copy
  commentId: M:Inflatable.LinqExpression.WhereClauses.Property`1.Copy
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.Copy()
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).Copy()
  nameWithType: Property<TObject>.Copy()
  nameWithType.vb: Property(Of TObject).Copy()
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.Copy*
  name: Copy
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_Copy_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Property`1.Copy
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.Copy
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).Copy
  nameWithType: Property<TObject>.Copy
  nameWithType.vb: Property(Of TObject).Copy
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.Count
  name: Count
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_Count
  commentId: P:Inflatable.LinqExpression.WhereClauses.Property`1.Count
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.Count
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).Count
  nameWithType: Property<TObject>.Count
  nameWithType.vb: Property(Of TObject).Count
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.Count*
  name: Count
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_Count_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Property`1.Count
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.Count
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).Count
  nameWithType: Property<TObject>.Count
  nameWithType.vb: Property(Of TObject).Count
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.GetParameters
  name: GetParameters()
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_GetParameters
  commentId: M:Inflatable.LinqExpression.WhereClauses.Property`1.GetParameters
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.GetParameters()
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).GetParameters()
  nameWithType: Property<TObject>.GetParameters()
  nameWithType.vb: Property(Of TObject).GetParameters()
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.GetParameters*
  name: GetParameters
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_GetParameters_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Property`1.GetParameters
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.GetParameters
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).GetParameters
  nameWithType: Property<TObject>.GetParameters
  nameWithType.vb: Property(Of TObject).GetParameters
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.InternalProperty
  name: InternalProperty
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_InternalProperty
  commentId: P:Inflatable.LinqExpression.WhereClauses.Property`1.InternalProperty
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.InternalProperty
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).InternalProperty
  nameWithType: Property<TObject>.InternalProperty
  nameWithType.vb: Property(Of TObject).InternalProperty
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.InternalProperty*
  name: InternalProperty
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_InternalProperty_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Property`1.InternalProperty
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.InternalProperty
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).InternalProperty
  nameWithType: Property<TObject>.InternalProperty
  nameWithType.vb: Property(Of TObject).InternalProperty
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.IsNull
  name: IsNull
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_IsNull
  commentId: P:Inflatable.LinqExpression.WhereClauses.Property`1.IsNull
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.IsNull
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).IsNull
  nameWithType: Property<TObject>.IsNull
  nameWithType.vb: Property(Of TObject).IsNull
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.IsNull*
  name: IsNull
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_IsNull_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Property`1.IsNull
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.IsNull
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).IsNull
  nameWithType: Property<TObject>.IsNull
  nameWithType.vb: Property(Of TObject).IsNull
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.LogicallyNegate
  name: LogicallyNegate()
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_LogicallyNegate
  commentId: M:Inflatable.LinqExpression.WhereClauses.Property`1.LogicallyNegate
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.LogicallyNegate()
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).LogicallyNegate()
  nameWithType: Property<TObject>.LogicallyNegate()
  nameWithType.vb: Property(Of TObject).LogicallyNegate()
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.LogicallyNegate*
  name: LogicallyNegate
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_LogicallyNegate_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Property`1.LogicallyNegate
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.LogicallyNegate
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).LogicallyNegate
  nameWithType: Property<TObject>.LogicallyNegate
  nameWithType.vb: Property(Of TObject).LogicallyNegate
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.Optimize(Inflatable.ClassMapper.IMappingSource)
  name: Optimize(IMappingSource)
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_Optimize_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.LinqExpression.WhereClauses.Property`1.Optimize(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.Optimize(Inflatable.ClassMapper.IMappingSource)
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).Optimize(Inflatable.ClassMapper.IMappingSource)
  nameWithType: Property<TObject>.Optimize(IMappingSource)
  nameWithType.vb: Property(Of TObject).Optimize(IMappingSource)
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.Optimize*
  name: Optimize
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_Optimize_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Property`1.Optimize
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.Optimize
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).Optimize
  nameWithType: Property<TObject>.Optimize
  nameWithType.vb: Property(Of TObject).Optimize
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.Parent
  name: Parent
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_Parent
  commentId: P:Inflatable.LinqExpression.WhereClauses.Property`1.Parent
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.Parent
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).Parent
  nameWithType: Property<TObject>.Parent
  nameWithType.vb: Property(Of TObject).Parent
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.Parent*
  name: Parent
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_Parent_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Property`1.Parent
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.Parent
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).Parent
  nameWithType: Property<TObject>.Parent
  nameWithType.vb: Property(Of TObject).Parent
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.SetColumnNames(Inflatable.ClassMapper.IMappingSource,Inflatable.Interfaces.IMapping)
  name: SetColumnNames(IMappingSource, IMapping)
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_SetColumnNames_Inflatable_ClassMapper_IMappingSource_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.LinqExpression.WhereClauses.Property`1.SetColumnNames(Inflatable.ClassMapper.IMappingSource,Inflatable.Interfaces.IMapping)
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.SetColumnNames(Inflatable.ClassMapper.IMappingSource, Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).SetColumnNames(Inflatable.ClassMapper.IMappingSource, Inflatable.Interfaces.IMapping)
  nameWithType: Property<TObject>.SetColumnNames(IMappingSource, IMapping)
  nameWithType.vb: Property(Of TObject).SetColumnNames(IMappingSource, IMapping)
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.SetColumnNames*
  name: SetColumnNames
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_SetColumnNames_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Property`1.SetColumnNames
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.SetColumnNames
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).SetColumnNames
  nameWithType: Property<TObject>.SetColumnNames
  nameWithType.vb: Property(Of TObject).SetColumnNames
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.ToString
  name: ToString()
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_ToString
  commentId: M:Inflatable.LinqExpression.WhereClauses.Property`1.ToString
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.ToString()
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).ToString()
  nameWithType: Property<TObject>.ToString()
  nameWithType.vb: Property(Of TObject).ToString()
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.ToString*
  name: ToString
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_ToString_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Property`1.ToString
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.ToString
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).ToString
  nameWithType: Property<TObject>.ToString
  nameWithType.vb: Property(Of TObject).ToString
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.TypeCode
  name: TypeCode
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_TypeCode
  commentId: P:Inflatable.LinqExpression.WhereClauses.Property`1.TypeCode
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.TypeCode
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).TypeCode
  nameWithType: Property<TObject>.TypeCode
  nameWithType.vb: Property(Of TObject).TypeCode
- uid: Inflatable.LinqExpression.WhereClauses.Property`1.TypeCode*
  name: TypeCode
  href: api/Inflatable.LinqExpression.WhereClauses.Property-1.html#Inflatable_LinqExpression_WhereClauses_Property_1_TypeCode_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.Property`1.TypeCode
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.Property<TObject>.TypeCode
  fullName.vb: Inflatable.LinqExpression.WhereClauses.Property(Of TObject).TypeCode
  nameWithType: Property<TObject>.TypeCode
  nameWithType.vb: Property(Of TObject).TypeCode
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator
  name: UnaryOperator
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html
  commentId: T:Inflatable.LinqExpression.WhereClauses.UnaryOperator
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator
  nameWithType: UnaryOperator
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.#ctor(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator,System.Linq.Expressions.ExpressionType,System.Type)
  name: UnaryOperator(IOperator, ExpressionType, Type)
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator__ctor_Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_System_Linq_Expressions_ExpressionType_System_Type_
  commentId: M:Inflatable.LinqExpression.WhereClauses.UnaryOperator.#ctor(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator,System.Linq.Expressions.ExpressionType,System.Type)
  name.vb: New(IOperator, ExpressionType, Type)
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.UnaryOperator(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator, System.Linq.Expressions.ExpressionType, System.Type)
  fullName.vb: Inflatable.LinqExpression.WhereClauses.UnaryOperator.New(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator, System.Linq.Expressions.ExpressionType, System.Type)
  nameWithType: UnaryOperator.UnaryOperator(IOperator, ExpressionType, Type)
  nameWithType.vb: UnaryOperator.New(IOperator, ExpressionType, Type)
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.#ctor*
  name: UnaryOperator
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator__ctor_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.UnaryOperator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.UnaryOperator
  fullName.vb: Inflatable.LinqExpression.WhereClauses.UnaryOperator.New
  nameWithType: UnaryOperator.UnaryOperator
  nameWithType.vb: UnaryOperator.New
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.Copy
  name: Copy()
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_Copy
  commentId: M:Inflatable.LinqExpression.WhereClauses.UnaryOperator.Copy
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.Copy()
  nameWithType: UnaryOperator.Copy()
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.Copy*
  name: Copy
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_Copy_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.UnaryOperator.Copy
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.Copy
  nameWithType: UnaryOperator.Copy
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.GetParameters
  name: GetParameters()
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_GetParameters
  commentId: M:Inflatable.LinqExpression.WhereClauses.UnaryOperator.GetParameters
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.GetParameters()
  nameWithType: UnaryOperator.GetParameters()
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.GetParameters*
  name: GetParameters
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_GetParameters_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.UnaryOperator.GetParameters
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.GetParameters
  nameWithType: UnaryOperator.GetParameters
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.InternalOperator
  name: InternalOperator
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_InternalOperator
  commentId: P:Inflatable.LinqExpression.WhereClauses.UnaryOperator.InternalOperator
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.InternalOperator
  nameWithType: UnaryOperator.InternalOperator
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.InternalOperator*
  name: InternalOperator
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_InternalOperator_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.UnaryOperator.InternalOperator
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.InternalOperator
  nameWithType: UnaryOperator.InternalOperator
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.IsNull
  name: IsNull
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_IsNull
  commentId: P:Inflatable.LinqExpression.WhereClauses.UnaryOperator.IsNull
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.IsNull
  nameWithType: UnaryOperator.IsNull
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.IsNull*
  name: IsNull
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_IsNull_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.UnaryOperator.IsNull
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.IsNull
  nameWithType: UnaryOperator.IsNull
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.LogicallyNegate
  name: LogicallyNegate()
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_LogicallyNegate
  commentId: M:Inflatable.LinqExpression.WhereClauses.UnaryOperator.LogicallyNegate
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.LogicallyNegate()
  nameWithType: UnaryOperator.LogicallyNegate()
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.LogicallyNegate*
  name: LogicallyNegate
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_LogicallyNegate_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.UnaryOperator.LogicallyNegate
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.LogicallyNegate
  nameWithType: UnaryOperator.LogicallyNegate
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.Operator
  name: Operator
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_Operator
  commentId: P:Inflatable.LinqExpression.WhereClauses.UnaryOperator.Operator
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.Operator
  nameWithType: UnaryOperator.Operator
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.Operator*
  name: Operator
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_Operator_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.UnaryOperator.Operator
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.Operator
  nameWithType: UnaryOperator.Operator
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.Optimize(Inflatable.ClassMapper.IMappingSource)
  name: Optimize(IMappingSource)
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_Optimize_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.LinqExpression.WhereClauses.UnaryOperator.Optimize(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.Optimize(Inflatable.ClassMapper.IMappingSource)
  nameWithType: UnaryOperator.Optimize(IMappingSource)
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.Optimize*
  name: Optimize
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_Optimize_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.UnaryOperator.Optimize
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.Optimize
  nameWithType: UnaryOperator.Optimize
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.Parent
  name: Parent
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_Parent
  commentId: P:Inflatable.LinqExpression.WhereClauses.UnaryOperator.Parent
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.Parent
  nameWithType: UnaryOperator.Parent
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.Parent*
  name: Parent
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_Parent_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.UnaryOperator.Parent
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.Parent
  nameWithType: UnaryOperator.Parent
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.SetColumnNames(Inflatable.ClassMapper.IMappingSource,Inflatable.Interfaces.IMapping)
  name: SetColumnNames(IMappingSource, IMapping)
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_SetColumnNames_Inflatable_ClassMapper_IMappingSource_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.LinqExpression.WhereClauses.UnaryOperator.SetColumnNames(Inflatable.ClassMapper.IMappingSource,Inflatable.Interfaces.IMapping)
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.SetColumnNames(Inflatable.ClassMapper.IMappingSource, Inflatable.Interfaces.IMapping)
  nameWithType: UnaryOperator.SetColumnNames(IMappingSource, IMapping)
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.SetColumnNames*
  name: SetColumnNames
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_SetColumnNames_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.UnaryOperator.SetColumnNames
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.SetColumnNames
  nameWithType: UnaryOperator.SetColumnNames
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.ToString
  name: ToString()
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_ToString
  commentId: M:Inflatable.LinqExpression.WhereClauses.UnaryOperator.ToString
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.ToString()
  nameWithType: UnaryOperator.ToString()
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.ToString*
  name: ToString
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_ToString_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.UnaryOperator.ToString
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.ToString
  nameWithType: UnaryOperator.ToString
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.TypeCode
  name: TypeCode
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_TypeCode
  commentId: P:Inflatable.LinqExpression.WhereClauses.UnaryOperator.TypeCode
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.TypeCode
  nameWithType: UnaryOperator.TypeCode
- uid: Inflatable.LinqExpression.WhereClauses.UnaryOperator.TypeCode*
  name: TypeCode
  href: api/Inflatable.LinqExpression.WhereClauses.UnaryOperator.html#Inflatable_LinqExpression_WhereClauses_UnaryOperator_TypeCode_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.UnaryOperator.TypeCode
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.UnaryOperator.TypeCode
  nameWithType: UnaryOperator.TypeCode
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1
  name: WhereClause<TObject>
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html
  commentId: T:Inflatable.LinqExpression.WhereClauses.WhereClause`1
  name.vb: WhereClause(Of TObject)
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject)
  nameWithType: WhereClause<TObject>
  nameWithType.vb: WhereClause(Of TObject)
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.#ctor(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator)
  name: WhereClause(IOperator?)
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1__ctor_Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_
  commentId: M:Inflatable.LinqExpression.WhereClauses.WhereClause`1.#ctor(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator)
  name.vb: New(IOperator)
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.WhereClause(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator?)
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).New(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator)
  nameWithType: WhereClause<TObject>.WhereClause(IOperator?)
  nameWithType.vb: WhereClause(Of TObject).New(IOperator)
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.#ctor*
  name: WhereClause
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1__ctor_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereClause`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.WhereClause
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).New
  nameWithType: WhereClause<TObject>.WhereClause
  nameWithType.vb: WhereClause(Of TObject).New
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.Combine(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator)
  name: Combine(IOperator)
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_Combine_Inflatable_LinqExpression_WhereClauses_Interfaces_IOperator_
  commentId: M:Inflatable.LinqExpression.WhereClauses.WhereClause`1.Combine(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator)
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.Combine(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator)
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).Combine(Inflatable.LinqExpression.WhereClauses.Interfaces.IOperator)
  nameWithType: WhereClause<TObject>.Combine(IOperator)
  nameWithType.vb: WhereClause(Of TObject).Combine(IOperator)
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.Combine*
  name: Combine
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_Combine_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereClause`1.Combine
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.Combine
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).Combine
  nameWithType: WhereClause<TObject>.Combine
  nameWithType.vb: WhereClause(Of TObject).Combine
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.Copy
  name: Copy()
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_Copy
  commentId: M:Inflatable.LinqExpression.WhereClauses.WhereClause`1.Copy
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.Copy()
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).Copy()
  nameWithType: WhereClause<TObject>.Copy()
  nameWithType.vb: WhereClause(Of TObject).Copy()
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.Copy*
  name: Copy
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_Copy_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereClause`1.Copy
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.Copy
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).Copy
  nameWithType: WhereClause<TObject>.Copy
  nameWithType.vb: WhereClause(Of TObject).Copy
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.GetParameters
  name: GetParameters()
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_GetParameters
  commentId: M:Inflatable.LinqExpression.WhereClauses.WhereClause`1.GetParameters
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.GetParameters()
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).GetParameters()
  nameWithType: WhereClause<TObject>.GetParameters()
  nameWithType.vb: WhereClause(Of TObject).GetParameters()
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.GetParameters*
  name: GetParameters
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_GetParameters_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereClause`1.GetParameters
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.GetParameters
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).GetParameters
  nameWithType: WhereClause<TObject>.GetParameters
  nameWithType.vb: WhereClause(Of TObject).GetParameters
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.InternalOperator
  name: InternalOperator
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_InternalOperator
  commentId: P:Inflatable.LinqExpression.WhereClauses.WhereClause`1.InternalOperator
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.InternalOperator
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).InternalOperator
  nameWithType: WhereClause<TObject>.InternalOperator
  nameWithType.vb: WhereClause(Of TObject).InternalOperator
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.InternalOperator*
  name: InternalOperator
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_InternalOperator_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereClause`1.InternalOperator
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.InternalOperator
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).InternalOperator
  nameWithType: WhereClause<TObject>.InternalOperator
  nameWithType.vb: WhereClause(Of TObject).InternalOperator
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.IsNull
  name: IsNull
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_IsNull
  commentId: P:Inflatable.LinqExpression.WhereClauses.WhereClause`1.IsNull
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.IsNull
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).IsNull
  nameWithType: WhereClause<TObject>.IsNull
  nameWithType.vb: WhereClause(Of TObject).IsNull
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.IsNull*
  name: IsNull
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_IsNull_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereClause`1.IsNull
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.IsNull
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).IsNull
  nameWithType: WhereClause<TObject>.IsNull
  nameWithType.vb: WhereClause(Of TObject).IsNull
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.LogicallyNegate
  name: LogicallyNegate()
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_LogicallyNegate
  commentId: M:Inflatable.LinqExpression.WhereClauses.WhereClause`1.LogicallyNegate
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.LogicallyNegate()
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).LogicallyNegate()
  nameWithType: WhereClause<TObject>.LogicallyNegate()
  nameWithType.vb: WhereClause(Of TObject).LogicallyNegate()
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.LogicallyNegate*
  name: LogicallyNegate
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_LogicallyNegate_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereClause`1.LogicallyNegate
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.LogicallyNegate
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).LogicallyNegate
  nameWithType: WhereClause<TObject>.LogicallyNegate
  nameWithType.vb: WhereClause(Of TObject).LogicallyNegate
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.ObjectType
  name: ObjectType
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_ObjectType
  commentId: P:Inflatable.LinqExpression.WhereClauses.WhereClause`1.ObjectType
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.ObjectType
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).ObjectType
  nameWithType: WhereClause<TObject>.ObjectType
  nameWithType.vb: WhereClause(Of TObject).ObjectType
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.ObjectType*
  name: ObjectType
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_ObjectType_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereClause`1.ObjectType
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.ObjectType
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).ObjectType
  nameWithType: WhereClause<TObject>.ObjectType
  nameWithType.vb: WhereClause(Of TObject).ObjectType
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.Optimize(Inflatable.ClassMapper.IMappingSource)
  name: Optimize(IMappingSource)
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_Optimize_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.LinqExpression.WhereClauses.WhereClause`1.Optimize(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.Optimize(Inflatable.ClassMapper.IMappingSource)
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).Optimize(Inflatable.ClassMapper.IMappingSource)
  nameWithType: WhereClause<TObject>.Optimize(IMappingSource)
  nameWithType.vb: WhereClause(Of TObject).Optimize(IMappingSource)
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.Optimize*
  name: Optimize
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_Optimize_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereClause`1.Optimize
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.Optimize
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).Optimize
  nameWithType: WhereClause<TObject>.Optimize
  nameWithType.vb: WhereClause(Of TObject).Optimize
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.Parent
  name: Parent
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_Parent
  commentId: P:Inflatable.LinqExpression.WhereClauses.WhereClause`1.Parent
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.Parent
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).Parent
  nameWithType: WhereClause<TObject>.Parent
  nameWithType.vb: WhereClause(Of TObject).Parent
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.Parent*
  name: Parent
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_Parent_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereClause`1.Parent
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.Parent
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).Parent
  nameWithType: WhereClause<TObject>.Parent
  nameWithType.vb: WhereClause(Of TObject).Parent
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.SetColumnNames(Inflatable.ClassMapper.IMappingSource,Inflatable.Interfaces.IMapping)
  name: SetColumnNames(IMappingSource, IMapping)
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_SetColumnNames_Inflatable_ClassMapper_IMappingSource_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.LinqExpression.WhereClauses.WhereClause`1.SetColumnNames(Inflatable.ClassMapper.IMappingSource,Inflatable.Interfaces.IMapping)
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.SetColumnNames(Inflatable.ClassMapper.IMappingSource, Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).SetColumnNames(Inflatable.ClassMapper.IMappingSource, Inflatable.Interfaces.IMapping)
  nameWithType: WhereClause<TObject>.SetColumnNames(IMappingSource, IMapping)
  nameWithType.vb: WhereClause(Of TObject).SetColumnNames(IMappingSource, IMapping)
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.SetColumnNames*
  name: SetColumnNames
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_SetColumnNames_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereClause`1.SetColumnNames
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.SetColumnNames
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).SetColumnNames
  nameWithType: WhereClause<TObject>.SetColumnNames
  nameWithType.vb: WhereClause(Of TObject).SetColumnNames
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.ToString
  name: ToString()
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_ToString
  commentId: M:Inflatable.LinqExpression.WhereClauses.WhereClause`1.ToString
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.ToString()
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).ToString()
  nameWithType: WhereClause<TObject>.ToString()
  nameWithType.vb: WhereClause(Of TObject).ToString()
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.ToString*
  name: ToString
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_ToString_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereClause`1.ToString
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.ToString
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).ToString
  nameWithType: WhereClause<TObject>.ToString
  nameWithType.vb: WhereClause(Of TObject).ToString
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.TypeCode
  name: TypeCode
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_TypeCode
  commentId: P:Inflatable.LinqExpression.WhereClauses.WhereClause`1.TypeCode
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.TypeCode
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).TypeCode
  nameWithType: WhereClause<TObject>.TypeCode
  nameWithType.vb: WhereClause(Of TObject).TypeCode
- uid: Inflatable.LinqExpression.WhereClauses.WhereClause`1.TypeCode*
  name: TypeCode
  href: api/Inflatable.LinqExpression.WhereClauses.WhereClause-1.html#Inflatable_LinqExpression_WhereClauses_WhereClause_1_TypeCode_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereClause`1.TypeCode
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.WhereClause<TObject>.TypeCode
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereClause(Of TObject).TypeCode
  nameWithType: WhereClause<TObject>.TypeCode
  nameWithType.vb: WhereClause(Of TObject).TypeCode
- uid: Inflatable.LinqExpression.WhereClauses.WhereVisitor`1
  name: WhereVisitor<TObject>
  href: api/Inflatable.LinqExpression.WhereClauses.WhereVisitor-1.html
  commentId: T:Inflatable.LinqExpression.WhereClauses.WhereVisitor`1
  name.vb: WhereVisitor(Of TObject)
  fullName: Inflatable.LinqExpression.WhereClauses.WhereVisitor<TObject>
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereVisitor(Of TObject)
  nameWithType: WhereVisitor<TObject>
  nameWithType.vb: WhereVisitor(Of TObject)
- uid: Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.#ctor(System.Int32)
  name: WhereVisitor(int)
  href: api/Inflatable.LinqExpression.WhereClauses.WhereVisitor-1.html#Inflatable_LinqExpression_WhereClauses_WhereVisitor_1__ctor_System_Int32_
  commentId: M:Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.#ctor(System.Int32)
  name.vb: New(Integer)
  fullName: Inflatable.LinqExpression.WhereClauses.WhereVisitor<TObject>.WhereVisitor(int)
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereVisitor(Of TObject).New(Integer)
  nameWithType: WhereVisitor<TObject>.WhereVisitor(int)
  nameWithType.vb: WhereVisitor(Of TObject).New(Integer)
- uid: Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.#ctor*
  name: WhereVisitor
  href: api/Inflatable.LinqExpression.WhereClauses.WhereVisitor-1.html#Inflatable_LinqExpression_WhereClauses_WhereVisitor_1__ctor_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.LinqExpression.WhereClauses.WhereVisitor<TObject>.WhereVisitor
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereVisitor(Of TObject).New
  nameWithType: WhereVisitor<TObject>.WhereVisitor
  nameWithType.vb: WhereVisitor(Of TObject).New
- uid: Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.Count
  name: Count
  href: api/Inflatable.LinqExpression.WhereClauses.WhereVisitor-1.html#Inflatable_LinqExpression_WhereClauses_WhereVisitor_1_Count
  commentId: P:Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.Count
  fullName: Inflatable.LinqExpression.WhereClauses.WhereVisitor<TObject>.Count
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereVisitor(Of TObject).Count
  nameWithType: WhereVisitor<TObject>.Count
  nameWithType.vb: WhereVisitor(Of TObject).Count
- uid: Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.Count*
  name: Count
  href: api/Inflatable.LinqExpression.WhereClauses.WhereVisitor-1.html#Inflatable_LinqExpression_WhereClauses_WhereVisitor_1_Count_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.Count
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.WhereVisitor<TObject>.Count
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereVisitor(Of TObject).Count
  nameWithType: WhereVisitor<TObject>.Count
  nameWithType.vb: WhereVisitor(Of TObject).Count
- uid: Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitBinary(System.Linq.Expressions.BinaryExpression)
  name: VisitBinary(BinaryExpression)
  href: api/Inflatable.LinqExpression.WhereClauses.WhereVisitor-1.html#Inflatable_LinqExpression_WhereClauses_WhereVisitor_1_VisitBinary_System_Linq_Expressions_BinaryExpression_
  commentId: M:Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitBinary(System.Linq.Expressions.BinaryExpression)
  fullName: Inflatable.LinqExpression.WhereClauses.WhereVisitor<TObject>.VisitBinary(System.Linq.Expressions.BinaryExpression)
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereVisitor(Of TObject).VisitBinary(System.Linq.Expressions.BinaryExpression)
  nameWithType: WhereVisitor<TObject>.VisitBinary(BinaryExpression)
  nameWithType.vb: WhereVisitor(Of TObject).VisitBinary(BinaryExpression)
- uid: Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitBinary*
  name: VisitBinary
  href: api/Inflatable.LinqExpression.WhereClauses.WhereVisitor-1.html#Inflatable_LinqExpression_WhereClauses_WhereVisitor_1_VisitBinary_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitBinary
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.WhereVisitor<TObject>.VisitBinary
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereVisitor(Of TObject).VisitBinary
  nameWithType: WhereVisitor<TObject>.VisitBinary
  nameWithType.vb: WhereVisitor(Of TObject).VisitBinary
- uid: Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitConstant(System.Linq.Expressions.ConstantExpression)
  name: VisitConstant(ConstantExpression)
  href: api/Inflatable.LinqExpression.WhereClauses.WhereVisitor-1.html#Inflatable_LinqExpression_WhereClauses_WhereVisitor_1_VisitConstant_System_Linq_Expressions_ConstantExpression_
  commentId: M:Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitConstant(System.Linq.Expressions.ConstantExpression)
  fullName: Inflatable.LinqExpression.WhereClauses.WhereVisitor<TObject>.VisitConstant(System.Linq.Expressions.ConstantExpression)
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereVisitor(Of TObject).VisitConstant(System.Linq.Expressions.ConstantExpression)
  nameWithType: WhereVisitor<TObject>.VisitConstant(ConstantExpression)
  nameWithType.vb: WhereVisitor(Of TObject).VisitConstant(ConstantExpression)
- uid: Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitConstant*
  name: VisitConstant
  href: api/Inflatable.LinqExpression.WhereClauses.WhereVisitor-1.html#Inflatable_LinqExpression_WhereClauses_WhereVisitor_1_VisitConstant_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitConstant
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.WhereVisitor<TObject>.VisitConstant
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereVisitor(Of TObject).VisitConstant
  nameWithType: WhereVisitor<TObject>.VisitConstant
  nameWithType.vb: WhereVisitor(Of TObject).VisitConstant
- uid: Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitMember(System.Linq.Expressions.MemberExpression)
  name: VisitMember(MemberExpression)
  href: api/Inflatable.LinqExpression.WhereClauses.WhereVisitor-1.html#Inflatable_LinqExpression_WhereClauses_WhereVisitor_1_VisitMember_System_Linq_Expressions_MemberExpression_
  commentId: M:Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitMember(System.Linq.Expressions.MemberExpression)
  fullName: Inflatable.LinqExpression.WhereClauses.WhereVisitor<TObject>.VisitMember(System.Linq.Expressions.MemberExpression)
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereVisitor(Of TObject).VisitMember(System.Linq.Expressions.MemberExpression)
  nameWithType: WhereVisitor<TObject>.VisitMember(MemberExpression)
  nameWithType.vb: WhereVisitor(Of TObject).VisitMember(MemberExpression)
- uid: Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitMember*
  name: VisitMember
  href: api/Inflatable.LinqExpression.WhereClauses.WhereVisitor-1.html#Inflatable_LinqExpression_WhereClauses_WhereVisitor_1_VisitMember_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitMember
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.WhereVisitor<TObject>.VisitMember
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereVisitor(Of TObject).VisitMember
  nameWithType: WhereVisitor<TObject>.VisitMember
  nameWithType.vb: WhereVisitor(Of TObject).VisitMember
- uid: Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  name: VisitMethodCall(MethodCallExpression)
  href: api/Inflatable.LinqExpression.WhereClauses.WhereVisitor-1.html#Inflatable_LinqExpression_WhereClauses_WhereVisitor_1_VisitMethodCall_System_Linq_Expressions_MethodCallExpression_
  commentId: M:Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  fullName: Inflatable.LinqExpression.WhereClauses.WhereVisitor<TObject>.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereVisitor(Of TObject).VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  nameWithType: WhereVisitor<TObject>.VisitMethodCall(MethodCallExpression)
  nameWithType.vb: WhereVisitor(Of TObject).VisitMethodCall(MethodCallExpression)
- uid: Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitMethodCall*
  name: VisitMethodCall
  href: api/Inflatable.LinqExpression.WhereClauses.WhereVisitor-1.html#Inflatable_LinqExpression_WhereClauses_WhereVisitor_1_VisitMethodCall_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitMethodCall
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.WhereVisitor<TObject>.VisitMethodCall
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereVisitor(Of TObject).VisitMethodCall
  nameWithType: WhereVisitor<TObject>.VisitMethodCall
  nameWithType.vb: WhereVisitor(Of TObject).VisitMethodCall
- uid: Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitUnary(System.Linq.Expressions.UnaryExpression)
  name: VisitUnary(UnaryExpression)
  href: api/Inflatable.LinqExpression.WhereClauses.WhereVisitor-1.html#Inflatable_LinqExpression_WhereClauses_WhereVisitor_1_VisitUnary_System_Linq_Expressions_UnaryExpression_
  commentId: M:Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitUnary(System.Linq.Expressions.UnaryExpression)
  fullName: Inflatable.LinqExpression.WhereClauses.WhereVisitor<TObject>.VisitUnary(System.Linq.Expressions.UnaryExpression)
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereVisitor(Of TObject).VisitUnary(System.Linq.Expressions.UnaryExpression)
  nameWithType: WhereVisitor<TObject>.VisitUnary(UnaryExpression)
  nameWithType.vb: WhereVisitor(Of TObject).VisitUnary(UnaryExpression)
- uid: Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitUnary*
  name: VisitUnary
  href: api/Inflatable.LinqExpression.WhereClauses.WhereVisitor-1.html#Inflatable_LinqExpression_WhereClauses_WhereVisitor_1_VisitUnary_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.VisitUnary
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.WhereVisitor<TObject>.VisitUnary
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereVisitor(Of TObject).VisitUnary
  nameWithType: WhereVisitor<TObject>.VisitUnary
  nameWithType.vb: WhereVisitor(Of TObject).VisitUnary
- uid: Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.WhereProjection(System.Linq.Expressions.Expression)
  name: WhereProjection(Expression)
  href: api/Inflatable.LinqExpression.WhereClauses.WhereVisitor-1.html#Inflatable_LinqExpression_WhereClauses_WhereVisitor_1_WhereProjection_System_Linq_Expressions_Expression_
  commentId: M:Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.WhereProjection(System.Linq.Expressions.Expression)
  fullName: Inflatable.LinqExpression.WhereClauses.WhereVisitor<TObject>.WhereProjection(System.Linq.Expressions.Expression)
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereVisitor(Of TObject).WhereProjection(System.Linq.Expressions.Expression)
  nameWithType: WhereVisitor<TObject>.WhereProjection(Expression)
  nameWithType.vb: WhereVisitor(Of TObject).WhereProjection(Expression)
- uid: Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.WhereProjection*
  name: WhereProjection
  href: api/Inflatable.LinqExpression.WhereClauses.WhereVisitor-1.html#Inflatable_LinqExpression_WhereClauses_WhereVisitor_1_WhereProjection_
  commentId: Overload:Inflatable.LinqExpression.WhereClauses.WhereVisitor`1.WhereProjection
  isSpec: "True"
  fullName: Inflatable.LinqExpression.WhereClauses.WhereVisitor<TObject>.WhereProjection
  fullName.vb: Inflatable.LinqExpression.WhereClauses.WhereVisitor(Of TObject).WhereProjection
  nameWithType: WhereVisitor<TObject>.WhereProjection
  nameWithType.vb: WhereVisitor(Of TObject).WhereProjection
- uid: Inflatable.Modules
  name: Inflatable.Modules
  href: api/Inflatable.Modules.html
  commentId: N:Inflatable.Modules
  fullName: Inflatable.Modules
  nameWithType: Inflatable.Modules
- uid: Inflatable.Modules.AOPModule
  name: AOPModule
  href: api/Inflatable.Modules.AOPModule.html
  commentId: T:Inflatable.Modules.AOPModule
  fullName: Inflatable.Modules.AOPModule
  nameWithType: AOPModule
- uid: Inflatable.Modules.AOPModule.#ctor(Inflatable.ClassMapper.MappingManager)
  name: AOPModule(MappingManager)
  href: api/Inflatable.Modules.AOPModule.html#Inflatable_Modules_AOPModule__ctor_Inflatable_ClassMapper_MappingManager_
  commentId: M:Inflatable.Modules.AOPModule.#ctor(Inflatable.ClassMapper.MappingManager)
  name.vb: New(MappingManager)
  fullName: Inflatable.Modules.AOPModule.AOPModule(Inflatable.ClassMapper.MappingManager)
  fullName.vb: Inflatable.Modules.AOPModule.New(Inflatable.ClassMapper.MappingManager)
  nameWithType: AOPModule.AOPModule(MappingManager)
  nameWithType.vb: AOPModule.New(MappingManager)
- uid: Inflatable.Modules.AOPModule.#ctor*
  name: AOPModule
  href: api/Inflatable.Modules.AOPModule.html#Inflatable_Modules_AOPModule__ctor_
  commentId: Overload:Inflatable.Modules.AOPModule.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.Modules.AOPModule.AOPModule
  fullName.vb: Inflatable.Modules.AOPModule.New
  nameWithType: AOPModule.AOPModule
  nameWithType.vb: AOPModule.New
- uid: Inflatable.Modules.AOPModule.ClassManager
  name: ClassManager
  href: api/Inflatable.Modules.AOPModule.html#Inflatable_Modules_AOPModule_ClassManager
  commentId: P:Inflatable.Modules.AOPModule.ClassManager
  fullName: Inflatable.Modules.AOPModule.ClassManager
  nameWithType: AOPModule.ClassManager
- uid: Inflatable.Modules.AOPModule.ClassManager*
  name: ClassManager
  href: api/Inflatable.Modules.AOPModule.html#Inflatable_Modules_AOPModule_ClassManager_
  commentId: Overload:Inflatable.Modules.AOPModule.ClassManager
  isSpec: "True"
  fullName: Inflatable.Modules.AOPModule.ClassManager
  nameWithType: AOPModule.ClassManager
- uid: Inflatable.Modules.AOPModule.Setup(Aspectus.Aspectus)
  name: Setup(Aspectus)
  href: api/Inflatable.Modules.AOPModule.html#Inflatable_Modules_AOPModule_Setup_Aspectus_Aspectus_
  commentId: M:Inflatable.Modules.AOPModule.Setup(Aspectus.Aspectus)
  fullName: Inflatable.Modules.AOPModule.Setup(Aspectus.Aspectus)
  nameWithType: AOPModule.Setup(Aspectus)
- uid: Inflatable.Modules.AOPModule.Setup*
  name: Setup
  href: api/Inflatable.Modules.AOPModule.html#Inflatable_Modules_AOPModule_Setup_
  commentId: Overload:Inflatable.Modules.AOPModule.Setup
  isSpec: "True"
  fullName: Inflatable.Modules.AOPModule.Setup
  nameWithType: AOPModule.Setup
- uid: Inflatable.Modules.InflatableModule
  name: InflatableModule
  href: api/Inflatable.Modules.InflatableModule.html
  commentId: T:Inflatable.Modules.InflatableModule
  fullName: Inflatable.Modules.InflatableModule
  nameWithType: InflatableModule
- uid: Inflatable.Modules.InflatableModule.Load(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: Load(IServiceCollection)
  href: api/Inflatable.Modules.InflatableModule.html#Inflatable_Modules_InflatableModule_Load_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Inflatable.Modules.InflatableModule.Load(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: Inflatable.Modules.InflatableModule.Load(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: InflatableModule.Load(IServiceCollection)
- uid: Inflatable.Modules.InflatableModule.Load*
  name: Load
  href: api/Inflatable.Modules.InflatableModule.html#Inflatable_Modules_InflatableModule_Load_
  commentId: Overload:Inflatable.Modules.InflatableModule.Load
  isSpec: "True"
  fullName: Inflatable.Modules.InflatableModule.Load
  nameWithType: InflatableModule.Load
- uid: Inflatable.Modules.InflatableModule.Order
  name: Order
  href: api/Inflatable.Modules.InflatableModule.html#Inflatable_Modules_InflatableModule_Order
  commentId: P:Inflatable.Modules.InflatableModule.Order
  fullName: Inflatable.Modules.InflatableModule.Order
  nameWithType: InflatableModule.Order
- uid: Inflatable.Modules.InflatableModule.Order*
  name: Order
  href: api/Inflatable.Modules.InflatableModule.html#Inflatable_Modules_InflatableModule_Order_
  commentId: Overload:Inflatable.Modules.InflatableModule.Order
  isSpec: "True"
  fullName: Inflatable.Modules.InflatableModule.Order
  nameWithType: InflatableModule.Order
- uid: Inflatable.QueryProvider
  name: Inflatable.QueryProvider
  href: api/Inflatable.QueryProvider.html
  commentId: N:Inflatable.QueryProvider
  fullName: Inflatable.QueryProvider
  nameWithType: Inflatable.QueryProvider
- uid: Inflatable.QueryProvider.BaseClasses
  name: Inflatable.QueryProvider.BaseClasses
  href: api/Inflatable.QueryProvider.BaseClasses.html
  commentId: N:Inflatable.QueryProvider.BaseClasses
  fullName: Inflatable.QueryProvider.BaseClasses
  nameWithType: Inflatable.QueryProvider.BaseClasses
- uid: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1
  name: GeneratorBaseClass<TMappedClass>
  href: api/Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass-1.html
  commentId: T:Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1
  name.vb: GeneratorBaseClass(Of TMappedClass)
  fullName: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass<TMappedClass>
  fullName.vb: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass(Of TMappedClass)
  nameWithType: GeneratorBaseClass<TMappedClass>
  nameWithType.vb: GeneratorBaseClass(Of TMappedClass)
- uid: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.#ctor(Inflatable.ClassMapper.IMappingSource,System.Collections.Generic.IEnumerable{Inflatable.QueryProvider.Interfaces.IQueryGenerator{`0}})
  name: GeneratorBaseClass(IMappingSource, IEnumerable<IQueryGenerator<TMappedClass>>)
  href: api/Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_GeneratorBaseClass_1__ctor_Inflatable_ClassMapper_IMappingSource_System_Collections_Generic_IEnumerable_Inflatable_QueryProvider_Interfaces_IQueryGenerator__0___
  commentId: M:Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.#ctor(Inflatable.ClassMapper.IMappingSource,System.Collections.Generic.IEnumerable{Inflatable.QueryProvider.Interfaces.IQueryGenerator{`0}})
  name.vb: New(IMappingSource, IEnumerable(Of IQueryGenerator(Of TMappedClass)))
  fullName: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass<TMappedClass>.GeneratorBaseClass(Inflatable.ClassMapper.IMappingSource, System.Collections.Generic.IEnumerable<Inflatable.QueryProvider.Interfaces.IQueryGenerator<TMappedClass>>)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass(Of TMappedClass).New(Inflatable.ClassMapper.IMappingSource, System.Collections.Generic.IEnumerable(Of Inflatable.QueryProvider.Interfaces.IQueryGenerator(Of TMappedClass)))
  nameWithType: GeneratorBaseClass<TMappedClass>.GeneratorBaseClass(IMappingSource, IEnumerable<IQueryGenerator<TMappedClass>>)
  nameWithType.vb: GeneratorBaseClass(Of TMappedClass).New(IMappingSource, IEnumerable(Of IQueryGenerator(Of TMappedClass)))
- uid: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.#ctor*
  name: GeneratorBaseClass
  href: api/Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_GeneratorBaseClass_1__ctor_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass<TMappedClass>.GeneratorBaseClass
  fullName.vb: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass(Of TMappedClass).New
  nameWithType: GeneratorBaseClass<TMappedClass>.GeneratorBaseClass
  nameWithType.vb: GeneratorBaseClass(Of TMappedClass).New
- uid: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.AssociatedType
  name: AssociatedType
  href: api/Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_GeneratorBaseClass_1_AssociatedType
  commentId: P:Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.AssociatedType
  fullName: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass<TMappedClass>.AssociatedType
  fullName.vb: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass(Of TMappedClass).AssociatedType
  nameWithType: GeneratorBaseClass<TMappedClass>.AssociatedType
  nameWithType.vb: GeneratorBaseClass(Of TMappedClass).AssociatedType
- uid: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.AssociatedType*
  name: AssociatedType
  href: api/Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_GeneratorBaseClass_1_AssociatedType_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.AssociatedType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass<TMappedClass>.AssociatedType
  fullName.vb: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass(Of TMappedClass).AssociatedType
  nameWithType: GeneratorBaseClass<TMappedClass>.AssociatedType
  nameWithType.vb: GeneratorBaseClass(Of TMappedClass).AssociatedType
- uid: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.GenerateDeclarations(Inflatable.QueryProvider.Enums.QueryType)
  name: GenerateDeclarations(QueryType)
  href: api/Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_GeneratorBaseClass_1_GenerateDeclarations_Inflatable_QueryProvider_Enums_QueryType_
  commentId: M:Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.GenerateDeclarations(Inflatable.QueryProvider.Enums.QueryType)
  fullName: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass<TMappedClass>.GenerateDeclarations(Inflatable.QueryProvider.Enums.QueryType)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass(Of TMappedClass).GenerateDeclarations(Inflatable.QueryProvider.Enums.QueryType)
  nameWithType: GeneratorBaseClass<TMappedClass>.GenerateDeclarations(QueryType)
  nameWithType.vb: GeneratorBaseClass(Of TMappedClass).GenerateDeclarations(QueryType)
- uid: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.GenerateDeclarations*
  name: GenerateDeclarations
  href: api/Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_GeneratorBaseClass_1_GenerateDeclarations_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.GenerateDeclarations
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass<TMappedClass>.GenerateDeclarations
  fullName.vb: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass(Of TMappedClass).GenerateDeclarations
  nameWithType: GeneratorBaseClass<TMappedClass>.GenerateDeclarations
  nameWithType.vb: GeneratorBaseClass(Of TMappedClass).GenerateDeclarations
- uid: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.GenerateQueries(Inflatable.LinqExpression.Interfaces.IQueryData)
  name: GenerateQueries(IQueryData)
  href: api/Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_GeneratorBaseClass_1_GenerateQueries_Inflatable_LinqExpression_Interfaces_IQueryData_
  commentId: M:Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.GenerateQueries(Inflatable.LinqExpression.Interfaces.IQueryData)
  fullName: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass<TMappedClass>.GenerateQueries(Inflatable.LinqExpression.Interfaces.IQueryData)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass(Of TMappedClass).GenerateQueries(Inflatable.LinqExpression.Interfaces.IQueryData)
  nameWithType: GeneratorBaseClass<TMappedClass>.GenerateQueries(IQueryData)
  nameWithType.vb: GeneratorBaseClass(Of TMappedClass).GenerateQueries(IQueryData)
- uid: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType,BigBook.Dynamo[])
  name: GenerateQueries(QueryType, Dynamo[])
  href: api/Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_GeneratorBaseClass_1_GenerateQueries_Inflatable_QueryProvider_Enums_QueryType_BigBook_Dynamo___
  commentId: M:Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType,BigBook.Dynamo[])
  name.vb: GenerateQueries(QueryType, Dynamo())
  fullName: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass<TMappedClass>.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType, BigBook.Dynamo[])
  fullName.vb: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass(Of TMappedClass).GenerateQueries(Inflatable.QueryProvider.Enums.QueryType, BigBook.Dynamo())
  nameWithType: GeneratorBaseClass<TMappedClass>.GenerateQueries(QueryType, Dynamo[])
  nameWithType.vb: GeneratorBaseClass(Of TMappedClass).GenerateQueries(QueryType, Dynamo())
- uid: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType,System.Object,Inflatable.ClassMapper.Interfaces.IClassProperty)
  name: GenerateQueries(QueryType, object, IClassProperty)
  href: api/Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_GeneratorBaseClass_1_GenerateQueries_Inflatable_QueryProvider_Enums_QueryType_System_Object_Inflatable_ClassMapper_Interfaces_IClassProperty_
  commentId: M:Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType,System.Object,Inflatable.ClassMapper.Interfaces.IClassProperty)
  name.vb: GenerateQueries(QueryType, Object, IClassProperty)
  fullName: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass<TMappedClass>.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType, object, Inflatable.ClassMapper.Interfaces.IClassProperty)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass(Of TMappedClass).GenerateQueries(Inflatable.QueryProvider.Enums.QueryType, Object, Inflatable.ClassMapper.Interfaces.IClassProperty)
  nameWithType: GeneratorBaseClass<TMappedClass>.GenerateQueries(QueryType, object, IClassProperty)
  nameWithType.vb: GeneratorBaseClass(Of TMappedClass).GenerateQueries(QueryType, Object, IClassProperty)
- uid: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType,System.Object)
  name: GenerateQueries(QueryType, object)
  href: api/Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_GeneratorBaseClass_1_GenerateQueries_Inflatable_QueryProvider_Enums_QueryType_System_Object_
  commentId: M:Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType,System.Object)
  name.vb: GenerateQueries(QueryType, Object)
  fullName: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass<TMappedClass>.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType, object)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass(Of TMappedClass).GenerateQueries(Inflatable.QueryProvider.Enums.QueryType, Object)
  nameWithType: GeneratorBaseClass<TMappedClass>.GenerateQueries(QueryType, object)
  nameWithType.vb: GeneratorBaseClass(Of TMappedClass).GenerateQueries(QueryType, Object)
- uid: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.GenerateQueries*
  name: GenerateQueries
  href: api/Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_GeneratorBaseClass_1_GenerateQueries_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.GenerateQueries
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass<TMappedClass>.GenerateQueries
  fullName.vb: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass(Of TMappedClass).GenerateQueries
  nameWithType: GeneratorBaseClass<TMappedClass>.GenerateQueries
  nameWithType.vb: GeneratorBaseClass(Of TMappedClass).GenerateQueries
- uid: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.MappingInformation
  name: MappingInformation
  href: api/Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_GeneratorBaseClass_1_MappingInformation
  commentId: P:Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.MappingInformation
  fullName: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass<TMappedClass>.MappingInformation
  fullName.vb: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass(Of TMappedClass).MappingInformation
  nameWithType: GeneratorBaseClass<TMappedClass>.MappingInformation
  nameWithType.vb: GeneratorBaseClass(Of TMappedClass).MappingInformation
- uid: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.MappingInformation*
  name: MappingInformation
  href: api/Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_GeneratorBaseClass_1_MappingInformation_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.MappingInformation
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass<TMappedClass>.MappingInformation
  fullName.vb: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass(Of TMappedClass).MappingInformation
  nameWithType: GeneratorBaseClass<TMappedClass>.MappingInformation
  nameWithType.vb: GeneratorBaseClass(Of TMappedClass).MappingInformation
- uid: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.QueryGenerators
  name: QueryGenerators
  href: api/Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_GeneratorBaseClass_1_QueryGenerators
  commentId: P:Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.QueryGenerators
  fullName: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass<TMappedClass>.QueryGenerators
  fullName.vb: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass(Of TMappedClass).QueryGenerators
  nameWithType: GeneratorBaseClass<TMappedClass>.QueryGenerators
  nameWithType.vb: GeneratorBaseClass(Of TMappedClass).QueryGenerators
- uid: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.QueryGenerators*
  name: QueryGenerators
  href: api/Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_GeneratorBaseClass_1_QueryGenerators_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass`1.QueryGenerators
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass<TMappedClass>.QueryGenerators
  fullName.vb: Inflatable.QueryProvider.BaseClasses.GeneratorBaseClass(Of TMappedClass).QueryGenerators
  nameWithType: GeneratorBaseClass<TMappedClass>.QueryGenerators
  nameWithType.vb: GeneratorBaseClass(Of TMappedClass).QueryGenerators
- uid: Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass`1
  name: LinqQueryGeneratorBaseClass<TObject>
  href: api/Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass-1.html
  commentId: T:Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass`1
  name.vb: LinqQueryGeneratorBaseClass(Of TObject)
  fullName: Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass<TObject>
  fullName.vb: Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass(Of TObject)
  nameWithType: LinqQueryGeneratorBaseClass<TObject>
  nameWithType.vb: LinqQueryGeneratorBaseClass(Of TObject)
- uid: Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: LinqQueryGeneratorBaseClass(IMappingSource, ObjectPool<StringBuilder>)
  href: api/Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_LinqQueryGeneratorBaseClass_1__ctor_Inflatable_ClassMapper_IMappingSource_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: New(IMappingSource, ObjectPool(Of StringBuilder))
  fullName: Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass<TObject>.LinqQueryGeneratorBaseClass(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass(Of TObject).New(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: LinqQueryGeneratorBaseClass<TObject>.LinqQueryGeneratorBaseClass(IMappingSource, ObjectPool<StringBuilder>)
  nameWithType.vb: LinqQueryGeneratorBaseClass(Of TObject).New(IMappingSource, ObjectPool(Of StringBuilder))
- uid: Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass`1.#ctor*
  name: LinqQueryGeneratorBaseClass
  href: api/Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_LinqQueryGeneratorBaseClass_1__ctor_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass<TObject>.LinqQueryGeneratorBaseClass
  fullName.vb: Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass(Of TObject).New
  nameWithType: LinqQueryGeneratorBaseClass<TObject>.LinqQueryGeneratorBaseClass
  nameWithType.vb: LinqQueryGeneratorBaseClass(Of TObject).New
- uid: Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass`1.GenerateQueries(`0)
  name: GenerateQueries(TObject)
  href: api/Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_LinqQueryGeneratorBaseClass_1_GenerateQueries__0_
  commentId: M:Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass`1.GenerateQueries(`0)
  fullName: Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass<TObject>.GenerateQueries(TObject)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass(Of TObject).GenerateQueries(TObject)
  nameWithType: LinqQueryGeneratorBaseClass<TObject>.GenerateQueries(TObject)
  nameWithType.vb: LinqQueryGeneratorBaseClass(Of TObject).GenerateQueries(TObject)
- uid: Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass`1.GenerateQueries(Inflatable.LinqExpression.QueryData{`0})
  name: GenerateQueries(QueryData<TObject>)
  href: api/Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_LinqQueryGeneratorBaseClass_1_GenerateQueries_Inflatable_LinqExpression_QueryData__0__
  commentId: M:Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass`1.GenerateQueries(Inflatable.LinqExpression.QueryData{`0})
  name.vb: GenerateQueries(QueryData(Of TObject))
  fullName: Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass<TObject>.GenerateQueries(Inflatable.LinqExpression.QueryData<TObject>)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass(Of TObject).GenerateQueries(Inflatable.LinqExpression.QueryData(Of TObject))
  nameWithType: LinqQueryGeneratorBaseClass<TObject>.GenerateQueries(QueryData<TObject>)
  nameWithType.vb: LinqQueryGeneratorBaseClass(Of TObject).GenerateQueries(QueryData(Of TObject))
- uid: Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass`1.GenerateQueries*
  name: GenerateQueries
  href: api/Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_LinqQueryGeneratorBaseClass_1_GenerateQueries_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass`1.GenerateQueries
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass<TObject>.GenerateQueries
  fullName.vb: Inflatable.QueryProvider.BaseClasses.LinqQueryGeneratorBaseClass(Of TObject).GenerateQueries
  nameWithType: LinqQueryGeneratorBaseClass<TObject>.GenerateQueries
  nameWithType.vb: LinqQueryGeneratorBaseClass(Of TObject).GenerateQueries
- uid: Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass`1
  name: PropertyQueryGeneratorBaseClass<TObject>
  href: api/Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass-1.html
  commentId: T:Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass`1
  name.vb: PropertyQueryGeneratorBaseClass(Of TObject)
  fullName: Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass<TObject>
  fullName.vb: Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass(Of TObject)
  nameWithType: PropertyQueryGeneratorBaseClass<TObject>
  nameWithType.vb: PropertyQueryGeneratorBaseClass(Of TObject)
- uid: Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: PropertyQueryGeneratorBaseClass(IMappingSource, ObjectPool<StringBuilder>)
  href: api/Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_PropertyQueryGeneratorBaseClass_1__ctor_Inflatable_ClassMapper_IMappingSource_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: New(IMappingSource, ObjectPool(Of StringBuilder))
  fullName: Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass<TObject>.PropertyQueryGeneratorBaseClass(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass(Of TObject).New(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: PropertyQueryGeneratorBaseClass<TObject>.PropertyQueryGeneratorBaseClass(IMappingSource, ObjectPool<StringBuilder>)
  nameWithType.vb: PropertyQueryGeneratorBaseClass(Of TObject).New(IMappingSource, ObjectPool(Of StringBuilder))
- uid: Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass`1.#ctor*
  name: PropertyQueryGeneratorBaseClass
  href: api/Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_PropertyQueryGeneratorBaseClass_1__ctor_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass<TObject>.PropertyQueryGeneratorBaseClass
  fullName.vb: Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass(Of TObject).New
  nameWithType: PropertyQueryGeneratorBaseClass<TObject>.PropertyQueryGeneratorBaseClass
  nameWithType.vb: PropertyQueryGeneratorBaseClass(Of TObject).New
- uid: Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass`1.GenerateQueries(`0,Inflatable.ClassMapper.Interfaces.IClassProperty)
  name: GenerateQueries(TObject, IClassProperty)
  href: api/Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_PropertyQueryGeneratorBaseClass_1_GenerateQueries__0_Inflatable_ClassMapper_Interfaces_IClassProperty_
  commentId: M:Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass`1.GenerateQueries(`0,Inflatable.ClassMapper.Interfaces.IClassProperty)
  fullName: Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass<TObject>.GenerateQueries(TObject, Inflatable.ClassMapper.Interfaces.IClassProperty)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass(Of TObject).GenerateQueries(TObject, Inflatable.ClassMapper.Interfaces.IClassProperty)
  nameWithType: PropertyQueryGeneratorBaseClass<TObject>.GenerateQueries(TObject, IClassProperty)
  nameWithType.vb: PropertyQueryGeneratorBaseClass(Of TObject).GenerateQueries(TObject, IClassProperty)
- uid: Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass`1.GenerateQueries(`0)
  name: GenerateQueries(TObject)
  href: api/Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_PropertyQueryGeneratorBaseClass_1_GenerateQueries__0_
  commentId: M:Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass`1.GenerateQueries(`0)
  fullName: Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass<TObject>.GenerateQueries(TObject)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass(Of TObject).GenerateQueries(TObject)
  nameWithType: PropertyQueryGeneratorBaseClass<TObject>.GenerateQueries(TObject)
  nameWithType.vb: PropertyQueryGeneratorBaseClass(Of TObject).GenerateQueries(TObject)
- uid: Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass`1.GenerateQueries*
  name: GenerateQueries
  href: api/Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_PropertyQueryGeneratorBaseClass_1_GenerateQueries_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass`1.GenerateQueries
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass<TObject>.GenerateQueries
  fullName.vb: Inflatable.QueryProvider.BaseClasses.PropertyQueryGeneratorBaseClass(Of TObject).GenerateQueries
  nameWithType: PropertyQueryGeneratorBaseClass<TObject>.GenerateQueries
  nameWithType.vb: PropertyQueryGeneratorBaseClass(Of TObject).GenerateQueries
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1
  name: QueryGeneratorBaseClass<TMappedClass>
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html
  commentId: T:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1
  name.vb: QueryGeneratorBaseClass(Of TMappedClass)
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass)
  nameWithType: QueryGeneratorBaseClass<TMappedClass>
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass)
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: QueryGeneratorBaseClass(IMappingSource, ObjectPool<StringBuilder>)
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1__ctor_Inflatable_ClassMapper_IMappingSource_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: New(IMappingSource, ObjectPool(Of StringBuilder))
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.QueryGeneratorBaseClass(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).New(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.QueryGeneratorBaseClass(IMappingSource, ObjectPool<StringBuilder>)
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).New(IMappingSource, ObjectPool(Of StringBuilder))
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.#ctor*
  name: QueryGeneratorBaseClass
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1__ctor_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.QueryGeneratorBaseClass
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).New
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.QueryGeneratorBaseClass
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).New
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.AssociatedType
  name: AssociatedType
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_AssociatedType
  commentId: P:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.AssociatedType
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.AssociatedType
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).AssociatedType
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.AssociatedType
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).AssociatedType
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.AssociatedType*
  name: AssociatedType
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_AssociatedType_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.AssociatedType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.AssociatedType
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).AssociatedType
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.AssociatedType
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).AssociatedType
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GenerateDeclarations
  name: GenerateDeclarations()
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GenerateDeclarations
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GenerateDeclarations
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GenerateDeclarations()
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GenerateDeclarations()
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GenerateDeclarations()
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GenerateDeclarations()
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GenerateDeclarations*
  name: GenerateDeclarations
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GenerateDeclarations_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GenerateDeclarations
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GenerateDeclarations
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GenerateDeclarations
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GenerateDeclarations
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GenerateDeclarations
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GenerateQueries(`0)
  name: GenerateQueries(TMappedClass)
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GenerateQueries__0_
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GenerateQueries(`0)
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GenerateQueries(TMappedClass)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GenerateQueries(TMappedClass)
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GenerateQueries(TMappedClass)
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GenerateQueries(TMappedClass)
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GenerateQueries*
  name: GenerateQueries
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GenerateQueries_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GenerateQueries
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GenerateQueries
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GenerateQueries
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GenerateQueries
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GenerateQueries
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetColumnName(Inflatable.ClassMapper.Interfaces.IAutoIDProperty,System.String)
  name: GetColumnName(IAutoIDProperty, string)
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetColumnName_Inflatable_ClassMapper_Interfaces_IAutoIDProperty_System_String_
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetColumnName(Inflatable.ClassMapper.Interfaces.IAutoIDProperty,System.String)
  name.vb: GetColumnName(IAutoIDProperty, String)
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetColumnName(Inflatable.ClassMapper.Interfaces.IAutoIDProperty, string)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetColumnName(Inflatable.ClassMapper.Interfaces.IAutoIDProperty, String)
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetColumnName(IAutoIDProperty, string)
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetColumnName(IAutoIDProperty, String)
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetColumnName(Inflatable.ClassMapper.Interfaces.IIDProperty,System.String)
  name: GetColumnName(IIDProperty?, string)
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetColumnName_Inflatable_ClassMapper_Interfaces_IIDProperty_System_String_
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetColumnName(Inflatable.ClassMapper.Interfaces.IIDProperty,System.String)
  name.vb: GetColumnName(IIDProperty, String)
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetColumnName(Inflatable.ClassMapper.Interfaces.IIDProperty?, string)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetColumnName(Inflatable.ClassMapper.Interfaces.IIDProperty, String)
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetColumnName(IIDProperty?, string)
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetColumnName(IIDProperty, String)
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetColumnName(Inflatable.ClassMapper.Interfaces.IMapProperty,Inflatable.Interfaces.IMapping,System.String)
  name: GetColumnName(IMapProperty, IMapping, string)
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetColumnName_Inflatable_ClassMapper_Interfaces_IMapProperty_Inflatable_Interfaces_IMapping_System_String_
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetColumnName(Inflatable.ClassMapper.Interfaces.IMapProperty,Inflatable.Interfaces.IMapping,System.String)
  name.vb: GetColumnName(IMapProperty, IMapping, String)
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetColumnName(Inflatable.ClassMapper.Interfaces.IMapProperty, Inflatable.Interfaces.IMapping, string)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetColumnName(Inflatable.ClassMapper.Interfaces.IMapProperty, Inflatable.Interfaces.IMapping, String)
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetColumnName(IMapProperty, IMapping, string)
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetColumnName(IMapProperty, IMapping, String)
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetColumnName(Inflatable.ClassMapper.Interfaces.IProperty,System.String)
  name: GetColumnName(IProperty, string)
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetColumnName_Inflatable_ClassMapper_Interfaces_IProperty_System_String_
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetColumnName(Inflatable.ClassMapper.Interfaces.IProperty,System.String)
  name.vb: GetColumnName(IProperty, String)
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetColumnName(Inflatable.ClassMapper.Interfaces.IProperty, string)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetColumnName(Inflatable.ClassMapper.Interfaces.IProperty, String)
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetColumnName(IProperty, string)
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetColumnName(IProperty, String)
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetColumnName*
  name: GetColumnName
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetColumnName_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetColumnName
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetColumnName
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetColumnName
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetColumnName
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetColumnName
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetForeignColumnName(Inflatable.Interfaces.IMapping)
  name: GetForeignColumnName(IMapping)
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetForeignColumnName_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetForeignColumnName(Inflatable.Interfaces.IMapping)
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetForeignColumnName(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetForeignColumnName(Inflatable.Interfaces.IMapping)
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetForeignColumnName(IMapping)
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetForeignColumnName(IMapping)
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetForeignColumnName*
  name: GetForeignColumnName
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetForeignColumnName_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetForeignColumnName
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetForeignColumnName
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetForeignColumnName
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetForeignColumnName
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetForeignColumnName
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetForeignParameterName(Inflatable.Interfaces.IMapping)
  name: GetForeignParameterName(IMapping)
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetForeignParameterName_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetForeignParameterName(Inflatable.Interfaces.IMapping)
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetForeignParameterName(Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetForeignParameterName(Inflatable.Interfaces.IMapping)
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetForeignParameterName(IMapping)
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetForeignParameterName(IMapping)
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetForeignParameterName*
  name: GetForeignParameterName
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetForeignParameterName_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetForeignParameterName
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetForeignParameterName
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetForeignParameterName
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetForeignParameterName
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetForeignParameterName
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParameterName(Inflatable.ClassMapper.Interfaces.IIDProperty)
  name: GetParameterName(IIDProperty?)
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetParameterName_Inflatable_ClassMapper_Interfaces_IIDProperty_
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParameterName(Inflatable.ClassMapper.Interfaces.IIDProperty)
  name.vb: GetParameterName(IIDProperty)
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetParameterName(Inflatable.ClassMapper.Interfaces.IIDProperty?)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetParameterName(Inflatable.ClassMapper.Interfaces.IIDProperty)
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetParameterName(IIDProperty?)
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetParameterName(IIDProperty)
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParameterName(Inflatable.ClassMapper.Interfaces.IMapProperty,Inflatable.Interfaces.IMapping)
  name: GetParameterName(IMapProperty, IMapping)
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetParameterName_Inflatable_ClassMapper_Interfaces_IMapProperty_Inflatable_Interfaces_IMapping_
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParameterName(Inflatable.ClassMapper.Interfaces.IMapProperty,Inflatable.Interfaces.IMapping)
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetParameterName(Inflatable.ClassMapper.Interfaces.IMapProperty, Inflatable.Interfaces.IMapping)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetParameterName(Inflatable.ClassMapper.Interfaces.IMapProperty, Inflatable.Interfaces.IMapping)
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetParameterName(IMapProperty, IMapping)
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetParameterName(IMapProperty, IMapping)
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParameterName(Inflatable.ClassMapper.Interfaces.IProperty)
  name: GetParameterName(IProperty)
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetParameterName_Inflatable_ClassMapper_Interfaces_IProperty_
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParameterName(Inflatable.ClassMapper.Interfaces.IProperty)
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetParameterName(Inflatable.ClassMapper.Interfaces.IProperty)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetParameterName(Inflatable.ClassMapper.Interfaces.IProperty)
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetParameterName(IProperty)
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetParameterName(IProperty)
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParameterName*
  name: GetParameterName
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetParameterName_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParameterName
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetParameterName
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetParameterName
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetParameterName
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetParameterName
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParameterType(Inflatable.ClassMapper.Interfaces.IAutoIDProperty)
  name: GetParameterType(IAutoIDProperty)
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetParameterType_Inflatable_ClassMapper_Interfaces_IAutoIDProperty_
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParameterType(Inflatable.ClassMapper.Interfaces.IAutoIDProperty)
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetParameterType(Inflatable.ClassMapper.Interfaces.IAutoIDProperty)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetParameterType(Inflatable.ClassMapper.Interfaces.IAutoIDProperty)
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetParameterType(IAutoIDProperty)
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetParameterType(IAutoIDProperty)
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParameterType(Inflatable.ClassMapper.Interfaces.IIDProperty)
  name: GetParameterType(IIDProperty)
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetParameterType_Inflatable_ClassMapper_Interfaces_IIDProperty_
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParameterType(Inflatable.ClassMapper.Interfaces.IIDProperty)
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetParameterType(Inflatable.ClassMapper.Interfaces.IIDProperty)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetParameterType(Inflatable.ClassMapper.Interfaces.IIDProperty)
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetParameterType(IIDProperty)
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetParameterType(IIDProperty)
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParameterType*
  name: GetParameterType
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetParameterType_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParameterType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetParameterType
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetParameterType
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetParameterType
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetParameterType
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParentColumnName(Inflatable.Interfaces.IMapping,Inflatable.ClassMapper.Interfaces.IAutoIDProperty,System.String)
  name: GetParentColumnName(IMapping, IAutoIDProperty, string)
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetParentColumnName_Inflatable_Interfaces_IMapping_Inflatable_ClassMapper_Interfaces_IAutoIDProperty_System_String_
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParentColumnName(Inflatable.Interfaces.IMapping,Inflatable.ClassMapper.Interfaces.IAutoIDProperty,System.String)
  name.vb: GetParentColumnName(IMapping, IAutoIDProperty, String)
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetParentColumnName(Inflatable.Interfaces.IMapping, Inflatable.ClassMapper.Interfaces.IAutoIDProperty, string)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetParentColumnName(Inflatable.Interfaces.IMapping, Inflatable.ClassMapper.Interfaces.IAutoIDProperty, String)
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetParentColumnName(IMapping, IAutoIDProperty, string)
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetParentColumnName(IMapping, IAutoIDProperty, String)
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParentColumnName(Inflatable.Interfaces.IMapping,Inflatable.ClassMapper.Interfaces.IIDProperty,System.String)
  name: GetParentColumnName(IMapping, IIDProperty, string)
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetParentColumnName_Inflatable_Interfaces_IMapping_Inflatable_ClassMapper_Interfaces_IIDProperty_System_String_
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParentColumnName(Inflatable.Interfaces.IMapping,Inflatable.ClassMapper.Interfaces.IIDProperty,System.String)
  name.vb: GetParentColumnName(IMapping, IIDProperty, String)
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetParentColumnName(Inflatable.Interfaces.IMapping, Inflatable.ClassMapper.Interfaces.IIDProperty, string)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetParentColumnName(Inflatable.Interfaces.IMapping, Inflatable.ClassMapper.Interfaces.IIDProperty, String)
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetParentColumnName(IMapping, IIDProperty, string)
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetParentColumnName(IMapping, IIDProperty, String)
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParentColumnName*
  name: GetParentColumnName
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetParentColumnName_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParentColumnName
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetParentColumnName
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetParentColumnName
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetParentColumnName
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetParentColumnName
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParentParameterName(Inflatable.ClassMapper.Interfaces.IAutoIDProperty)
  name: GetParentParameterName(IAutoIDProperty)
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetParentParameterName_Inflatable_ClassMapper_Interfaces_IAutoIDProperty_
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParentParameterName(Inflatable.ClassMapper.Interfaces.IAutoIDProperty)
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetParentParameterName(Inflatable.ClassMapper.Interfaces.IAutoIDProperty)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetParentParameterName(Inflatable.ClassMapper.Interfaces.IAutoIDProperty)
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetParentParameterName(IAutoIDProperty)
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetParentParameterName(IAutoIDProperty)
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParentParameterName(Inflatable.ClassMapper.Interfaces.IIDProperty)
  name: GetParentParameterName(IIDProperty)
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetParentParameterName_Inflatable_ClassMapper_Interfaces_IIDProperty_
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParentParameterName(Inflatable.ClassMapper.Interfaces.IIDProperty)
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetParentParameterName(Inflatable.ClassMapper.Interfaces.IIDProperty)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetParentParameterName(Inflatable.ClassMapper.Interfaces.IIDProperty)
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetParentParameterName(IIDProperty)
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetParentParameterName(IIDProperty)
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParentParameterName*
  name: GetParentParameterName
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetParentParameterName_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetParentParameterName
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetParentParameterName
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetParentParameterName
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetParentParameterName
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetParentParameterName
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetTableName(Inflatable.ClassMapper.Interfaces.IManyToManyProperty)
  name: GetTableName(IManyToManyProperty)
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetTableName_Inflatable_ClassMapper_Interfaces_IManyToManyProperty_
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetTableName(Inflatable.ClassMapper.Interfaces.IManyToManyProperty)
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetTableName(Inflatable.ClassMapper.Interfaces.IManyToManyProperty)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetTableName(Inflatable.ClassMapper.Interfaces.IManyToManyProperty)
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetTableName(IManyToManyProperty)
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetTableName(IManyToManyProperty)
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetTableName(Inflatable.Interfaces.IMapping,System.String)
  name: GetTableName(IMapping?, string)
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetTableName_Inflatable_Interfaces_IMapping_System_String_
  commentId: M:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetTableName(Inflatable.Interfaces.IMapping,System.String)
  name.vb: GetTableName(IMapping, String)
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetTableName(Inflatable.Interfaces.IMapping?, string)
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetTableName(Inflatable.Interfaces.IMapping, String)
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetTableName(IMapping?, string)
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetTableName(IMapping, String)
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetTableName*
  name: GetTableName
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_GetTableName_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.GetTableName
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.GetTableName
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).GetTableName
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.GetTableName
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).GetTableName
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.MappingInformation
  name: MappingInformation
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_MappingInformation
  commentId: P:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.MappingInformation
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.MappingInformation
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).MappingInformation
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.MappingInformation
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).MappingInformation
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.MappingInformation*
  name: MappingInformation
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_MappingInformation_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.MappingInformation
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.MappingInformation
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).MappingInformation
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.MappingInformation
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).MappingInformation
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.ObjectPool
  name: ObjectPool
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_ObjectPool
  commentId: P:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.ObjectPool
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.ObjectPool
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).ObjectPool
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.ObjectPool
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).ObjectPool
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.ObjectPool*
  name: ObjectPool
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_ObjectPool_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.ObjectPool
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.ObjectPool
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).ObjectPool
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.ObjectPool
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).ObjectPool
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.QueryType
  name: QueryType
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_QueryType
  commentId: P:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.QueryType
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.QueryType
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).QueryType
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.QueryType
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).QueryType
- uid: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.QueryType*
  name: QueryType
  href: api/Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass-1.html#Inflatable_QueryProvider_BaseClasses_QueryGeneratorBaseClass_1_QueryType_
  commentId: Overload:Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass`1.QueryType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass<TMappedClass>.QueryType
  fullName.vb: Inflatable.QueryProvider.BaseClasses.QueryGeneratorBaseClass(Of TMappedClass).QueryType
  nameWithType: QueryGeneratorBaseClass<TMappedClass>.QueryType
  nameWithType.vb: QueryGeneratorBaseClass(Of TMappedClass).QueryType
- uid: Inflatable.QueryProvider.CachedResult
  name: CachedResult
  href: api/Inflatable.QueryProvider.CachedResult.html
  commentId: T:Inflatable.QueryProvider.CachedResult
  fullName: Inflatable.QueryProvider.CachedResult
  nameWithType: CachedResult
- uid: Inflatable.QueryProvider.CachedResult.#ctor(BigBook.Dynamo,System.Type)
  name: CachedResult(Dynamo, Type)
  href: api/Inflatable.QueryProvider.CachedResult.html#Inflatable_QueryProvider_CachedResult__ctor_BigBook_Dynamo_System_Type_
  commentId: M:Inflatable.QueryProvider.CachedResult.#ctor(BigBook.Dynamo,System.Type)
  name.vb: New(Dynamo, Type)
  fullName: Inflatable.QueryProvider.CachedResult.CachedResult(BigBook.Dynamo, System.Type)
  fullName.vb: Inflatable.QueryProvider.CachedResult.New(BigBook.Dynamo, System.Type)
  nameWithType: CachedResult.CachedResult(Dynamo, Type)
  nameWithType.vb: CachedResult.New(Dynamo, Type)
- uid: Inflatable.QueryProvider.CachedResult.#ctor*
  name: CachedResult
  href: api/Inflatable.QueryProvider.CachedResult.html#Inflatable_QueryProvider_CachedResult__ctor_
  commentId: Overload:Inflatable.QueryProvider.CachedResult.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.QueryProvider.CachedResult.CachedResult
  fullName.vb: Inflatable.QueryProvider.CachedResult.New
  nameWithType: CachedResult.CachedResult
  nameWithType.vb: CachedResult.New
- uid: Inflatable.QueryProvider.CachedResult.ObjectType
  name: ObjectType
  href: api/Inflatable.QueryProvider.CachedResult.html#Inflatable_QueryProvider_CachedResult_ObjectType
  commentId: P:Inflatable.QueryProvider.CachedResult.ObjectType
  fullName: Inflatable.QueryProvider.CachedResult.ObjectType
  nameWithType: CachedResult.ObjectType
- uid: Inflatable.QueryProvider.CachedResult.ObjectType*
  name: ObjectType
  href: api/Inflatable.QueryProvider.CachedResult.html#Inflatable_QueryProvider_CachedResult_ObjectType_
  commentId: Overload:Inflatable.QueryProvider.CachedResult.ObjectType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.CachedResult.ObjectType
  nameWithType: CachedResult.ObjectType
- uid: Inflatable.QueryProvider.CachedResult.Value
  name: Value
  href: api/Inflatable.QueryProvider.CachedResult.html#Inflatable_QueryProvider_CachedResult_Value
  commentId: P:Inflatable.QueryProvider.CachedResult.Value
  fullName: Inflatable.QueryProvider.CachedResult.Value
  nameWithType: CachedResult.Value
- uid: Inflatable.QueryProvider.CachedResult.Value*
  name: Value
  href: api/Inflatable.QueryProvider.CachedResult.html#Inflatable_QueryProvider_CachedResult_Value_
  commentId: Overload:Inflatable.QueryProvider.CachedResult.Value
  isSpec: "True"
  fullName: Inflatable.QueryProvider.CachedResult.Value
  nameWithType: CachedResult.Value
- uid: Inflatable.QueryProvider.Enums
  name: Inflatable.QueryProvider.Enums
  href: api/Inflatable.QueryProvider.Enums.html
  commentId: N:Inflatable.QueryProvider.Enums
  fullName: Inflatable.QueryProvider.Enums
  nameWithType: Inflatable.QueryProvider.Enums
- uid: Inflatable.QueryProvider.Enums.QueryType
  name: QueryType
  href: api/Inflatable.QueryProvider.Enums.QueryType.html
  commentId: T:Inflatable.QueryProvider.Enums.QueryType
  fullName: Inflatable.QueryProvider.Enums.QueryType
  nameWithType: QueryType
- uid: Inflatable.QueryProvider.Enums.QueryType.Delete
  name: Delete
  href: api/Inflatable.QueryProvider.Enums.QueryType.html#Inflatable_QueryProvider_Enums_QueryType_Delete
  commentId: F:Inflatable.QueryProvider.Enums.QueryType.Delete
  fullName: Inflatable.QueryProvider.Enums.QueryType.Delete
  nameWithType: QueryType.Delete
- uid: Inflatable.QueryProvider.Enums.QueryType.Insert
  name: Insert
  href: api/Inflatable.QueryProvider.Enums.QueryType.html#Inflatable_QueryProvider_Enums_QueryType_Insert
  commentId: F:Inflatable.QueryProvider.Enums.QueryType.Insert
  fullName: Inflatable.QueryProvider.Enums.QueryType.Insert
  nameWithType: QueryType.Insert
- uid: Inflatable.QueryProvider.Enums.QueryType.JoinsDelete
  name: JoinsDelete
  href: api/Inflatable.QueryProvider.Enums.QueryType.html#Inflatable_QueryProvider_Enums_QueryType_JoinsDelete
  commentId: F:Inflatable.QueryProvider.Enums.QueryType.JoinsDelete
  fullName: Inflatable.QueryProvider.Enums.QueryType.JoinsDelete
  nameWithType: QueryType.JoinsDelete
- uid: Inflatable.QueryProvider.Enums.QueryType.JoinsSave
  name: JoinsSave
  href: api/Inflatable.QueryProvider.Enums.QueryType.html#Inflatable_QueryProvider_Enums_QueryType_JoinsSave
  commentId: F:Inflatable.QueryProvider.Enums.QueryType.JoinsSave
  fullName: Inflatable.QueryProvider.Enums.QueryType.JoinsSave
  nameWithType: QueryType.JoinsSave
- uid: Inflatable.QueryProvider.Enums.QueryType.LinqQuery
  name: LinqQuery
  href: api/Inflatable.QueryProvider.Enums.QueryType.html#Inflatable_QueryProvider_Enums_QueryType_LinqQuery
  commentId: F:Inflatable.QueryProvider.Enums.QueryType.LinqQuery
  fullName: Inflatable.QueryProvider.Enums.QueryType.LinqQuery
  nameWithType: QueryType.LinqQuery
- uid: Inflatable.QueryProvider.Enums.QueryType.LoadData
  name: LoadData
  href: api/Inflatable.QueryProvider.Enums.QueryType.html#Inflatable_QueryProvider_Enums_QueryType_LoadData
  commentId: F:Inflatable.QueryProvider.Enums.QueryType.LoadData
  fullName: Inflatable.QueryProvider.Enums.QueryType.LoadData
  nameWithType: QueryType.LoadData
- uid: Inflatable.QueryProvider.Enums.QueryType.LoadProperty
  name: LoadProperty
  href: api/Inflatable.QueryProvider.Enums.QueryType.html#Inflatable_QueryProvider_Enums_QueryType_LoadProperty
  commentId: F:Inflatable.QueryProvider.Enums.QueryType.LoadProperty
  fullName: Inflatable.QueryProvider.Enums.QueryType.LoadProperty
  nameWithType: QueryType.LoadProperty
- uid: Inflatable.QueryProvider.Enums.QueryType.Update
  name: Update
  href: api/Inflatable.QueryProvider.Enums.QueryType.html#Inflatable_QueryProvider_Enums_QueryType_Update
  commentId: F:Inflatable.QueryProvider.Enums.QueryType.Update
  fullName: Inflatable.QueryProvider.Enums.QueryType.Update
  nameWithType: QueryType.Update
- uid: Inflatable.QueryProvider.Interfaces
  name: Inflatable.QueryProvider.Interfaces
  href: api/Inflatable.QueryProvider.Interfaces.html
  commentId: N:Inflatable.QueryProvider.Interfaces
  fullName: Inflatable.QueryProvider.Interfaces
  nameWithType: Inflatable.QueryProvider.Interfaces
- uid: Inflatable.QueryProvider.Interfaces.IDataQueryGenerator`1
  name: IDataQueryGenerator<TObject>
  href: api/Inflatable.QueryProvider.Interfaces.IDataQueryGenerator-1.html
  commentId: T:Inflatable.QueryProvider.Interfaces.IDataQueryGenerator`1
  name.vb: IDataQueryGenerator(Of TObject)
  fullName: Inflatable.QueryProvider.Interfaces.IDataQueryGenerator<TObject>
  fullName.vb: Inflatable.QueryProvider.Interfaces.IDataQueryGenerator(Of TObject)
  nameWithType: IDataQueryGenerator<TObject>
  nameWithType.vb: IDataQueryGenerator(Of TObject)
- uid: Inflatable.QueryProvider.Interfaces.IDataQueryGenerator`1.GenerateQueries(BigBook.Dynamo[])
  name: GenerateQueries(Dynamo[])
  href: api/Inflatable.QueryProvider.Interfaces.IDataQueryGenerator-1.html#Inflatable_QueryProvider_Interfaces_IDataQueryGenerator_1_GenerateQueries_BigBook_Dynamo___
  commentId: M:Inflatable.QueryProvider.Interfaces.IDataQueryGenerator`1.GenerateQueries(BigBook.Dynamo[])
  name.vb: GenerateQueries(Dynamo())
  fullName: Inflatable.QueryProvider.Interfaces.IDataQueryGenerator<TObject>.GenerateQueries(BigBook.Dynamo[])
  fullName.vb: Inflatable.QueryProvider.Interfaces.IDataQueryGenerator(Of TObject).GenerateQueries(BigBook.Dynamo())
  nameWithType: IDataQueryGenerator<TObject>.GenerateQueries(Dynamo[])
  nameWithType.vb: IDataQueryGenerator(Of TObject).GenerateQueries(Dynamo())
- uid: Inflatable.QueryProvider.Interfaces.IDataQueryGenerator`1.GenerateQueries*
  name: GenerateQueries
  href: api/Inflatable.QueryProvider.Interfaces.IDataQueryGenerator-1.html#Inflatable_QueryProvider_Interfaces_IDataQueryGenerator_1_GenerateQueries_
  commentId: Overload:Inflatable.QueryProvider.Interfaces.IDataQueryGenerator`1.GenerateQueries
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Interfaces.IDataQueryGenerator<TObject>.GenerateQueries
  fullName.vb: Inflatable.QueryProvider.Interfaces.IDataQueryGenerator(Of TObject).GenerateQueries
  nameWithType: IDataQueryGenerator<TObject>.GenerateQueries
  nameWithType.vb: IDataQueryGenerator(Of TObject).GenerateQueries
- uid: Inflatable.QueryProvider.Interfaces.IGenerator
  name: IGenerator
  href: api/Inflatable.QueryProvider.Interfaces.IGenerator.html
  commentId: T:Inflatable.QueryProvider.Interfaces.IGenerator
  fullName: Inflatable.QueryProvider.Interfaces.IGenerator
  nameWithType: IGenerator
- uid: Inflatable.QueryProvider.Interfaces.IGenerator.AssociatedType
  name: AssociatedType
  href: api/Inflatable.QueryProvider.Interfaces.IGenerator.html#Inflatable_QueryProvider_Interfaces_IGenerator_AssociatedType
  commentId: P:Inflatable.QueryProvider.Interfaces.IGenerator.AssociatedType
  fullName: Inflatable.QueryProvider.Interfaces.IGenerator.AssociatedType
  nameWithType: IGenerator.AssociatedType
- uid: Inflatable.QueryProvider.Interfaces.IGenerator.AssociatedType*
  name: AssociatedType
  href: api/Inflatable.QueryProvider.Interfaces.IGenerator.html#Inflatable_QueryProvider_Interfaces_IGenerator_AssociatedType_
  commentId: Overload:Inflatable.QueryProvider.Interfaces.IGenerator.AssociatedType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Interfaces.IGenerator.AssociatedType
  nameWithType: IGenerator.AssociatedType
- uid: Inflatable.QueryProvider.Interfaces.IGenerator.GenerateDeclarations(Inflatable.QueryProvider.Enums.QueryType)
  name: GenerateDeclarations(QueryType)
  href: api/Inflatable.QueryProvider.Interfaces.IGenerator.html#Inflatable_QueryProvider_Interfaces_IGenerator_GenerateDeclarations_Inflatable_QueryProvider_Enums_QueryType_
  commentId: M:Inflatable.QueryProvider.Interfaces.IGenerator.GenerateDeclarations(Inflatable.QueryProvider.Enums.QueryType)
  fullName: Inflatable.QueryProvider.Interfaces.IGenerator.GenerateDeclarations(Inflatable.QueryProvider.Enums.QueryType)
  nameWithType: IGenerator.GenerateDeclarations(QueryType)
- uid: Inflatable.QueryProvider.Interfaces.IGenerator.GenerateDeclarations*
  name: GenerateDeclarations
  href: api/Inflatable.QueryProvider.Interfaces.IGenerator.html#Inflatable_QueryProvider_Interfaces_IGenerator_GenerateDeclarations_
  commentId: Overload:Inflatable.QueryProvider.Interfaces.IGenerator.GenerateDeclarations
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Interfaces.IGenerator.GenerateDeclarations
  nameWithType: IGenerator.GenerateDeclarations
- uid: Inflatable.QueryProvider.Interfaces.IGenerator.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType,BigBook.Dynamo[])
  name: GenerateQueries(QueryType, Dynamo[])
  href: api/Inflatable.QueryProvider.Interfaces.IGenerator.html#Inflatable_QueryProvider_Interfaces_IGenerator_GenerateQueries_Inflatable_QueryProvider_Enums_QueryType_BigBook_Dynamo___
  commentId: M:Inflatable.QueryProvider.Interfaces.IGenerator.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType,BigBook.Dynamo[])
  name.vb: GenerateQueries(QueryType, Dynamo())
  fullName: Inflatable.QueryProvider.Interfaces.IGenerator.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType, BigBook.Dynamo[])
  fullName.vb: Inflatable.QueryProvider.Interfaces.IGenerator.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType, BigBook.Dynamo())
  nameWithType: IGenerator.GenerateQueries(QueryType, Dynamo[])
  nameWithType.vb: IGenerator.GenerateQueries(QueryType, Dynamo())
- uid: Inflatable.QueryProvider.Interfaces.IGenerator.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType,System.Object,Inflatable.ClassMapper.Interfaces.IClassProperty)
  name: GenerateQueries(QueryType, object, IClassProperty)
  href: api/Inflatable.QueryProvider.Interfaces.IGenerator.html#Inflatable_QueryProvider_Interfaces_IGenerator_GenerateQueries_Inflatable_QueryProvider_Enums_QueryType_System_Object_Inflatable_ClassMapper_Interfaces_IClassProperty_
  commentId: M:Inflatable.QueryProvider.Interfaces.IGenerator.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType,System.Object,Inflatable.ClassMapper.Interfaces.IClassProperty)
  name.vb: GenerateQueries(QueryType, Object, IClassProperty)
  fullName: Inflatable.QueryProvider.Interfaces.IGenerator.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType, object, Inflatable.ClassMapper.Interfaces.IClassProperty)
  fullName.vb: Inflatable.QueryProvider.Interfaces.IGenerator.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType, Object, Inflatable.ClassMapper.Interfaces.IClassProperty)
  nameWithType: IGenerator.GenerateQueries(QueryType, object, IClassProperty)
  nameWithType.vb: IGenerator.GenerateQueries(QueryType, Object, IClassProperty)
- uid: Inflatable.QueryProvider.Interfaces.IGenerator.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType,System.Object)
  name: GenerateQueries(QueryType, object)
  href: api/Inflatable.QueryProvider.Interfaces.IGenerator.html#Inflatable_QueryProvider_Interfaces_IGenerator_GenerateQueries_Inflatable_QueryProvider_Enums_QueryType_System_Object_
  commentId: M:Inflatable.QueryProvider.Interfaces.IGenerator.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType,System.Object)
  name.vb: GenerateQueries(QueryType, Object)
  fullName: Inflatable.QueryProvider.Interfaces.IGenerator.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType, object)
  fullName.vb: Inflatable.QueryProvider.Interfaces.IGenerator.GenerateQueries(Inflatable.QueryProvider.Enums.QueryType, Object)
  nameWithType: IGenerator.GenerateQueries(QueryType, object)
  nameWithType.vb: IGenerator.GenerateQueries(QueryType, Object)
- uid: Inflatable.QueryProvider.Interfaces.IGenerator.GenerateQueries*
  name: GenerateQueries
  href: api/Inflatable.QueryProvider.Interfaces.IGenerator.html#Inflatable_QueryProvider_Interfaces_IGenerator_GenerateQueries_
  commentId: Overload:Inflatable.QueryProvider.Interfaces.IGenerator.GenerateQueries
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Interfaces.IGenerator.GenerateQueries
  nameWithType: IGenerator.GenerateQueries
- uid: Inflatable.QueryProvider.Interfaces.IGenerator`1
  name: IGenerator<TMappedClass>
  href: api/Inflatable.QueryProvider.Interfaces.IGenerator-1.html
  commentId: T:Inflatable.QueryProvider.Interfaces.IGenerator`1
  name.vb: IGenerator(Of TMappedClass)
  fullName: Inflatable.QueryProvider.Interfaces.IGenerator<TMappedClass>
  fullName.vb: Inflatable.QueryProvider.Interfaces.IGenerator(Of TMappedClass)
  nameWithType: IGenerator<TMappedClass>
  nameWithType.vb: IGenerator(Of TMappedClass)
- uid: Inflatable.QueryProvider.Interfaces.IGenerator`1.GenerateQueries(Inflatable.LinqExpression.Interfaces.IQueryData)
  name: GenerateQueries(IQueryData)
  href: api/Inflatable.QueryProvider.Interfaces.IGenerator-1.html#Inflatable_QueryProvider_Interfaces_IGenerator_1_GenerateQueries_Inflatable_LinqExpression_Interfaces_IQueryData_
  commentId: M:Inflatable.QueryProvider.Interfaces.IGenerator`1.GenerateQueries(Inflatable.LinqExpression.Interfaces.IQueryData)
  fullName: Inflatable.QueryProvider.Interfaces.IGenerator<TMappedClass>.GenerateQueries(Inflatable.LinqExpression.Interfaces.IQueryData)
  fullName.vb: Inflatable.QueryProvider.Interfaces.IGenerator(Of TMappedClass).GenerateQueries(Inflatable.LinqExpression.Interfaces.IQueryData)
  nameWithType: IGenerator<TMappedClass>.GenerateQueries(IQueryData)
  nameWithType.vb: IGenerator(Of TMappedClass).GenerateQueries(IQueryData)
- uid: Inflatable.QueryProvider.Interfaces.IGenerator`1.GenerateQueries*
  name: GenerateQueries
  href: api/Inflatable.QueryProvider.Interfaces.IGenerator-1.html#Inflatable_QueryProvider_Interfaces_IGenerator_1_GenerateQueries_
  commentId: Overload:Inflatable.QueryProvider.Interfaces.IGenerator`1.GenerateQueries
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Interfaces.IGenerator<TMappedClass>.GenerateQueries
  fullName.vb: Inflatable.QueryProvider.Interfaces.IGenerator(Of TMappedClass).GenerateQueries
  nameWithType: IGenerator<TMappedClass>.GenerateQueries
  nameWithType.vb: IGenerator(Of TMappedClass).GenerateQueries
- uid: Inflatable.QueryProvider.Interfaces.IGenerator`1.QueryGenerators
  name: QueryGenerators
  href: api/Inflatable.QueryProvider.Interfaces.IGenerator-1.html#Inflatable_QueryProvider_Interfaces_IGenerator_1_QueryGenerators
  commentId: P:Inflatable.QueryProvider.Interfaces.IGenerator`1.QueryGenerators
  fullName: Inflatable.QueryProvider.Interfaces.IGenerator<TMappedClass>.QueryGenerators
  fullName.vb: Inflatable.QueryProvider.Interfaces.IGenerator(Of TMappedClass).QueryGenerators
  nameWithType: IGenerator<TMappedClass>.QueryGenerators
  nameWithType.vb: IGenerator(Of TMappedClass).QueryGenerators
- uid: Inflatable.QueryProvider.Interfaces.IGenerator`1.QueryGenerators*
  name: QueryGenerators
  href: api/Inflatable.QueryProvider.Interfaces.IGenerator-1.html#Inflatable_QueryProvider_Interfaces_IGenerator_1_QueryGenerators_
  commentId: Overload:Inflatable.QueryProvider.Interfaces.IGenerator`1.QueryGenerators
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Interfaces.IGenerator<TMappedClass>.QueryGenerators
  fullName.vb: Inflatable.QueryProvider.Interfaces.IGenerator(Of TMappedClass).QueryGenerators
  nameWithType: IGenerator<TMappedClass>.QueryGenerators
  nameWithType.vb: IGenerator(Of TMappedClass).QueryGenerators
- uid: Inflatable.QueryProvider.Interfaces.ILinqQueryGenerator`1
  name: ILinqQueryGenerator<TObject>
  href: api/Inflatable.QueryProvider.Interfaces.ILinqQueryGenerator-1.html
  commentId: T:Inflatable.QueryProvider.Interfaces.ILinqQueryGenerator`1
  name.vb: ILinqQueryGenerator(Of TObject)
  fullName: Inflatable.QueryProvider.Interfaces.ILinqQueryGenerator<TObject>
  fullName.vb: Inflatable.QueryProvider.Interfaces.ILinqQueryGenerator(Of TObject)
  nameWithType: ILinqQueryGenerator<TObject>
  nameWithType.vb: ILinqQueryGenerator(Of TObject)
- uid: Inflatable.QueryProvider.Interfaces.ILinqQueryGenerator`1.GenerateQueries(Inflatable.LinqExpression.QueryData{`0})
  name: GenerateQueries(QueryData<TObject>)
  href: api/Inflatable.QueryProvider.Interfaces.ILinqQueryGenerator-1.html#Inflatable_QueryProvider_Interfaces_ILinqQueryGenerator_1_GenerateQueries_Inflatable_LinqExpression_QueryData__0__
  commentId: M:Inflatable.QueryProvider.Interfaces.ILinqQueryGenerator`1.GenerateQueries(Inflatable.LinqExpression.QueryData{`0})
  name.vb: GenerateQueries(QueryData(Of TObject))
  fullName: Inflatable.QueryProvider.Interfaces.ILinqQueryGenerator<TObject>.GenerateQueries(Inflatable.LinqExpression.QueryData<TObject>)
  fullName.vb: Inflatable.QueryProvider.Interfaces.ILinqQueryGenerator(Of TObject).GenerateQueries(Inflatable.LinqExpression.QueryData(Of TObject))
  nameWithType: ILinqQueryGenerator<TObject>.GenerateQueries(QueryData<TObject>)
  nameWithType.vb: ILinqQueryGenerator(Of TObject).GenerateQueries(QueryData(Of TObject))
- uid: Inflatable.QueryProvider.Interfaces.ILinqQueryGenerator`1.GenerateQueries*
  name: GenerateQueries
  href: api/Inflatable.QueryProvider.Interfaces.ILinqQueryGenerator-1.html#Inflatable_QueryProvider_Interfaces_ILinqQueryGenerator_1_GenerateQueries_
  commentId: Overload:Inflatable.QueryProvider.Interfaces.ILinqQueryGenerator`1.GenerateQueries
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Interfaces.ILinqQueryGenerator<TObject>.GenerateQueries
  fullName.vb: Inflatable.QueryProvider.Interfaces.ILinqQueryGenerator(Of TObject).GenerateQueries
  nameWithType: ILinqQueryGenerator<TObject>.GenerateQueries
  nameWithType.vb: ILinqQueryGenerator(Of TObject).GenerateQueries
- uid: Inflatable.QueryProvider.Interfaces.IPropertyQueryGenerator`1
  name: IPropertyQueryGenerator<TObject>
  href: api/Inflatable.QueryProvider.Interfaces.IPropertyQueryGenerator-1.html
  commentId: T:Inflatable.QueryProvider.Interfaces.IPropertyQueryGenerator`1
  name.vb: IPropertyQueryGenerator(Of TObject)
  fullName: Inflatable.QueryProvider.Interfaces.IPropertyQueryGenerator<TObject>
  fullName.vb: Inflatable.QueryProvider.Interfaces.IPropertyQueryGenerator(Of TObject)
  nameWithType: IPropertyQueryGenerator<TObject>
  nameWithType.vb: IPropertyQueryGenerator(Of TObject)
- uid: Inflatable.QueryProvider.Interfaces.IPropertyQueryGenerator`1.GenerateQueries(`0,Inflatable.ClassMapper.Interfaces.IClassProperty)
  name: GenerateQueries(TObject, IClassProperty)
  href: api/Inflatable.QueryProvider.Interfaces.IPropertyQueryGenerator-1.html#Inflatable_QueryProvider_Interfaces_IPropertyQueryGenerator_1_GenerateQueries__0_Inflatable_ClassMapper_Interfaces_IClassProperty_
  commentId: M:Inflatable.QueryProvider.Interfaces.IPropertyQueryGenerator`1.GenerateQueries(`0,Inflatable.ClassMapper.Interfaces.IClassProperty)
  fullName: Inflatable.QueryProvider.Interfaces.IPropertyQueryGenerator<TObject>.GenerateQueries(TObject, Inflatable.ClassMapper.Interfaces.IClassProperty)
  fullName.vb: Inflatable.QueryProvider.Interfaces.IPropertyQueryGenerator(Of TObject).GenerateQueries(TObject, Inflatable.ClassMapper.Interfaces.IClassProperty)
  nameWithType: IPropertyQueryGenerator<TObject>.GenerateQueries(TObject, IClassProperty)
  nameWithType.vb: IPropertyQueryGenerator(Of TObject).GenerateQueries(TObject, IClassProperty)
- uid: Inflatable.QueryProvider.Interfaces.IPropertyQueryGenerator`1.GenerateQueries*
  name: GenerateQueries
  href: api/Inflatable.QueryProvider.Interfaces.IPropertyQueryGenerator-1.html#Inflatable_QueryProvider_Interfaces_IPropertyQueryGenerator_1_GenerateQueries_
  commentId: Overload:Inflatable.QueryProvider.Interfaces.IPropertyQueryGenerator`1.GenerateQueries
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Interfaces.IPropertyQueryGenerator<TObject>.GenerateQueries
  fullName.vb: Inflatable.QueryProvider.Interfaces.IPropertyQueryGenerator(Of TObject).GenerateQueries
  nameWithType: IPropertyQueryGenerator<TObject>.GenerateQueries
  nameWithType.vb: IPropertyQueryGenerator(Of TObject).GenerateQueries
- uid: Inflatable.QueryProvider.Interfaces.IQueries
  name: IQueries
  href: api/Inflatable.QueryProvider.Interfaces.IQueries.html
  commentId: T:Inflatable.QueryProvider.Interfaces.IQueries
  fullName: Inflatable.QueryProvider.Interfaces.IQueries
  nameWithType: IQueries
- uid: Inflatable.QueryProvider.Interfaces.IQuery
  name: IQuery
  href: api/Inflatable.QueryProvider.Interfaces.IQuery.html
  commentId: T:Inflatable.QueryProvider.Interfaces.IQuery
  fullName: Inflatable.QueryProvider.Interfaces.IQuery
  nameWithType: IQuery
- uid: Inflatable.QueryProvider.Interfaces.IQuery.DatabaseCommandType
  name: DatabaseCommandType
  href: api/Inflatable.QueryProvider.Interfaces.IQuery.html#Inflatable_QueryProvider_Interfaces_IQuery_DatabaseCommandType
  commentId: P:Inflatable.QueryProvider.Interfaces.IQuery.DatabaseCommandType
  fullName: Inflatable.QueryProvider.Interfaces.IQuery.DatabaseCommandType
  nameWithType: IQuery.DatabaseCommandType
- uid: Inflatable.QueryProvider.Interfaces.IQuery.DatabaseCommandType*
  name: DatabaseCommandType
  href: api/Inflatable.QueryProvider.Interfaces.IQuery.html#Inflatable_QueryProvider_Interfaces_IQuery_DatabaseCommandType_
  commentId: Overload:Inflatable.QueryProvider.Interfaces.IQuery.DatabaseCommandType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Interfaces.IQuery.DatabaseCommandType
  nameWithType: IQuery.DatabaseCommandType
- uid: Inflatable.QueryProvider.Interfaces.IQuery.Parameters
  name: Parameters
  href: api/Inflatable.QueryProvider.Interfaces.IQuery.html#Inflatable_QueryProvider_Interfaces_IQuery_Parameters
  commentId: P:Inflatable.QueryProvider.Interfaces.IQuery.Parameters
  fullName: Inflatable.QueryProvider.Interfaces.IQuery.Parameters
  nameWithType: IQuery.Parameters
- uid: Inflatable.QueryProvider.Interfaces.IQuery.Parameters*
  name: Parameters
  href: api/Inflatable.QueryProvider.Interfaces.IQuery.html#Inflatable_QueryProvider_Interfaces_IQuery_Parameters_
  commentId: Overload:Inflatable.QueryProvider.Interfaces.IQuery.Parameters
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Interfaces.IQuery.Parameters
  nameWithType: IQuery.Parameters
- uid: Inflatable.QueryProvider.Interfaces.IQuery.QueryString
  name: QueryString
  href: api/Inflatable.QueryProvider.Interfaces.IQuery.html#Inflatable_QueryProvider_Interfaces_IQuery_QueryString
  commentId: P:Inflatable.QueryProvider.Interfaces.IQuery.QueryString
  fullName: Inflatable.QueryProvider.Interfaces.IQuery.QueryString
  nameWithType: IQuery.QueryString
- uid: Inflatable.QueryProvider.Interfaces.IQuery.QueryString*
  name: QueryString
  href: api/Inflatable.QueryProvider.Interfaces.IQuery.html#Inflatable_QueryProvider_Interfaces_IQuery_QueryString_
  commentId: Overload:Inflatable.QueryProvider.Interfaces.IQuery.QueryString
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Interfaces.IQuery.QueryString
  nameWithType: IQuery.QueryString
- uid: Inflatable.QueryProvider.Interfaces.IQuery.QueryType
  name: QueryType
  href: api/Inflatable.QueryProvider.Interfaces.IQuery.html#Inflatable_QueryProvider_Interfaces_IQuery_QueryType
  commentId: P:Inflatable.QueryProvider.Interfaces.IQuery.QueryType
  fullName: Inflatable.QueryProvider.Interfaces.IQuery.QueryType
  nameWithType: IQuery.QueryType
- uid: Inflatable.QueryProvider.Interfaces.IQuery.QueryType*
  name: QueryType
  href: api/Inflatable.QueryProvider.Interfaces.IQuery.html#Inflatable_QueryProvider_Interfaces_IQuery_QueryType_
  commentId: Overload:Inflatable.QueryProvider.Interfaces.IQuery.QueryType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Interfaces.IQuery.QueryType
  nameWithType: IQuery.QueryType
- uid: Inflatable.QueryProvider.Interfaces.IQuery.ReturnType
  name: ReturnType
  href: api/Inflatable.QueryProvider.Interfaces.IQuery.html#Inflatable_QueryProvider_Interfaces_IQuery_ReturnType
  commentId: P:Inflatable.QueryProvider.Interfaces.IQuery.ReturnType
  fullName: Inflatable.QueryProvider.Interfaces.IQuery.ReturnType
  nameWithType: IQuery.ReturnType
- uid: Inflatable.QueryProvider.Interfaces.IQuery.ReturnType*
  name: ReturnType
  href: api/Inflatable.QueryProvider.Interfaces.IQuery.html#Inflatable_QueryProvider_Interfaces_IQuery_ReturnType_
  commentId: Overload:Inflatable.QueryProvider.Interfaces.IQuery.ReturnType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Interfaces.IQuery.ReturnType
  nameWithType: IQuery.ReturnType
- uid: Inflatable.QueryProvider.Interfaces.IQueryGenerator`1
  name: IQueryGenerator<TObject>
  href: api/Inflatable.QueryProvider.Interfaces.IQueryGenerator-1.html
  commentId: T:Inflatable.QueryProvider.Interfaces.IQueryGenerator`1
  name.vb: IQueryGenerator(Of TObject)
  fullName: Inflatable.QueryProvider.Interfaces.IQueryGenerator<TObject>
  fullName.vb: Inflatable.QueryProvider.Interfaces.IQueryGenerator(Of TObject)
  nameWithType: IQueryGenerator<TObject>
  nameWithType.vb: IQueryGenerator(Of TObject)
- uid: Inflatable.QueryProvider.Interfaces.IQueryGenerator`1.GenerateDeclarations
  name: GenerateDeclarations()
  href: api/Inflatable.QueryProvider.Interfaces.IQueryGenerator-1.html#Inflatable_QueryProvider_Interfaces_IQueryGenerator_1_GenerateDeclarations
  commentId: M:Inflatable.QueryProvider.Interfaces.IQueryGenerator`1.GenerateDeclarations
  fullName: Inflatable.QueryProvider.Interfaces.IQueryGenerator<TObject>.GenerateDeclarations()
  fullName.vb: Inflatable.QueryProvider.Interfaces.IQueryGenerator(Of TObject).GenerateDeclarations()
  nameWithType: IQueryGenerator<TObject>.GenerateDeclarations()
  nameWithType.vb: IQueryGenerator(Of TObject).GenerateDeclarations()
- uid: Inflatable.QueryProvider.Interfaces.IQueryGenerator`1.GenerateDeclarations*
  name: GenerateDeclarations
  href: api/Inflatable.QueryProvider.Interfaces.IQueryGenerator-1.html#Inflatable_QueryProvider_Interfaces_IQueryGenerator_1_GenerateDeclarations_
  commentId: Overload:Inflatable.QueryProvider.Interfaces.IQueryGenerator`1.GenerateDeclarations
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Interfaces.IQueryGenerator<TObject>.GenerateDeclarations
  fullName.vb: Inflatable.QueryProvider.Interfaces.IQueryGenerator(Of TObject).GenerateDeclarations
  nameWithType: IQueryGenerator<TObject>.GenerateDeclarations
  nameWithType.vb: IQueryGenerator(Of TObject).GenerateDeclarations
- uid: Inflatable.QueryProvider.Interfaces.IQueryGenerator`1.GenerateQueries(`0)
  name: GenerateQueries(TObject)
  href: api/Inflatable.QueryProvider.Interfaces.IQueryGenerator-1.html#Inflatable_QueryProvider_Interfaces_IQueryGenerator_1_GenerateQueries__0_
  commentId: M:Inflatable.QueryProvider.Interfaces.IQueryGenerator`1.GenerateQueries(`0)
  fullName: Inflatable.QueryProvider.Interfaces.IQueryGenerator<TObject>.GenerateQueries(TObject)
  fullName.vb: Inflatable.QueryProvider.Interfaces.IQueryGenerator(Of TObject).GenerateQueries(TObject)
  nameWithType: IQueryGenerator<TObject>.GenerateQueries(TObject)
  nameWithType.vb: IQueryGenerator(Of TObject).GenerateQueries(TObject)
- uid: Inflatable.QueryProvider.Interfaces.IQueryGenerator`1.GenerateQueries*
  name: GenerateQueries
  href: api/Inflatable.QueryProvider.Interfaces.IQueryGenerator-1.html#Inflatable_QueryProvider_Interfaces_IQueryGenerator_1_GenerateQueries_
  commentId: Overload:Inflatable.QueryProvider.Interfaces.IQueryGenerator`1.GenerateQueries
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Interfaces.IQueryGenerator<TObject>.GenerateQueries
  fullName.vb: Inflatable.QueryProvider.Interfaces.IQueryGenerator(Of TObject).GenerateQueries
  nameWithType: IQueryGenerator<TObject>.GenerateQueries
  nameWithType.vb: IQueryGenerator(Of TObject).GenerateQueries
- uid: Inflatable.QueryProvider.Interfaces.IQueryGenerator`1.QueryType
  name: QueryType
  href: api/Inflatable.QueryProvider.Interfaces.IQueryGenerator-1.html#Inflatable_QueryProvider_Interfaces_IQueryGenerator_1_QueryType
  commentId: P:Inflatable.QueryProvider.Interfaces.IQueryGenerator`1.QueryType
  fullName: Inflatable.QueryProvider.Interfaces.IQueryGenerator<TObject>.QueryType
  fullName.vb: Inflatable.QueryProvider.Interfaces.IQueryGenerator(Of TObject).QueryType
  nameWithType: IQueryGenerator<TObject>.QueryType
  nameWithType.vb: IQueryGenerator(Of TObject).QueryType
- uid: Inflatable.QueryProvider.Interfaces.IQueryGenerator`1.QueryType*
  name: QueryType
  href: api/Inflatable.QueryProvider.Interfaces.IQueryGenerator-1.html#Inflatable_QueryProvider_Interfaces_IQueryGenerator_1_QueryType_
  commentId: Overload:Inflatable.QueryProvider.Interfaces.IQueryGenerator`1.QueryType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Interfaces.IQueryGenerator<TObject>.QueryType
  fullName.vb: Inflatable.QueryProvider.Interfaces.IQueryGenerator(Of TObject).QueryType
  nameWithType: IQueryGenerator<TObject>.QueryType
  nameWithType.vb: IQueryGenerator(Of TObject).QueryType
- uid: Inflatable.QueryProvider.Interfaces.IQueryProvider
  name: IQueryProvider
  href: api/Inflatable.QueryProvider.Interfaces.IQueryProvider.html
  commentId: T:Inflatable.QueryProvider.Interfaces.IQueryProvider
  fullName: Inflatable.QueryProvider.Interfaces.IQueryProvider
  nameWithType: IQueryProvider
- uid: Inflatable.QueryProvider.Interfaces.IQueryProvider.Batch(Inflatable.Interfaces.IDatabase)
  name: Batch(IDatabase)
  href: api/Inflatable.QueryProvider.Interfaces.IQueryProvider.html#Inflatable_QueryProvider_Interfaces_IQueryProvider_Batch_Inflatable_Interfaces_IDatabase_
  commentId: M:Inflatable.QueryProvider.Interfaces.IQueryProvider.Batch(Inflatable.Interfaces.IDatabase)
  fullName: Inflatable.QueryProvider.Interfaces.IQueryProvider.Batch(Inflatable.Interfaces.IDatabase)
  nameWithType: IQueryProvider.Batch(IDatabase)
- uid: Inflatable.QueryProvider.Interfaces.IQueryProvider.Batch*
  name: Batch
  href: api/Inflatable.QueryProvider.Interfaces.IQueryProvider.html#Inflatable_QueryProvider_Interfaces_IQueryProvider_Batch_
  commentId: Overload:Inflatable.QueryProvider.Interfaces.IQueryProvider.Batch
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Interfaces.IQueryProvider.Batch
  nameWithType: IQueryProvider.Batch
- uid: Inflatable.QueryProvider.Interfaces.IQueryProvider.CreateGenerator*
  name: CreateGenerator
  href: api/Inflatable.QueryProvider.Interfaces.IQueryProvider.html#Inflatable_QueryProvider_Interfaces_IQueryProvider_CreateGenerator_
  commentId: Overload:Inflatable.QueryProvider.Interfaces.IQueryProvider.CreateGenerator
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Interfaces.IQueryProvider.CreateGenerator
  nameWithType: IQueryProvider.CreateGenerator
- uid: Inflatable.QueryProvider.Interfaces.IQueryProvider.CreateGenerator``1(Inflatable.ClassMapper.IMappingSource)
  name: CreateGenerator<TMappedClass>(IMappingSource)
  href: api/Inflatable.QueryProvider.Interfaces.IQueryProvider.html#Inflatable_QueryProvider_Interfaces_IQueryProvider_CreateGenerator__1_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.QueryProvider.Interfaces.IQueryProvider.CreateGenerator``1(Inflatable.ClassMapper.IMappingSource)
  name.vb: CreateGenerator(Of TMappedClass)(IMappingSource)
  fullName: Inflatable.QueryProvider.Interfaces.IQueryProvider.CreateGenerator<TMappedClass>(Inflatable.ClassMapper.IMappingSource)
  fullName.vb: Inflatable.QueryProvider.Interfaces.IQueryProvider.CreateGenerator(Of TMappedClass)(Inflatable.ClassMapper.IMappingSource)
  nameWithType: IQueryProvider.CreateGenerator<TMappedClass>(IMappingSource)
  nameWithType.vb: IQueryProvider.CreateGenerator(Of TMappedClass)(IMappingSource)
- uid: Inflatable.QueryProvider.Interfaces.IQueryProvider.Providers
  name: Providers
  href: api/Inflatable.QueryProvider.Interfaces.IQueryProvider.html#Inflatable_QueryProvider_Interfaces_IQueryProvider_Providers
  commentId: P:Inflatable.QueryProvider.Interfaces.IQueryProvider.Providers
  fullName: Inflatable.QueryProvider.Interfaces.IQueryProvider.Providers
  nameWithType: IQueryProvider.Providers
- uid: Inflatable.QueryProvider.Interfaces.IQueryProvider.Providers*
  name: Providers
  href: api/Inflatable.QueryProvider.Interfaces.IQueryProvider.html#Inflatable_QueryProvider_Interfaces_IQueryProvider_Providers_
  commentId: Overload:Inflatable.QueryProvider.Interfaces.IQueryProvider.Providers
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Interfaces.IQueryProvider.Providers
  nameWithType: IQueryProvider.Providers
- uid: Inflatable.QueryProvider.MappingData
  name: Inflatable.QueryProvider.MappingData
  href: api/Inflatable.QueryProvider.MappingData.html
  commentId: N:Inflatable.QueryProvider.MappingData
  fullName: Inflatable.QueryProvider.MappingData
  nameWithType: Inflatable.QueryProvider.MappingData
- uid: Inflatable.QueryProvider.MappingData.IQueryMapping
  name: IQueryMapping
  href: api/Inflatable.QueryProvider.MappingData.IQueryMapping.html
  commentId: T:Inflatable.QueryProvider.MappingData.IQueryMapping
  fullName: Inflatable.QueryProvider.MappingData.IQueryMapping
  nameWithType: IQueryMapping
- uid: Inflatable.QueryProvider.MappingData.IQueryMapping.IDProperties
  name: IDProperties
  href: api/Inflatable.QueryProvider.MappingData.IQueryMapping.html#Inflatable_QueryProvider_MappingData_IQueryMapping_IDProperties
  commentId: P:Inflatable.QueryProvider.MappingData.IQueryMapping.IDProperties
  fullName: Inflatable.QueryProvider.MappingData.IQueryMapping.IDProperties
  nameWithType: IQueryMapping.IDProperties
- uid: Inflatable.QueryProvider.MappingData.IQueryMapping.IDProperties*
  name: IDProperties
  href: api/Inflatable.QueryProvider.MappingData.IQueryMapping.html#Inflatable_QueryProvider_MappingData_IQueryMapping_IDProperties_
  commentId: Overload:Inflatable.QueryProvider.MappingData.IQueryMapping.IDProperties
  isSpec: "True"
  fullName: Inflatable.QueryProvider.MappingData.IQueryMapping.IDProperties
  nameWithType: IQueryMapping.IDProperties
- uid: Inflatable.QueryProvider.MappingData.IQueryMapping.ParentMappings
  name: ParentMappings
  href: api/Inflatable.QueryProvider.MappingData.IQueryMapping.html#Inflatable_QueryProvider_MappingData_IQueryMapping_ParentMappings
  commentId: P:Inflatable.QueryProvider.MappingData.IQueryMapping.ParentMappings
  fullName: Inflatable.QueryProvider.MappingData.IQueryMapping.ParentMappings
  nameWithType: IQueryMapping.ParentMappings
- uid: Inflatable.QueryProvider.MappingData.IQueryMapping.ParentMappings*
  name: ParentMappings
  href: api/Inflatable.QueryProvider.MappingData.IQueryMapping.html#Inflatable_QueryProvider_MappingData_IQueryMapping_ParentMappings_
  commentId: Overload:Inflatable.QueryProvider.MappingData.IQueryMapping.ParentMappings
  isSpec: "True"
  fullName: Inflatable.QueryProvider.MappingData.IQueryMapping.ParentMappings
  nameWithType: IQueryMapping.ParentMappings
- uid: Inflatable.QueryProvider.MappingData.IQueryMapping.PrimaryParentMapping
  name: PrimaryParentMapping
  href: api/Inflatable.QueryProvider.MappingData.IQueryMapping.html#Inflatable_QueryProvider_MappingData_IQueryMapping_PrimaryParentMapping
  commentId: P:Inflatable.QueryProvider.MappingData.IQueryMapping.PrimaryParentMapping
  fullName: Inflatable.QueryProvider.MappingData.IQueryMapping.PrimaryParentMapping
  nameWithType: IQueryMapping.PrimaryParentMapping
- uid: Inflatable.QueryProvider.MappingData.IQueryMapping.PrimaryParentMapping*
  name: PrimaryParentMapping
  href: api/Inflatable.QueryProvider.MappingData.IQueryMapping.html#Inflatable_QueryProvider_MappingData_IQueryMapping_PrimaryParentMapping_
  commentId: Overload:Inflatable.QueryProvider.MappingData.IQueryMapping.PrimaryParentMapping
  isSpec: "True"
  fullName: Inflatable.QueryProvider.MappingData.IQueryMapping.PrimaryParentMapping
  nameWithType: IQueryMapping.PrimaryParentMapping
- uid: Inflatable.QueryProvider.MappingData.IQueryMapping.Schema
  name: Schema
  href: api/Inflatable.QueryProvider.MappingData.IQueryMapping.html#Inflatable_QueryProvider_MappingData_IQueryMapping_Schema
  commentId: P:Inflatable.QueryProvider.MappingData.IQueryMapping.Schema
  fullName: Inflatable.QueryProvider.MappingData.IQueryMapping.Schema
  nameWithType: IQueryMapping.Schema
- uid: Inflatable.QueryProvider.MappingData.IQueryMapping.Schema*
  name: Schema
  href: api/Inflatable.QueryProvider.MappingData.IQueryMapping.html#Inflatable_QueryProvider_MappingData_IQueryMapping_Schema_
  commentId: Overload:Inflatable.QueryProvider.MappingData.IQueryMapping.Schema
  isSpec: "True"
  fullName: Inflatable.QueryProvider.MappingData.IQueryMapping.Schema
  nameWithType: IQueryMapping.Schema
- uid: Inflatable.QueryProvider.MappingData.IQueryPropertyMapping
  name: IQueryPropertyMapping
  href: api/Inflatable.QueryProvider.MappingData.IQueryPropertyMapping.html
  commentId: T:Inflatable.QueryProvider.MappingData.IQueryPropertyMapping
  fullName: Inflatable.QueryProvider.MappingData.IQueryPropertyMapping
  nameWithType: IQueryPropertyMapping
- uid: Inflatable.QueryProvider.MappingData.IQueryPropertyMapping.ForeignIDs
  name: ForeignIDs
  href: api/Inflatable.QueryProvider.MappingData.IQueryPropertyMapping.html#Inflatable_QueryProvider_MappingData_IQueryPropertyMapping_ForeignIDs
  commentId: P:Inflatable.QueryProvider.MappingData.IQueryPropertyMapping.ForeignIDs
  fullName: Inflatable.QueryProvider.MappingData.IQueryPropertyMapping.ForeignIDs
  nameWithType: IQueryPropertyMapping.ForeignIDs
- uid: Inflatable.QueryProvider.MappingData.IQueryPropertyMapping.ForeignIDs*
  name: ForeignIDs
  href: api/Inflatable.QueryProvider.MappingData.IQueryPropertyMapping.html#Inflatable_QueryProvider_MappingData_IQueryPropertyMapping_ForeignIDs_
  commentId: Overload:Inflatable.QueryProvider.MappingData.IQueryPropertyMapping.ForeignIDs
  isSpec: "True"
  fullName: Inflatable.QueryProvider.MappingData.IQueryPropertyMapping.ForeignIDs
  nameWithType: IQueryPropertyMapping.ForeignIDs
- uid: Inflatable.QueryProvider.Providers.SQLServer
  name: Inflatable.QueryProvider.Providers.SQLServer
  href: api/Inflatable.QueryProvider.Providers.SQLServer.html
  commentId: N:Inflatable.QueryProvider.Providers.SQLServer
  fullName: Inflatable.QueryProvider.Providers.SQLServer
  nameWithType: Inflatable.QueryProvider.Providers.SQLServer
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators
  name: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.html
  commentId: N:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators
  nameWithType: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1
  name: DataLoadQuery<TMappedClass>
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery-1.html
  commentId: T:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1
  name.vb: DataLoadQuery(Of TMappedClass)
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery<TMappedClass>
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery(Of TMappedClass)
  nameWithType: DataLoadQuery<TMappedClass>
  nameWithType.vb: DataLoadQuery(Of TMappedClass)
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: DataLoadQuery(IMappingSource, ObjectPool<StringBuilder>)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DataLoadQuery_1__ctor_Inflatable_ClassMapper_IMappingSource_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: New(IMappingSource, ObjectPool(Of StringBuilder))
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery<TMappedClass>.DataLoadQuery(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery(Of TMappedClass).New(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: DataLoadQuery<TMappedClass>.DataLoadQuery(IMappingSource, ObjectPool<StringBuilder>)
  nameWithType.vb: DataLoadQuery(Of TMappedClass).New(IMappingSource, ObjectPool(Of StringBuilder))
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.#ctor*
  name: DataLoadQuery
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DataLoadQuery_1__ctor_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery<TMappedClass>.DataLoadQuery
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery(Of TMappedClass).New
  nameWithType: DataLoadQuery<TMappedClass>.DataLoadQuery
  nameWithType.vb: DataLoadQuery(Of TMappedClass).New
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.GenerateDeclarations
  name: GenerateDeclarations()
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DataLoadQuery_1_GenerateDeclarations
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.GenerateDeclarations
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery<TMappedClass>.GenerateDeclarations()
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery(Of TMappedClass).GenerateDeclarations()
  nameWithType: DataLoadQuery<TMappedClass>.GenerateDeclarations()
  nameWithType.vb: DataLoadQuery(Of TMappedClass).GenerateDeclarations()
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.GenerateDeclarations*
  name: GenerateDeclarations
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DataLoadQuery_1_GenerateDeclarations_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.GenerateDeclarations
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery<TMappedClass>.GenerateDeclarations
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery(Of TMappedClass).GenerateDeclarations
  nameWithType: DataLoadQuery<TMappedClass>.GenerateDeclarations
  nameWithType.vb: DataLoadQuery(Of TMappedClass).GenerateDeclarations
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.GenerateQueries(`0)
  name: GenerateQueries(TMappedClass)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DataLoadQuery_1_GenerateQueries__0_
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.GenerateQueries(`0)
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery<TMappedClass>.GenerateQueries(TMappedClass)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery(Of TMappedClass).GenerateQueries(TMappedClass)
  nameWithType: DataLoadQuery<TMappedClass>.GenerateQueries(TMappedClass)
  nameWithType.vb: DataLoadQuery(Of TMappedClass).GenerateQueries(TMappedClass)
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.GenerateQueries(BigBook.Dynamo[])
  name: GenerateQueries(Dynamo[])
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DataLoadQuery_1_GenerateQueries_BigBook_Dynamo___
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.GenerateQueries(BigBook.Dynamo[])
  name.vb: GenerateQueries(Dynamo())
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery<TMappedClass>.GenerateQueries(BigBook.Dynamo[])
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery(Of TMappedClass).GenerateQueries(BigBook.Dynamo())
  nameWithType: DataLoadQuery<TMappedClass>.GenerateQueries(Dynamo[])
  nameWithType.vb: DataLoadQuery(Of TMappedClass).GenerateQueries(Dynamo())
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.GenerateQueries*
  name: GenerateQueries
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DataLoadQuery_1_GenerateQueries_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.GenerateQueries
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery<TMappedClass>.GenerateQueries
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery(Of TMappedClass).GenerateQueries
  nameWithType: DataLoadQuery<TMappedClass>.GenerateQueries
  nameWithType.vb: DataLoadQuery(Of TMappedClass).GenerateQueries
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.IDColumnInfo
  name: IDColumnInfo
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DataLoadQuery_1_IDColumnInfo
  commentId: P:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.IDColumnInfo
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery<TMappedClass>.IDColumnInfo
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery(Of TMappedClass).IDColumnInfo
  nameWithType: DataLoadQuery<TMappedClass>.IDColumnInfo
  nameWithType.vb: DataLoadQuery(Of TMappedClass).IDColumnInfo
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.IDColumnInfo*
  name: IDColumnInfo
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DataLoadQuery_1_IDColumnInfo_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.IDColumnInfo
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery<TMappedClass>.IDColumnInfo
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery(Of TMappedClass).IDColumnInfo
  nameWithType: DataLoadQuery<TMappedClass>.IDColumnInfo
  nameWithType.vb: DataLoadQuery(Of TMappedClass).IDColumnInfo
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.QueryType
  name: QueryType
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DataLoadQuery_1_QueryType
  commentId: P:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.QueryType
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery<TMappedClass>.QueryType
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery(Of TMappedClass).QueryType
  nameWithType: DataLoadQuery<TMappedClass>.QueryType
  nameWithType.vb: DataLoadQuery(Of TMappedClass).QueryType
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.QueryType*
  name: QueryType
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DataLoadQuery_1_QueryType_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery`1.QueryType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery<TMappedClass>.QueryType
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DataLoadQuery(Of TMappedClass).QueryType
  nameWithType: DataLoadQuery<TMappedClass>.QueryType
  nameWithType.vb: DataLoadQuery(Of TMappedClass).QueryType
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery`1
  name: DeletePropertiesQuery<TMappedClass>
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery-1.html
  commentId: T:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery`1
  name.vb: DeletePropertiesQuery(Of TMappedClass)
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery<TMappedClass>
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery(Of TMappedClass)
  nameWithType: DeletePropertiesQuery<TMappedClass>
  nameWithType.vb: DeletePropertiesQuery(Of TMappedClass)
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: DeletePropertiesQuery(IMappingSource, ObjectPool<StringBuilder>)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DeletePropertiesQuery_1__ctor_Inflatable_ClassMapper_IMappingSource_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: New(IMappingSource, ObjectPool(Of StringBuilder))
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery<TMappedClass>.DeletePropertiesQuery(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery(Of TMappedClass).New(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: DeletePropertiesQuery<TMappedClass>.DeletePropertiesQuery(IMappingSource, ObjectPool<StringBuilder>)
  nameWithType.vb: DeletePropertiesQuery(Of TMappedClass).New(IMappingSource, ObjectPool(Of StringBuilder))
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery`1.#ctor*
  name: DeletePropertiesQuery
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DeletePropertiesQuery_1__ctor_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery<TMappedClass>.DeletePropertiesQuery
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery(Of TMappedClass).New
  nameWithType: DeletePropertiesQuery<TMappedClass>.DeletePropertiesQuery
  nameWithType.vb: DeletePropertiesQuery(Of TMappedClass).New
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery`1.GenerateDeclarations
  name: GenerateDeclarations()
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DeletePropertiesQuery_1_GenerateDeclarations
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery`1.GenerateDeclarations
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery<TMappedClass>.GenerateDeclarations()
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery(Of TMappedClass).GenerateDeclarations()
  nameWithType: DeletePropertiesQuery<TMappedClass>.GenerateDeclarations()
  nameWithType.vb: DeletePropertiesQuery(Of TMappedClass).GenerateDeclarations()
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery`1.GenerateDeclarations*
  name: GenerateDeclarations
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DeletePropertiesQuery_1_GenerateDeclarations_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery`1.GenerateDeclarations
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery<TMappedClass>.GenerateDeclarations
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery(Of TMappedClass).GenerateDeclarations
  nameWithType: DeletePropertiesQuery<TMappedClass>.GenerateDeclarations
  nameWithType.vb: DeletePropertiesQuery(Of TMappedClass).GenerateDeclarations
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery`1.GenerateQueries(`0,Inflatable.ClassMapper.Interfaces.IClassProperty)
  name: GenerateQueries(TMappedClass, IClassProperty)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DeletePropertiesQuery_1_GenerateQueries__0_Inflatable_ClassMapper_Interfaces_IClassProperty_
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery`1.GenerateQueries(`0,Inflatable.ClassMapper.Interfaces.IClassProperty)
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery<TMappedClass>.GenerateQueries(TMappedClass, Inflatable.ClassMapper.Interfaces.IClassProperty)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery(Of TMappedClass).GenerateQueries(TMappedClass, Inflatable.ClassMapper.Interfaces.IClassProperty)
  nameWithType: DeletePropertiesQuery<TMappedClass>.GenerateQueries(TMappedClass, IClassProperty)
  nameWithType.vb: DeletePropertiesQuery(Of TMappedClass).GenerateQueries(TMappedClass, IClassProperty)
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery`1.GenerateQueries*
  name: GenerateQueries
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DeletePropertiesQuery_1_GenerateQueries_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery`1.GenerateQueries
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery<TMappedClass>.GenerateQueries
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery(Of TMappedClass).GenerateQueries
  nameWithType: DeletePropertiesQuery<TMappedClass>.GenerateQueries
  nameWithType.vb: DeletePropertiesQuery(Of TMappedClass).GenerateQueries
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery`1.QueryType
  name: QueryType
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DeletePropertiesQuery_1_QueryType
  commentId: P:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery`1.QueryType
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery<TMappedClass>.QueryType
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery(Of TMappedClass).QueryType
  nameWithType: DeletePropertiesQuery<TMappedClass>.QueryType
  nameWithType.vb: DeletePropertiesQuery(Of TMappedClass).QueryType
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery`1.QueryType*
  name: QueryType
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DeletePropertiesQuery_1_QueryType_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery`1.QueryType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery<TMappedClass>.QueryType
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeletePropertiesQuery(Of TMappedClass).QueryType
  nameWithType: DeletePropertiesQuery<TMappedClass>.QueryType
  nameWithType.vb: DeletePropertiesQuery(Of TMappedClass).QueryType
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery`1
  name: DeleteQuery<TMappedClass>
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery-1.html
  commentId: T:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery`1
  name.vb: DeleteQuery(Of TMappedClass)
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery<TMappedClass>
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery(Of TMappedClass)
  nameWithType: DeleteQuery<TMappedClass>
  nameWithType.vb: DeleteQuery(Of TMappedClass)
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: DeleteQuery(IMappingSource, ObjectPool<StringBuilder>)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DeleteQuery_1__ctor_Inflatable_ClassMapper_IMappingSource_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: New(IMappingSource, ObjectPool(Of StringBuilder))
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery<TMappedClass>.DeleteQuery(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery(Of TMappedClass).New(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: DeleteQuery<TMappedClass>.DeleteQuery(IMappingSource, ObjectPool<StringBuilder>)
  nameWithType.vb: DeleteQuery(Of TMappedClass).New(IMappingSource, ObjectPool(Of StringBuilder))
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery`1.#ctor*
  name: DeleteQuery
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DeleteQuery_1__ctor_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery<TMappedClass>.DeleteQuery
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery(Of TMappedClass).New
  nameWithType: DeleteQuery<TMappedClass>.DeleteQuery
  nameWithType.vb: DeleteQuery(Of TMappedClass).New
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery`1.GenerateDeclarations
  name: GenerateDeclarations()
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DeleteQuery_1_GenerateDeclarations
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery`1.GenerateDeclarations
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery<TMappedClass>.GenerateDeclarations()
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery(Of TMappedClass).GenerateDeclarations()
  nameWithType: DeleteQuery<TMappedClass>.GenerateDeclarations()
  nameWithType.vb: DeleteQuery(Of TMappedClass).GenerateDeclarations()
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery`1.GenerateDeclarations*
  name: GenerateDeclarations
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DeleteQuery_1_GenerateDeclarations_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery`1.GenerateDeclarations
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery<TMappedClass>.GenerateDeclarations
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery(Of TMappedClass).GenerateDeclarations
  nameWithType: DeleteQuery<TMappedClass>.GenerateDeclarations
  nameWithType.vb: DeleteQuery(Of TMappedClass).GenerateDeclarations
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery`1.GenerateQueries(`0)
  name: GenerateQueries(TMappedClass)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DeleteQuery_1_GenerateQueries__0_
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery`1.GenerateQueries(`0)
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery<TMappedClass>.GenerateQueries(TMappedClass)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery(Of TMappedClass).GenerateQueries(TMappedClass)
  nameWithType: DeleteQuery<TMappedClass>.GenerateQueries(TMappedClass)
  nameWithType.vb: DeleteQuery(Of TMappedClass).GenerateQueries(TMappedClass)
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery`1.GenerateQueries*
  name: GenerateQueries
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DeleteQuery_1_GenerateQueries_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery`1.GenerateQueries
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery<TMappedClass>.GenerateQueries
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery(Of TMappedClass).GenerateQueries
  nameWithType: DeleteQuery<TMappedClass>.GenerateQueries
  nameWithType.vb: DeleteQuery(Of TMappedClass).GenerateQueries
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery`1.QueryType
  name: QueryType
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DeleteQuery_1_QueryType
  commentId: P:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery`1.QueryType
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery<TMappedClass>.QueryType
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery(Of TMappedClass).QueryType
  nameWithType: DeleteQuery<TMappedClass>.QueryType
  nameWithType.vb: DeleteQuery(Of TMappedClass).QueryType
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery`1.QueryType*
  name: QueryType
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_DeleteQuery_1_QueryType_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery`1.QueryType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery<TMappedClass>.QueryType
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.DeleteQuery(Of TMappedClass).QueryType
  nameWithType: DeleteQuery<TMappedClass>.QueryType
  nameWithType.vb: DeleteQuery(Of TMappedClass).QueryType
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses
  name: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.html
  commentId: N:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses
  nameWithType: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData
  name: QueryGeneratorData
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.html
  commentId: T:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData
  nameWithType: QueryGeneratorData
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.#ctor(Inflatable.Interfaces.IMapping,System.Collections.Generic.IEnumerable{Inflatable.ClassMapper.Interfaces.IIDProperty},System.String)
  name: QueryGeneratorData(IMapping, IEnumerable<IIDProperty>, string)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_HelperClasses_QueryGeneratorData__ctor_Inflatable_Interfaces_IMapping_System_Collections_Generic_IEnumerable_Inflatable_ClassMapper_Interfaces_IIDProperty__System_String_
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.#ctor(Inflatable.Interfaces.IMapping,System.Collections.Generic.IEnumerable{Inflatable.ClassMapper.Interfaces.IIDProperty},System.String)
  name.vb: New(IMapping, IEnumerable(Of IIDProperty), String)
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.QueryGeneratorData(Inflatable.Interfaces.IMapping, System.Collections.Generic.IEnumerable<Inflatable.ClassMapper.Interfaces.IIDProperty>, string)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.New(Inflatable.Interfaces.IMapping, System.Collections.Generic.IEnumerable(Of Inflatable.ClassMapper.Interfaces.IIDProperty), String)
  nameWithType: QueryGeneratorData.QueryGeneratorData(IMapping, IEnumerable<IIDProperty>, string)
  nameWithType.vb: QueryGeneratorData.New(IMapping, IEnumerable(Of IIDProperty), String)
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.#ctor*
  name: QueryGeneratorData
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_HelperClasses_QueryGeneratorData__ctor_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.QueryGeneratorData
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.New
  nameWithType: QueryGeneratorData.QueryGeneratorData
  nameWithType.vb: QueryGeneratorData.New
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.AssociatedMapping
  name: AssociatedMapping
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_HelperClasses_QueryGeneratorData_AssociatedMapping
  commentId: P:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.AssociatedMapping
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.AssociatedMapping
  nameWithType: QueryGeneratorData.AssociatedMapping
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.AssociatedMapping*
  name: AssociatedMapping
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_HelperClasses_QueryGeneratorData_AssociatedMapping_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.AssociatedMapping
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.AssociatedMapping
  nameWithType: QueryGeneratorData.AssociatedMapping
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.IDProperties
  name: IDProperties
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_HelperClasses_QueryGeneratorData_IDProperties
  commentId: P:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.IDProperties
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.IDProperties
  nameWithType: QueryGeneratorData.IDProperties
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.IDProperties*
  name: IDProperties
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_HelperClasses_QueryGeneratorData_IDProperties_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.IDProperties
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.IDProperties
  nameWithType: QueryGeneratorData.IDProperties
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.QueryText
  name: QueryText
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_HelperClasses_QueryGeneratorData_QueryText
  commentId: P:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.QueryText
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.QueryText
  nameWithType: QueryGeneratorData.QueryText
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.QueryText*
  name: QueryText
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_HelperClasses_QueryGeneratorData_QueryText_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.QueryText
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.HelperClasses.QueryGeneratorData.QueryText
  nameWithType: QueryGeneratorData.QueryText
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery`1
  name: InsertQuery<TMappedClass>
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery-1.html
  commentId: T:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery`1
  name.vb: InsertQuery(Of TMappedClass)
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery<TMappedClass>
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery(Of TMappedClass)
  nameWithType: InsertQuery<TMappedClass>
  nameWithType.vb: InsertQuery(Of TMappedClass)
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: InsertQuery(IMappingSource, ObjectPool<StringBuilder>)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_InsertQuery_1__ctor_Inflatable_ClassMapper_IMappingSource_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: New(IMappingSource, ObjectPool(Of StringBuilder))
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery<TMappedClass>.InsertQuery(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery(Of TMappedClass).New(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: InsertQuery<TMappedClass>.InsertQuery(IMappingSource, ObjectPool<StringBuilder>)
  nameWithType.vb: InsertQuery(Of TMappedClass).New(IMappingSource, ObjectPool(Of StringBuilder))
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery`1.#ctor*
  name: InsertQuery
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_InsertQuery_1__ctor_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery<TMappedClass>.InsertQuery
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery(Of TMappedClass).New
  nameWithType: InsertQuery<TMappedClass>.InsertQuery
  nameWithType.vb: InsertQuery(Of TMappedClass).New
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery`1.GenerateDeclarations
  name: GenerateDeclarations()
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_InsertQuery_1_GenerateDeclarations
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery`1.GenerateDeclarations
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery<TMappedClass>.GenerateDeclarations()
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery(Of TMappedClass).GenerateDeclarations()
  nameWithType: InsertQuery<TMappedClass>.GenerateDeclarations()
  nameWithType.vb: InsertQuery(Of TMappedClass).GenerateDeclarations()
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery`1.GenerateDeclarations*
  name: GenerateDeclarations
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_InsertQuery_1_GenerateDeclarations_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery`1.GenerateDeclarations
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery<TMappedClass>.GenerateDeclarations
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery(Of TMappedClass).GenerateDeclarations
  nameWithType: InsertQuery<TMappedClass>.GenerateDeclarations
  nameWithType.vb: InsertQuery(Of TMappedClass).GenerateDeclarations
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery`1.GenerateQueries(`0)
  name: GenerateQueries(TMappedClass)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_InsertQuery_1_GenerateQueries__0_
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery`1.GenerateQueries(`0)
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery<TMappedClass>.GenerateQueries(TMappedClass)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery(Of TMappedClass).GenerateQueries(TMappedClass)
  nameWithType: InsertQuery<TMappedClass>.GenerateQueries(TMappedClass)
  nameWithType.vb: InsertQuery(Of TMappedClass).GenerateQueries(TMappedClass)
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery`1.GenerateQueries*
  name: GenerateQueries
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_InsertQuery_1_GenerateQueries_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery`1.GenerateQueries
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery<TMappedClass>.GenerateQueries
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery(Of TMappedClass).GenerateQueries
  nameWithType: InsertQuery<TMappedClass>.GenerateQueries
  nameWithType.vb: InsertQuery(Of TMappedClass).GenerateQueries
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery`1.QueryType
  name: QueryType
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_InsertQuery_1_QueryType
  commentId: P:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery`1.QueryType
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery<TMappedClass>.QueryType
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery(Of TMappedClass).QueryType
  nameWithType: InsertQuery<TMappedClass>.QueryType
  nameWithType.vb: InsertQuery(Of TMappedClass).QueryType
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery`1.QueryType*
  name: QueryType
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_InsertQuery_1_QueryType_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery`1.QueryType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery<TMappedClass>.QueryType
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.InsertQuery(Of TMappedClass).QueryType
  nameWithType: InsertQuery<TMappedClass>.QueryType
  nameWithType.vb: InsertQuery(Of TMappedClass).QueryType
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator`1
  name: LinqQueryGenerator<TMappedClass>
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator-1.html
  commentId: T:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator`1
  name.vb: LinqQueryGenerator(Of TMappedClass)
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator<TMappedClass>
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator(Of TMappedClass)
  nameWithType: LinqQueryGenerator<TMappedClass>
  nameWithType.vb: LinqQueryGenerator(Of TMappedClass)
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: LinqQueryGenerator(IMappingSource, ObjectPool<StringBuilder>)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_LinqQueryGenerator_1__ctor_Inflatable_ClassMapper_IMappingSource_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: New(IMappingSource, ObjectPool(Of StringBuilder))
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator<TMappedClass>.LinqQueryGenerator(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator(Of TMappedClass).New(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: LinqQueryGenerator<TMappedClass>.LinqQueryGenerator(IMappingSource, ObjectPool<StringBuilder>)
  nameWithType.vb: LinqQueryGenerator(Of TMappedClass).New(IMappingSource, ObjectPool(Of StringBuilder))
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator`1.#ctor*
  name: LinqQueryGenerator
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_LinqQueryGenerator_1__ctor_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator<TMappedClass>.LinqQueryGenerator
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator(Of TMappedClass).New
  nameWithType: LinqQueryGenerator<TMappedClass>.LinqQueryGenerator
  nameWithType.vb: LinqQueryGenerator(Of TMappedClass).New
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator`1.GenerateDeclarations
  name: GenerateDeclarations()
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_LinqQueryGenerator_1_GenerateDeclarations
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator`1.GenerateDeclarations
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator<TMappedClass>.GenerateDeclarations()
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator(Of TMappedClass).GenerateDeclarations()
  nameWithType: LinqQueryGenerator<TMappedClass>.GenerateDeclarations()
  nameWithType.vb: LinqQueryGenerator(Of TMappedClass).GenerateDeclarations()
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator`1.GenerateDeclarations*
  name: GenerateDeclarations
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_LinqQueryGenerator_1_GenerateDeclarations_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator`1.GenerateDeclarations
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator<TMappedClass>.GenerateDeclarations
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator(Of TMappedClass).GenerateDeclarations
  nameWithType: LinqQueryGenerator<TMappedClass>.GenerateDeclarations
  nameWithType.vb: LinqQueryGenerator(Of TMappedClass).GenerateDeclarations
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator`1.GenerateQueries(Inflatable.LinqExpression.QueryData{`0})
  name: GenerateQueries(QueryData<TMappedClass>)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_LinqQueryGenerator_1_GenerateQueries_Inflatable_LinqExpression_QueryData__0__
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator`1.GenerateQueries(Inflatable.LinqExpression.QueryData{`0})
  name.vb: GenerateQueries(QueryData(Of TMappedClass))
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator<TMappedClass>.GenerateQueries(Inflatable.LinqExpression.QueryData<TMappedClass>)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator(Of TMappedClass).GenerateQueries(Inflatable.LinqExpression.QueryData(Of TMappedClass))
  nameWithType: LinqQueryGenerator<TMappedClass>.GenerateQueries(QueryData<TMappedClass>)
  nameWithType.vb: LinqQueryGenerator(Of TMappedClass).GenerateQueries(QueryData(Of TMappedClass))
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator`1.GenerateQueries*
  name: GenerateQueries
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_LinqQueryGenerator_1_GenerateQueries_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator`1.GenerateQueries
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator<TMappedClass>.GenerateQueries
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator(Of TMappedClass).GenerateQueries
  nameWithType: LinqQueryGenerator<TMappedClass>.GenerateQueries
  nameWithType.vb: LinqQueryGenerator(Of TMappedClass).GenerateQueries
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator`1.QueryType
  name: QueryType
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_LinqQueryGenerator_1_QueryType
  commentId: P:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator`1.QueryType
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator<TMappedClass>.QueryType
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator(Of TMappedClass).QueryType
  nameWithType: LinqQueryGenerator<TMappedClass>.QueryType
  nameWithType.vb: LinqQueryGenerator(Of TMappedClass).QueryType
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator`1.QueryType*
  name: QueryType
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_LinqQueryGenerator_1_QueryType_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator`1.QueryType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator<TMappedClass>.QueryType
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LinqQueryGenerator(Of TMappedClass).QueryType
  nameWithType: LinqQueryGenerator<TMappedClass>.QueryType
  nameWithType.vb: LinqQueryGenerator(Of TMappedClass).QueryType
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery`1
  name: LoadPropertiesQuery<TMappedClass>
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery-1.html
  commentId: T:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery`1
  name.vb: LoadPropertiesQuery(Of TMappedClass)
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery<TMappedClass>
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery(Of TMappedClass)
  nameWithType: LoadPropertiesQuery<TMappedClass>
  nameWithType.vb: LoadPropertiesQuery(Of TMappedClass)
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: LoadPropertiesQuery(IMappingSource, ObjectPool<StringBuilder>)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_LoadPropertiesQuery_1__ctor_Inflatable_ClassMapper_IMappingSource_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: New(IMappingSource, ObjectPool(Of StringBuilder))
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery<TMappedClass>.LoadPropertiesQuery(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery(Of TMappedClass).New(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: LoadPropertiesQuery<TMappedClass>.LoadPropertiesQuery(IMappingSource, ObjectPool<StringBuilder>)
  nameWithType.vb: LoadPropertiesQuery(Of TMappedClass).New(IMappingSource, ObjectPool(Of StringBuilder))
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery`1.#ctor*
  name: LoadPropertiesQuery
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_LoadPropertiesQuery_1__ctor_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery<TMappedClass>.LoadPropertiesQuery
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery(Of TMappedClass).New
  nameWithType: LoadPropertiesQuery<TMappedClass>.LoadPropertiesQuery
  nameWithType.vb: LoadPropertiesQuery(Of TMappedClass).New
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery`1.GenerateDeclarations
  name: GenerateDeclarations()
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_LoadPropertiesQuery_1_GenerateDeclarations
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery`1.GenerateDeclarations
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery<TMappedClass>.GenerateDeclarations()
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery(Of TMappedClass).GenerateDeclarations()
  nameWithType: LoadPropertiesQuery<TMappedClass>.GenerateDeclarations()
  nameWithType.vb: LoadPropertiesQuery(Of TMappedClass).GenerateDeclarations()
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery`1.GenerateDeclarations*
  name: GenerateDeclarations
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_LoadPropertiesQuery_1_GenerateDeclarations_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery`1.GenerateDeclarations
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery<TMappedClass>.GenerateDeclarations
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery(Of TMappedClass).GenerateDeclarations
  nameWithType: LoadPropertiesQuery<TMappedClass>.GenerateDeclarations
  nameWithType.vb: LoadPropertiesQuery(Of TMappedClass).GenerateDeclarations
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery`1.GenerateQueries(`0,Inflatable.ClassMapper.Interfaces.IClassProperty)
  name: GenerateQueries(TMappedClass, IClassProperty)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_LoadPropertiesQuery_1_GenerateQueries__0_Inflatable_ClassMapper_Interfaces_IClassProperty_
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery`1.GenerateQueries(`0,Inflatable.ClassMapper.Interfaces.IClassProperty)
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery<TMappedClass>.GenerateQueries(TMappedClass, Inflatable.ClassMapper.Interfaces.IClassProperty)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery(Of TMappedClass).GenerateQueries(TMappedClass, Inflatable.ClassMapper.Interfaces.IClassProperty)
  nameWithType: LoadPropertiesQuery<TMappedClass>.GenerateQueries(TMappedClass, IClassProperty)
  nameWithType.vb: LoadPropertiesQuery(Of TMappedClass).GenerateQueries(TMappedClass, IClassProperty)
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery`1.GenerateQueries*
  name: GenerateQueries
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_LoadPropertiesQuery_1_GenerateQueries_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery`1.GenerateQueries
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery<TMappedClass>.GenerateQueries
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery(Of TMappedClass).GenerateQueries
  nameWithType: LoadPropertiesQuery<TMappedClass>.GenerateQueries
  nameWithType.vb: LoadPropertiesQuery(Of TMappedClass).GenerateQueries
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery`1.QueryType
  name: QueryType
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_LoadPropertiesQuery_1_QueryType
  commentId: P:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery`1.QueryType
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery<TMappedClass>.QueryType
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery(Of TMappedClass).QueryType
  nameWithType: LoadPropertiesQuery<TMappedClass>.QueryType
  nameWithType.vb: LoadPropertiesQuery(Of TMappedClass).QueryType
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery`1.QueryType*
  name: QueryType
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_LoadPropertiesQuery_1_QueryType_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery`1.QueryType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery<TMappedClass>.QueryType
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.LoadPropertiesQuery(Of TMappedClass).QueryType
  nameWithType: LoadPropertiesQuery<TMappedClass>.QueryType
  nameWithType.vb: LoadPropertiesQuery(Of TMappedClass).QueryType
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery`1
  name: SavePropertiesQuery<TMappedClass>
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery-1.html
  commentId: T:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery`1
  name.vb: SavePropertiesQuery(Of TMappedClass)
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery<TMappedClass>
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery(Of TMappedClass)
  nameWithType: SavePropertiesQuery<TMappedClass>
  nameWithType.vb: SavePropertiesQuery(Of TMappedClass)
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: SavePropertiesQuery(IMappingSource, ObjectPool<StringBuilder>)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_SavePropertiesQuery_1__ctor_Inflatable_ClassMapper_IMappingSource_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: New(IMappingSource, ObjectPool(Of StringBuilder))
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery<TMappedClass>.SavePropertiesQuery(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery(Of TMappedClass).New(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: SavePropertiesQuery<TMappedClass>.SavePropertiesQuery(IMappingSource, ObjectPool<StringBuilder>)
  nameWithType.vb: SavePropertiesQuery(Of TMappedClass).New(IMappingSource, ObjectPool(Of StringBuilder))
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery`1.#ctor*
  name: SavePropertiesQuery
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_SavePropertiesQuery_1__ctor_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery<TMappedClass>.SavePropertiesQuery
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery(Of TMappedClass).New
  nameWithType: SavePropertiesQuery<TMappedClass>.SavePropertiesQuery
  nameWithType.vb: SavePropertiesQuery(Of TMappedClass).New
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery`1.GenerateDeclarations
  name: GenerateDeclarations()
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_SavePropertiesQuery_1_GenerateDeclarations
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery`1.GenerateDeclarations
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery<TMappedClass>.GenerateDeclarations()
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery(Of TMappedClass).GenerateDeclarations()
  nameWithType: SavePropertiesQuery<TMappedClass>.GenerateDeclarations()
  nameWithType.vb: SavePropertiesQuery(Of TMappedClass).GenerateDeclarations()
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery`1.GenerateDeclarations*
  name: GenerateDeclarations
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_SavePropertiesQuery_1_GenerateDeclarations_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery`1.GenerateDeclarations
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery<TMappedClass>.GenerateDeclarations
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery(Of TMappedClass).GenerateDeclarations
  nameWithType: SavePropertiesQuery<TMappedClass>.GenerateDeclarations
  nameWithType.vb: SavePropertiesQuery(Of TMappedClass).GenerateDeclarations
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery`1.GenerateQueries(`0,Inflatable.ClassMapper.Interfaces.IClassProperty)
  name: GenerateQueries(TMappedClass, IClassProperty)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_SavePropertiesQuery_1_GenerateQueries__0_Inflatable_ClassMapper_Interfaces_IClassProperty_
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery`1.GenerateQueries(`0,Inflatable.ClassMapper.Interfaces.IClassProperty)
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery<TMappedClass>.GenerateQueries(TMappedClass, Inflatable.ClassMapper.Interfaces.IClassProperty)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery(Of TMappedClass).GenerateQueries(TMappedClass, Inflatable.ClassMapper.Interfaces.IClassProperty)
  nameWithType: SavePropertiesQuery<TMappedClass>.GenerateQueries(TMappedClass, IClassProperty)
  nameWithType.vb: SavePropertiesQuery(Of TMappedClass).GenerateQueries(TMappedClass, IClassProperty)
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery`1.GenerateQueries*
  name: GenerateQueries
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_SavePropertiesQuery_1_GenerateQueries_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery`1.GenerateQueries
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery<TMappedClass>.GenerateQueries
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery(Of TMappedClass).GenerateQueries
  nameWithType: SavePropertiesQuery<TMappedClass>.GenerateQueries
  nameWithType.vb: SavePropertiesQuery(Of TMappedClass).GenerateQueries
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery`1.QueryType
  name: QueryType
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_SavePropertiesQuery_1_QueryType
  commentId: P:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery`1.QueryType
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery<TMappedClass>.QueryType
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery(Of TMappedClass).QueryType
  nameWithType: SavePropertiesQuery<TMappedClass>.QueryType
  nameWithType.vb: SavePropertiesQuery(Of TMappedClass).QueryType
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery`1.QueryType*
  name: QueryType
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_SavePropertiesQuery_1_QueryType_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery`1.QueryType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery<TMappedClass>.QueryType
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.SavePropertiesQuery(Of TMappedClass).QueryType
  nameWithType: SavePropertiesQuery<TMappedClass>.QueryType
  nameWithType.vb: SavePropertiesQuery(Of TMappedClass).QueryType
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery`1
  name: UpdateQuery<TMappedClass>
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery-1.html
  commentId: T:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery`1
  name.vb: UpdateQuery(Of TMappedClass)
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery<TMappedClass>
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery(Of TMappedClass)
  nameWithType: UpdateQuery<TMappedClass>
  nameWithType.vb: UpdateQuery(Of TMappedClass)
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: UpdateQuery(IMappingSource, ObjectPool<StringBuilder>)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_UpdateQuery_1__ctor_Inflatable_ClassMapper_IMappingSource_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: New(IMappingSource, ObjectPool(Of StringBuilder))
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery<TMappedClass>.UpdateQuery(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery(Of TMappedClass).New(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: UpdateQuery<TMappedClass>.UpdateQuery(IMappingSource, ObjectPool<StringBuilder>)
  nameWithType.vb: UpdateQuery(Of TMappedClass).New(IMappingSource, ObjectPool(Of StringBuilder))
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery`1.#ctor*
  name: UpdateQuery
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_UpdateQuery_1__ctor_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery<TMappedClass>.UpdateQuery
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery(Of TMappedClass).New
  nameWithType: UpdateQuery<TMappedClass>.UpdateQuery
  nameWithType.vb: UpdateQuery(Of TMappedClass).New
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery`1.GenerateDeclarations
  name: GenerateDeclarations()
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_UpdateQuery_1_GenerateDeclarations
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery`1.GenerateDeclarations
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery<TMappedClass>.GenerateDeclarations()
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery(Of TMappedClass).GenerateDeclarations()
  nameWithType: UpdateQuery<TMappedClass>.GenerateDeclarations()
  nameWithType.vb: UpdateQuery(Of TMappedClass).GenerateDeclarations()
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery`1.GenerateDeclarations*
  name: GenerateDeclarations
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_UpdateQuery_1_GenerateDeclarations_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery`1.GenerateDeclarations
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery<TMappedClass>.GenerateDeclarations
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery(Of TMappedClass).GenerateDeclarations
  nameWithType: UpdateQuery<TMappedClass>.GenerateDeclarations
  nameWithType.vb: UpdateQuery(Of TMappedClass).GenerateDeclarations
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery`1.GenerateQueries(`0)
  name: GenerateQueries(TMappedClass)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_UpdateQuery_1_GenerateQueries__0_
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery`1.GenerateQueries(`0)
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery<TMappedClass>.GenerateQueries(TMappedClass)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery(Of TMappedClass).GenerateQueries(TMappedClass)
  nameWithType: UpdateQuery<TMappedClass>.GenerateQueries(TMappedClass)
  nameWithType.vb: UpdateQuery(Of TMappedClass).GenerateQueries(TMappedClass)
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery`1.GenerateQueries*
  name: GenerateQueries
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_UpdateQuery_1_GenerateQueries_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery`1.GenerateQueries
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery<TMappedClass>.GenerateQueries
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery(Of TMappedClass).GenerateQueries
  nameWithType: UpdateQuery<TMappedClass>.GenerateQueries
  nameWithType.vb: UpdateQuery(Of TMappedClass).GenerateQueries
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery`1.QueryType
  name: QueryType
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_UpdateQuery_1_QueryType
  commentId: P:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery`1.QueryType
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery<TMappedClass>.QueryType
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery(Of TMappedClass).QueryType
  nameWithType: UpdateQuery<TMappedClass>.QueryType
  nameWithType.vb: UpdateQuery(Of TMappedClass).QueryType
- uid: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery`1.QueryType*
  name: QueryType
  href: api/Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery-1.html#Inflatable_QueryProvider_Providers_SQLServer_QueryGenerators_UpdateQuery_1_QueryType_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery`1.QueryType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery<TMappedClass>.QueryType
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.QueryGenerators.UpdateQuery(Of TMappedClass).QueryType
  nameWithType: UpdateQuery<TMappedClass>.QueryType
  nameWithType.vb: UpdateQuery(Of TMappedClass).QueryType
- uid: Inflatable.QueryProvider.Providers.SQLServer.SQLServerGenerator`1
  name: SQLServerGenerator<TMappedClass>
  href: api/Inflatable.QueryProvider.Providers.SQLServer.SQLServerGenerator-1.html
  commentId: T:Inflatable.QueryProvider.Providers.SQLServer.SQLServerGenerator`1
  name.vb: SQLServerGenerator(Of TMappedClass)
  fullName: Inflatable.QueryProvider.Providers.SQLServer.SQLServerGenerator<TMappedClass>
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.SQLServerGenerator(Of TMappedClass)
  nameWithType: SQLServerGenerator<TMappedClass>
  nameWithType.vb: SQLServerGenerator(Of TMappedClass)
- uid: Inflatable.QueryProvider.Providers.SQLServer.SQLServerGenerator`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name: SQLServerGenerator(IMappingSource, ObjectPool<StringBuilder>)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.SQLServerGenerator-1.html#Inflatable_QueryProvider_Providers_SQLServer_SQLServerGenerator_1__ctor_Inflatable_ClassMapper_IMappingSource_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.SQLServerGenerator`1.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder})
  name.vb: New(IMappingSource, ObjectPool(Of StringBuilder))
  fullName: Inflatable.QueryProvider.Providers.SQLServer.SQLServerGenerator<TMappedClass>.SQLServerGenerator(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.SQLServerGenerator(Of TMappedClass).New(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder))
  nameWithType: SQLServerGenerator<TMappedClass>.SQLServerGenerator(IMappingSource, ObjectPool<StringBuilder>)
  nameWithType.vb: SQLServerGenerator(Of TMappedClass).New(IMappingSource, ObjectPool(Of StringBuilder))
- uid: Inflatable.QueryProvider.Providers.SQLServer.SQLServerGenerator`1.#ctor*
  name: SQLServerGenerator
  href: api/Inflatable.QueryProvider.Providers.SQLServer.SQLServerGenerator-1.html#Inflatable_QueryProvider_Providers_SQLServer_SQLServerGenerator_1__ctor_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.SQLServerGenerator`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.QueryProvider.Providers.SQLServer.SQLServerGenerator<TMappedClass>.SQLServerGenerator
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.SQLServerGenerator(Of TMappedClass).New
  nameWithType: SQLServerGenerator<TMappedClass>.SQLServerGenerator
  nameWithType.vb: SQLServerGenerator(Of TMappedClass).New
- uid: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider
  name: SQLServerQueryProvider
  href: api/Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.html
  commentId: T:Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider
  fullName: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider
  nameWithType: SQLServerQueryProvider
- uid: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder},Microsoft.Extensions.Logging.ILogger{SQLHelperDB.SQLHelper})
  name: SQLServerQueryProvider(IConfiguration, ObjectPool<StringBuilder>?, ILogger<SQLHelper>)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.html#Inflatable_QueryProvider_Providers_SQLServer_SQLServerQueryProvider__ctor_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_ObjectPool_ObjectPool_System_Text_StringBuilder__Microsoft_Extensions_Logging_ILogger_SQLHelperDB_SQLHelper__
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder},Microsoft.Extensions.Logging.ILogger{SQLHelperDB.SQLHelper})
  name.vb: New(IConfiguration, ObjectPool(Of StringBuilder), ILogger(Of SQLHelper))
  fullName: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.SQLServerQueryProvider(Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>?, Microsoft.Extensions.Logging.ILogger<SQLHelperDB.SQLHelper>)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.New(Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder), Microsoft.Extensions.Logging.ILogger(Of SQLHelperDB.SQLHelper))
  nameWithType: SQLServerQueryProvider.SQLServerQueryProvider(IConfiguration, ObjectPool<StringBuilder>?, ILogger<SQLHelper>)
  nameWithType.vb: SQLServerQueryProvider.New(IConfiguration, ObjectPool(Of StringBuilder), ILogger(Of SQLHelper))
- uid: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.#ctor*
  name: SQLServerQueryProvider
  href: api/Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.html#Inflatable_QueryProvider_Providers_SQLServer_SQLServerQueryProvider__ctor_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.SQLServerQueryProvider
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.New
  nameWithType: SQLServerQueryProvider.SQLServerQueryProvider
  nameWithType.vb: SQLServerQueryProvider.New
- uid: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.Batch(Inflatable.Interfaces.IDatabase)
  name: Batch(IDatabase)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.html#Inflatable_QueryProvider_Providers_SQLServer_SQLServerQueryProvider_Batch_Inflatable_Interfaces_IDatabase_
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.Batch(Inflatable.Interfaces.IDatabase)
  fullName: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.Batch(Inflatable.Interfaces.IDatabase)
  nameWithType: SQLServerQueryProvider.Batch(IDatabase)
- uid: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.Batch*
  name: Batch
  href: api/Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.html#Inflatable_QueryProvider_Providers_SQLServer_SQLServerQueryProvider_Batch_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.Batch
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.Batch
  nameWithType: SQLServerQueryProvider.Batch
- uid: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.Configuration
  name: Configuration
  href: api/Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.html#Inflatable_QueryProvider_Providers_SQLServer_SQLServerQueryProvider_Configuration
  commentId: P:Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.Configuration
  fullName: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.Configuration
  nameWithType: SQLServerQueryProvider.Configuration
- uid: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.Configuration*
  name: Configuration
  href: api/Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.html#Inflatable_QueryProvider_Providers_SQLServer_SQLServerQueryProvider_Configuration_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.Configuration
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.Configuration
  nameWithType: SQLServerQueryProvider.Configuration
- uid: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.CreateGenerator*
  name: CreateGenerator
  href: api/Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.html#Inflatable_QueryProvider_Providers_SQLServer_SQLServerQueryProvider_CreateGenerator_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.CreateGenerator
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.CreateGenerator
  nameWithType: SQLServerQueryProvider.CreateGenerator
- uid: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.CreateGenerator``1(Inflatable.ClassMapper.IMappingSource)
  name: CreateGenerator<TMappedClass>(IMappingSource)
  href: api/Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.html#Inflatable_QueryProvider_Providers_SQLServer_SQLServerQueryProvider_CreateGenerator__1_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.CreateGenerator``1(Inflatable.ClassMapper.IMappingSource)
  name.vb: CreateGenerator(Of TMappedClass)(IMappingSource)
  fullName: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.CreateGenerator<TMappedClass>(Inflatable.ClassMapper.IMappingSource)
  fullName.vb: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.CreateGenerator(Of TMappedClass)(Inflatable.ClassMapper.IMappingSource)
  nameWithType: SQLServerQueryProvider.CreateGenerator<TMappedClass>(IMappingSource)
  nameWithType.vb: SQLServerQueryProvider.CreateGenerator(Of TMappedClass)(IMappingSource)
- uid: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.Providers
  name: Providers
  href: api/Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.html#Inflatable_QueryProvider_Providers_SQLServer_SQLServerQueryProvider_Providers
  commentId: P:Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.Providers
  fullName: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.Providers
  nameWithType: SQLServerQueryProvider.Providers
- uid: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.Providers*
  name: Providers
  href: api/Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.html#Inflatable_QueryProvider_Providers_SQLServer_SQLServerQueryProvider_Providers_
  commentId: Overload:Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.Providers
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Providers.SQLServer.SQLServerQueryProvider.Providers
  nameWithType: SQLServerQueryProvider.Providers
- uid: Inflatable.QueryProvider.Queries
  name: Queries
  href: api/Inflatable.QueryProvider.Queries.html
  commentId: T:Inflatable.QueryProvider.Queries
  fullName: Inflatable.QueryProvider.Queries
  nameWithType: Queries
- uid: Inflatable.QueryProvider.Queries.Add(Inflatable.QueryProvider.Enums.QueryType,Inflatable.QueryProvider.Interfaces.IQuery)
  name: Add(QueryType, IQuery?)
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_Add_Inflatable_QueryProvider_Enums_QueryType_Inflatable_QueryProvider_Interfaces_IQuery_
  commentId: M:Inflatable.QueryProvider.Queries.Add(Inflatable.QueryProvider.Enums.QueryType,Inflatable.QueryProvider.Interfaces.IQuery)
  name.vb: Add(QueryType, IQuery)
  fullName: Inflatable.QueryProvider.Queries.Add(Inflatable.QueryProvider.Enums.QueryType, Inflatable.QueryProvider.Interfaces.IQuery?)
  fullName.vb: Inflatable.QueryProvider.Queries.Add(Inflatable.QueryProvider.Enums.QueryType, Inflatable.QueryProvider.Interfaces.IQuery)
  nameWithType: Queries.Add(QueryType, IQuery?)
  nameWithType.vb: Queries.Add(QueryType, IQuery)
- uid: Inflatable.QueryProvider.Queries.Add(System.Collections.Generic.KeyValuePair{Inflatable.QueryProvider.Enums.QueryType,Inflatable.QueryProvider.Interfaces.IQuery})
  name: Add(KeyValuePair<QueryType, IQuery?>)
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_Add_System_Collections_Generic_KeyValuePair_Inflatable_QueryProvider_Enums_QueryType_Inflatable_QueryProvider_Interfaces_IQuery__
  commentId: M:Inflatable.QueryProvider.Queries.Add(System.Collections.Generic.KeyValuePair{Inflatable.QueryProvider.Enums.QueryType,Inflatable.QueryProvider.Interfaces.IQuery})
  name.vb: Add(KeyValuePair(Of QueryType, IQuery))
  fullName: Inflatable.QueryProvider.Queries.Add(System.Collections.Generic.KeyValuePair<Inflatable.QueryProvider.Enums.QueryType, Inflatable.QueryProvider.Interfaces.IQuery?>)
  fullName.vb: Inflatable.QueryProvider.Queries.Add(System.Collections.Generic.KeyValuePair(Of Inflatable.QueryProvider.Enums.QueryType, Inflatable.QueryProvider.Interfaces.IQuery))
  nameWithType: Queries.Add(KeyValuePair<QueryType, IQuery?>)
  nameWithType.vb: Queries.Add(KeyValuePair(Of QueryType, IQuery))
- uid: Inflatable.QueryProvider.Queries.Add*
  name: Add
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_Add_
  commentId: Overload:Inflatable.QueryProvider.Queries.Add
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Queries.Add
  nameWithType: Queries.Add
- uid: Inflatable.QueryProvider.Queries.Clear
  name: Clear()
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_Clear
  commentId: M:Inflatable.QueryProvider.Queries.Clear
  fullName: Inflatable.QueryProvider.Queries.Clear()
  nameWithType: Queries.Clear()
- uid: Inflatable.QueryProvider.Queries.Clear*
  name: Clear
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_Clear_
  commentId: Overload:Inflatable.QueryProvider.Queries.Clear
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Queries.Clear
  nameWithType: Queries.Clear
- uid: Inflatable.QueryProvider.Queries.Contains(System.Collections.Generic.KeyValuePair{Inflatable.QueryProvider.Enums.QueryType,Inflatable.QueryProvider.Interfaces.IQuery})
  name: Contains(KeyValuePair<QueryType, IQuery?>)
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_Contains_System_Collections_Generic_KeyValuePair_Inflatable_QueryProvider_Enums_QueryType_Inflatable_QueryProvider_Interfaces_IQuery__
  commentId: M:Inflatable.QueryProvider.Queries.Contains(System.Collections.Generic.KeyValuePair{Inflatable.QueryProvider.Enums.QueryType,Inflatable.QueryProvider.Interfaces.IQuery})
  name.vb: Contains(KeyValuePair(Of QueryType, IQuery))
  fullName: Inflatable.QueryProvider.Queries.Contains(System.Collections.Generic.KeyValuePair<Inflatable.QueryProvider.Enums.QueryType, Inflatable.QueryProvider.Interfaces.IQuery?>)
  fullName.vb: Inflatable.QueryProvider.Queries.Contains(System.Collections.Generic.KeyValuePair(Of Inflatable.QueryProvider.Enums.QueryType, Inflatable.QueryProvider.Interfaces.IQuery))
  nameWithType: Queries.Contains(KeyValuePair<QueryType, IQuery?>)
  nameWithType.vb: Queries.Contains(KeyValuePair(Of QueryType, IQuery))
- uid: Inflatable.QueryProvider.Queries.Contains*
  name: Contains
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_Contains_
  commentId: Overload:Inflatable.QueryProvider.Queries.Contains
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Queries.Contains
  nameWithType: Queries.Contains
- uid: Inflatable.QueryProvider.Queries.ContainsKey(Inflatable.QueryProvider.Enums.QueryType)
  name: ContainsKey(QueryType)
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_ContainsKey_Inflatable_QueryProvider_Enums_QueryType_
  commentId: M:Inflatable.QueryProvider.Queries.ContainsKey(Inflatable.QueryProvider.Enums.QueryType)
  fullName: Inflatable.QueryProvider.Queries.ContainsKey(Inflatable.QueryProvider.Enums.QueryType)
  nameWithType: Queries.ContainsKey(QueryType)
- uid: Inflatable.QueryProvider.Queries.ContainsKey*
  name: ContainsKey
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_ContainsKey_
  commentId: Overload:Inflatable.QueryProvider.Queries.ContainsKey
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Queries.ContainsKey
  nameWithType: Queries.ContainsKey
- uid: Inflatable.QueryProvider.Queries.CopyTo(System.Collections.Generic.KeyValuePair{Inflatable.QueryProvider.Enums.QueryType,Inflatable.QueryProvider.Interfaces.IQuery}[],System.Int32)
  name: CopyTo(KeyValuePair<QueryType, IQuery?>[], int)
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_CopyTo_System_Collections_Generic_KeyValuePair_Inflatable_QueryProvider_Enums_QueryType_Inflatable_QueryProvider_Interfaces_IQuery____System_Int32_
  commentId: M:Inflatable.QueryProvider.Queries.CopyTo(System.Collections.Generic.KeyValuePair{Inflatable.QueryProvider.Enums.QueryType,Inflatable.QueryProvider.Interfaces.IQuery}[],System.Int32)
  name.vb: CopyTo(KeyValuePair(Of QueryType, IQuery)(), Integer)
  fullName: Inflatable.QueryProvider.Queries.CopyTo(System.Collections.Generic.KeyValuePair<Inflatable.QueryProvider.Enums.QueryType, Inflatable.QueryProvider.Interfaces.IQuery?>[], int)
  fullName.vb: Inflatable.QueryProvider.Queries.CopyTo(System.Collections.Generic.KeyValuePair(Of Inflatable.QueryProvider.Enums.QueryType, Inflatable.QueryProvider.Interfaces.IQuery)(), Integer)
  nameWithType: Queries.CopyTo(KeyValuePair<QueryType, IQuery?>[], int)
  nameWithType.vb: Queries.CopyTo(KeyValuePair(Of QueryType, IQuery)(), Integer)
- uid: Inflatable.QueryProvider.Queries.CopyTo*
  name: CopyTo
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_CopyTo_
  commentId: Overload:Inflatable.QueryProvider.Queries.CopyTo
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Queries.CopyTo
  nameWithType: Queries.CopyTo
- uid: Inflatable.QueryProvider.Queries.Count
  name: Count
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_Count
  commentId: P:Inflatable.QueryProvider.Queries.Count
  fullName: Inflatable.QueryProvider.Queries.Count
  nameWithType: Queries.Count
- uid: Inflatable.QueryProvider.Queries.Count*
  name: Count
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_Count_
  commentId: Overload:Inflatable.QueryProvider.Queries.Count
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Queries.Count
  nameWithType: Queries.Count
- uid: Inflatable.QueryProvider.Queries.GetEnumerator
  name: GetEnumerator()
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_GetEnumerator
  commentId: M:Inflatable.QueryProvider.Queries.GetEnumerator
  fullName: Inflatable.QueryProvider.Queries.GetEnumerator()
  nameWithType: Queries.GetEnumerator()
- uid: Inflatable.QueryProvider.Queries.GetEnumerator*
  name: GetEnumerator
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_GetEnumerator_
  commentId: Overload:Inflatable.QueryProvider.Queries.GetEnumerator
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Queries.GetEnumerator
  nameWithType: Queries.GetEnumerator
- uid: Inflatable.QueryProvider.Queries.IsReadOnly
  name: IsReadOnly
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_IsReadOnly
  commentId: P:Inflatable.QueryProvider.Queries.IsReadOnly
  fullName: Inflatable.QueryProvider.Queries.IsReadOnly
  nameWithType: Queries.IsReadOnly
- uid: Inflatable.QueryProvider.Queries.IsReadOnly*
  name: IsReadOnly
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_IsReadOnly_
  commentId: Overload:Inflatable.QueryProvider.Queries.IsReadOnly
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Queries.IsReadOnly
  nameWithType: Queries.IsReadOnly
- uid: Inflatable.QueryProvider.Queries.Item(Inflatable.QueryProvider.Enums.QueryType)
  name: this[QueryType]
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_Item_Inflatable_QueryProvider_Enums_QueryType_
  commentId: P:Inflatable.QueryProvider.Queries.Item(Inflatable.QueryProvider.Enums.QueryType)
  name.vb: this[](QueryType)
  fullName: Inflatable.QueryProvider.Queries.this[Inflatable.QueryProvider.Enums.QueryType]
  fullName.vb: Inflatable.QueryProvider.Queries.this[](Inflatable.QueryProvider.Enums.QueryType)
  nameWithType: Queries.this[QueryType]
  nameWithType.vb: Queries.this[](QueryType)
- uid: Inflatable.QueryProvider.Queries.Item*
  name: this
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_Item_
  commentId: Overload:Inflatable.QueryProvider.Queries.Item
  isSpec: "True"
  name.vb: this[]
  fullName: Inflatable.QueryProvider.Queries.this
  fullName.vb: Inflatable.QueryProvider.Queries.this[]
  nameWithType: Queries.this
  nameWithType.vb: Queries.this[]
- uid: Inflatable.QueryProvider.Queries.Keys
  name: Keys
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_Keys
  commentId: P:Inflatable.QueryProvider.Queries.Keys
  fullName: Inflatable.QueryProvider.Queries.Keys
  nameWithType: Queries.Keys
- uid: Inflatable.QueryProvider.Queries.Keys*
  name: Keys
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_Keys_
  commentId: Overload:Inflatable.QueryProvider.Queries.Keys
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Queries.Keys
  nameWithType: Queries.Keys
- uid: Inflatable.QueryProvider.Queries.Remove(Inflatable.QueryProvider.Enums.QueryType)
  name: Remove(QueryType)
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_Remove_Inflatable_QueryProvider_Enums_QueryType_
  commentId: M:Inflatable.QueryProvider.Queries.Remove(Inflatable.QueryProvider.Enums.QueryType)
  fullName: Inflatable.QueryProvider.Queries.Remove(Inflatable.QueryProvider.Enums.QueryType)
  nameWithType: Queries.Remove(QueryType)
- uid: Inflatable.QueryProvider.Queries.Remove(System.Collections.Generic.KeyValuePair{Inflatable.QueryProvider.Enums.QueryType,Inflatable.QueryProvider.Interfaces.IQuery})
  name: Remove(KeyValuePair<QueryType, IQuery?>)
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_Remove_System_Collections_Generic_KeyValuePair_Inflatable_QueryProvider_Enums_QueryType_Inflatable_QueryProvider_Interfaces_IQuery__
  commentId: M:Inflatable.QueryProvider.Queries.Remove(System.Collections.Generic.KeyValuePair{Inflatable.QueryProvider.Enums.QueryType,Inflatable.QueryProvider.Interfaces.IQuery})
  name.vb: Remove(KeyValuePair(Of QueryType, IQuery))
  fullName: Inflatable.QueryProvider.Queries.Remove(System.Collections.Generic.KeyValuePair<Inflatable.QueryProvider.Enums.QueryType, Inflatable.QueryProvider.Interfaces.IQuery?>)
  fullName.vb: Inflatable.QueryProvider.Queries.Remove(System.Collections.Generic.KeyValuePair(Of Inflatable.QueryProvider.Enums.QueryType, Inflatable.QueryProvider.Interfaces.IQuery))
  nameWithType: Queries.Remove(KeyValuePair<QueryType, IQuery?>)
  nameWithType.vb: Queries.Remove(KeyValuePair(Of QueryType, IQuery))
- uid: Inflatable.QueryProvider.Queries.Remove*
  name: Remove
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_Remove_
  commentId: Overload:Inflatable.QueryProvider.Queries.Remove
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Queries.Remove
  nameWithType: Queries.Remove
- uid: Inflatable.QueryProvider.Queries.TryGetValue(Inflatable.QueryProvider.Enums.QueryType,Inflatable.QueryProvider.Interfaces.IQuery@)
  name: TryGetValue(QueryType, out IQuery?)
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_TryGetValue_Inflatable_QueryProvider_Enums_QueryType_Inflatable_QueryProvider_Interfaces_IQuery__
  commentId: M:Inflatable.QueryProvider.Queries.TryGetValue(Inflatable.QueryProvider.Enums.QueryType,Inflatable.QueryProvider.Interfaces.IQuery@)
  name.vb: TryGetValue(QueryType, IQuery)
  fullName: Inflatable.QueryProvider.Queries.TryGetValue(Inflatable.QueryProvider.Enums.QueryType, out Inflatable.QueryProvider.Interfaces.IQuery?)
  fullName.vb: Inflatable.QueryProvider.Queries.TryGetValue(Inflatable.QueryProvider.Enums.QueryType, Inflatable.QueryProvider.Interfaces.IQuery)
  nameWithType: Queries.TryGetValue(QueryType, out IQuery?)
  nameWithType.vb: Queries.TryGetValue(QueryType, IQuery)
- uid: Inflatable.QueryProvider.Queries.TryGetValue*
  name: TryGetValue
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_TryGetValue_
  commentId: Overload:Inflatable.QueryProvider.Queries.TryGetValue
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Queries.TryGetValue
  nameWithType: Queries.TryGetValue
- uid: Inflatable.QueryProvider.Queries.Values
  name: Values
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_Values
  commentId: P:Inflatable.QueryProvider.Queries.Values
  fullName: Inflatable.QueryProvider.Queries.Values
  nameWithType: Queries.Values
- uid: Inflatable.QueryProvider.Queries.Values*
  name: Values
  href: api/Inflatable.QueryProvider.Queries.html#Inflatable_QueryProvider_Queries_Values_
  commentId: Overload:Inflatable.QueryProvider.Queries.Values
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Queries.Values
  nameWithType: Queries.Values
- uid: Inflatable.QueryProvider.Query
  name: Query
  href: api/Inflatable.QueryProvider.Query.html
  commentId: T:Inflatable.QueryProvider.Query
  fullName: Inflatable.QueryProvider.Query
  nameWithType: Query
- uid: Inflatable.QueryProvider.Query.#ctor(System.Type,System.Data.CommandType,System.String,Inflatable.QueryProvider.Enums.QueryType,SQLHelperDB.HelperClasses.Interfaces.IParameter[])
  name: Query(Type, CommandType, string, QueryType, params IParameter?[])
  href: api/Inflatable.QueryProvider.Query.html#Inflatable_QueryProvider_Query__ctor_System_Type_System_Data_CommandType_System_String_Inflatable_QueryProvider_Enums_QueryType_SQLHelperDB_HelperClasses_Interfaces_IParameter___
  commentId: M:Inflatable.QueryProvider.Query.#ctor(System.Type,System.Data.CommandType,System.String,Inflatable.QueryProvider.Enums.QueryType,SQLHelperDB.HelperClasses.Interfaces.IParameter[])
  name.vb: New(Type, CommandType, String, QueryType, ParamArray IParameter())
  fullName: Inflatable.QueryProvider.Query.Query(System.Type, System.Data.CommandType, string, Inflatable.QueryProvider.Enums.QueryType, params SQLHelperDB.HelperClasses.Interfaces.IParameter?[])
  fullName.vb: Inflatable.QueryProvider.Query.New(System.Type, System.Data.CommandType, String, Inflatable.QueryProvider.Enums.QueryType, ParamArray SQLHelperDB.HelperClasses.Interfaces.IParameter())
  nameWithType: Query.Query(Type, CommandType, string, QueryType, params IParameter?[])
  nameWithType.vb: Query.New(Type, CommandType, String, QueryType, ParamArray IParameter())
- uid: Inflatable.QueryProvider.Query.#ctor*
  name: Query
  href: api/Inflatable.QueryProvider.Query.html#Inflatable_QueryProvider_Query__ctor_
  commentId: Overload:Inflatable.QueryProvider.Query.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.QueryProvider.Query.Query
  fullName.vb: Inflatable.QueryProvider.Query.New
  nameWithType: Query.Query
  nameWithType.vb: Query.New
- uid: Inflatable.QueryProvider.Query.DatabaseCommandType
  name: DatabaseCommandType
  href: api/Inflatable.QueryProvider.Query.html#Inflatable_QueryProvider_Query_DatabaseCommandType
  commentId: P:Inflatable.QueryProvider.Query.DatabaseCommandType
  fullName: Inflatable.QueryProvider.Query.DatabaseCommandType
  nameWithType: Query.DatabaseCommandType
- uid: Inflatable.QueryProvider.Query.DatabaseCommandType*
  name: DatabaseCommandType
  href: api/Inflatable.QueryProvider.Query.html#Inflatable_QueryProvider_Query_DatabaseCommandType_
  commentId: Overload:Inflatable.QueryProvider.Query.DatabaseCommandType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Query.DatabaseCommandType
  nameWithType: Query.DatabaseCommandType
- uid: Inflatable.QueryProvider.Query.Parameters
  name: Parameters
  href: api/Inflatable.QueryProvider.Query.html#Inflatable_QueryProvider_Query_Parameters
  commentId: P:Inflatable.QueryProvider.Query.Parameters
  fullName: Inflatable.QueryProvider.Query.Parameters
  nameWithType: Query.Parameters
- uid: Inflatable.QueryProvider.Query.Parameters*
  name: Parameters
  href: api/Inflatable.QueryProvider.Query.html#Inflatable_QueryProvider_Query_Parameters_
  commentId: Overload:Inflatable.QueryProvider.Query.Parameters
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Query.Parameters
  nameWithType: Query.Parameters
- uid: Inflatable.QueryProvider.Query.QueryString
  name: QueryString
  href: api/Inflatable.QueryProvider.Query.html#Inflatable_QueryProvider_Query_QueryString
  commentId: P:Inflatable.QueryProvider.Query.QueryString
  fullName: Inflatable.QueryProvider.Query.QueryString
  nameWithType: Query.QueryString
- uid: Inflatable.QueryProvider.Query.QueryString*
  name: QueryString
  href: api/Inflatable.QueryProvider.Query.html#Inflatable_QueryProvider_Query_QueryString_
  commentId: Overload:Inflatable.QueryProvider.Query.QueryString
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Query.QueryString
  nameWithType: Query.QueryString
- uid: Inflatable.QueryProvider.Query.QueryType
  name: QueryType
  href: api/Inflatable.QueryProvider.Query.html#Inflatable_QueryProvider_Query_QueryType
  commentId: P:Inflatable.QueryProvider.Query.QueryType
  fullName: Inflatable.QueryProvider.Query.QueryType
  nameWithType: Query.QueryType
- uid: Inflatable.QueryProvider.Query.QueryType*
  name: QueryType
  href: api/Inflatable.QueryProvider.Query.html#Inflatable_QueryProvider_Query_QueryType_
  commentId: Overload:Inflatable.QueryProvider.Query.QueryType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Query.QueryType
  nameWithType: Query.QueryType
- uid: Inflatable.QueryProvider.Query.ReturnType
  name: ReturnType
  href: api/Inflatable.QueryProvider.Query.html#Inflatable_QueryProvider_Query_ReturnType
  commentId: P:Inflatable.QueryProvider.Query.ReturnType
  fullName: Inflatable.QueryProvider.Query.ReturnType
  nameWithType: Query.ReturnType
- uid: Inflatable.QueryProvider.Query.ReturnType*
  name: ReturnType
  href: api/Inflatable.QueryProvider.Query.html#Inflatable_QueryProvider_Query_ReturnType_
  commentId: Overload:Inflatable.QueryProvider.Query.ReturnType
  isSpec: "True"
  fullName: Inflatable.QueryProvider.Query.ReturnType
  nameWithType: Query.ReturnType
- uid: Inflatable.QueryProvider.QueryProviderManager
  name: QueryProviderManager
  href: api/Inflatable.QueryProvider.QueryProviderManager.html
  commentId: T:Inflatable.QueryProvider.QueryProviderManager
  fullName: Inflatable.QueryProvider.QueryProviderManager
  nameWithType: QueryProviderManager
- uid: Inflatable.QueryProvider.QueryProviderManager.#ctor(System.Collections.Generic.IEnumerable{Inflatable.QueryProvider.Interfaces.IQueryProvider},Microsoft.Extensions.Logging.ILogger{Inflatable.QueryProvider.QueryProviderManager})
  name: QueryProviderManager(IEnumerable<IQueryProvider>, ILogger<QueryProviderManager>)
  href: api/Inflatable.QueryProvider.QueryProviderManager.html#Inflatable_QueryProvider_QueryProviderManager__ctor_System_Collections_Generic_IEnumerable_Inflatable_QueryProvider_Interfaces_IQueryProvider__Microsoft_Extensions_Logging_ILogger_Inflatable_QueryProvider_QueryProviderManager__
  commentId: M:Inflatable.QueryProvider.QueryProviderManager.#ctor(System.Collections.Generic.IEnumerable{Inflatable.QueryProvider.Interfaces.IQueryProvider},Microsoft.Extensions.Logging.ILogger{Inflatable.QueryProvider.QueryProviderManager})
  name.vb: New(IEnumerable(Of IQueryProvider), ILogger(Of QueryProviderManager))
  fullName: Inflatable.QueryProvider.QueryProviderManager.QueryProviderManager(System.Collections.Generic.IEnumerable<Inflatable.QueryProvider.Interfaces.IQueryProvider>, Microsoft.Extensions.Logging.ILogger<Inflatable.QueryProvider.QueryProviderManager>)
  fullName.vb: Inflatable.QueryProvider.QueryProviderManager.New(System.Collections.Generic.IEnumerable(Of Inflatable.QueryProvider.Interfaces.IQueryProvider), Microsoft.Extensions.Logging.ILogger(Of Inflatable.QueryProvider.QueryProviderManager))
  nameWithType: QueryProviderManager.QueryProviderManager(IEnumerable<IQueryProvider>, ILogger<QueryProviderManager>)
  nameWithType.vb: QueryProviderManager.New(IEnumerable(Of IQueryProvider), ILogger(Of QueryProviderManager))
- uid: Inflatable.QueryProvider.QueryProviderManager.#ctor*
  name: QueryProviderManager
  href: api/Inflatable.QueryProvider.QueryProviderManager.html#Inflatable_QueryProvider_QueryProviderManager__ctor_
  commentId: Overload:Inflatable.QueryProvider.QueryProviderManager.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.QueryProvider.QueryProviderManager.QueryProviderManager
  fullName.vb: Inflatable.QueryProvider.QueryProviderManager.New
  nameWithType: QueryProviderManager.QueryProviderManager
  nameWithType.vb: QueryProviderManager.New
- uid: Inflatable.QueryProvider.QueryProviderManager.CreateBatch(Inflatable.Interfaces.IDatabase)
  name: CreateBatch(IDatabase)
  href: api/Inflatable.QueryProvider.QueryProviderManager.html#Inflatable_QueryProvider_QueryProviderManager_CreateBatch_Inflatable_Interfaces_IDatabase_
  commentId: M:Inflatable.QueryProvider.QueryProviderManager.CreateBatch(Inflatable.Interfaces.IDatabase)
  fullName: Inflatable.QueryProvider.QueryProviderManager.CreateBatch(Inflatable.Interfaces.IDatabase)
  nameWithType: QueryProviderManager.CreateBatch(IDatabase)
- uid: Inflatable.QueryProvider.QueryProviderManager.CreateBatch*
  name: CreateBatch
  href: api/Inflatable.QueryProvider.QueryProviderManager.html#Inflatable_QueryProvider_QueryProviderManager_CreateBatch_
  commentId: Overload:Inflatable.QueryProvider.QueryProviderManager.CreateBatch
  isSpec: "True"
  fullName: Inflatable.QueryProvider.QueryProviderManager.CreateBatch
  nameWithType: QueryProviderManager.CreateBatch
- uid: Inflatable.QueryProvider.QueryProviderManager.CreateGenerator(System.Type,Inflatable.ClassMapper.IMappingSource)
  name: CreateGenerator(Type, IMappingSource)
  href: api/Inflatable.QueryProvider.QueryProviderManager.html#Inflatable_QueryProvider_QueryProviderManager_CreateGenerator_System_Type_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.QueryProvider.QueryProviderManager.CreateGenerator(System.Type,Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.QueryProvider.QueryProviderManager.CreateGenerator(System.Type, Inflatable.ClassMapper.IMappingSource)
  nameWithType: QueryProviderManager.CreateGenerator(Type, IMappingSource)
- uid: Inflatable.QueryProvider.QueryProviderManager.CreateGenerator*
  name: CreateGenerator
  href: api/Inflatable.QueryProvider.QueryProviderManager.html#Inflatable_QueryProvider_QueryProviderManager_CreateGenerator_
  commentId: Overload:Inflatable.QueryProvider.QueryProviderManager.CreateGenerator
  isSpec: "True"
  fullName: Inflatable.QueryProvider.QueryProviderManager.CreateGenerator
  nameWithType: QueryProviderManager.CreateGenerator
- uid: Inflatable.QueryProvider.QueryProviderManager.CreateGenerator``1(Inflatable.ClassMapper.IMappingSource)
  name: CreateGenerator<TMappedClass>(IMappingSource)
  href: api/Inflatable.QueryProvider.QueryProviderManager.html#Inflatable_QueryProvider_QueryProviderManager_CreateGenerator__1_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.QueryProvider.QueryProviderManager.CreateGenerator``1(Inflatable.ClassMapper.IMappingSource)
  name.vb: CreateGenerator(Of TMappedClass)(IMappingSource)
  fullName: Inflatable.QueryProvider.QueryProviderManager.CreateGenerator<TMappedClass>(Inflatable.ClassMapper.IMappingSource)
  fullName.vb: Inflatable.QueryProvider.QueryProviderManager.CreateGenerator(Of TMappedClass)(Inflatable.ClassMapper.IMappingSource)
  nameWithType: QueryProviderManager.CreateGenerator<TMappedClass>(IMappingSource)
  nameWithType.vb: QueryProviderManager.CreateGenerator(Of TMappedClass)(IMappingSource)
- uid: Inflatable.QueryProvider.QueryProviderManager.Logger
  name: Logger
  href: api/Inflatable.QueryProvider.QueryProviderManager.html#Inflatable_QueryProvider_QueryProviderManager_Logger
  commentId: P:Inflatable.QueryProvider.QueryProviderManager.Logger
  fullName: Inflatable.QueryProvider.QueryProviderManager.Logger
  nameWithType: QueryProviderManager.Logger
- uid: Inflatable.QueryProvider.QueryProviderManager.Logger*
  name: Logger
  href: api/Inflatable.QueryProvider.QueryProviderManager.html#Inflatable_QueryProvider_QueryProviderManager_Logger_
  commentId: Overload:Inflatable.QueryProvider.QueryProviderManager.Logger
  isSpec: "True"
  fullName: Inflatable.QueryProvider.QueryProviderManager.Logger
  nameWithType: QueryProviderManager.Logger
- uid: Inflatable.QueryProvider.QueryProviderManager.Providers
  name: Providers
  href: api/Inflatable.QueryProvider.QueryProviderManager.html#Inflatable_QueryProvider_QueryProviderManager_Providers
  commentId: P:Inflatable.QueryProvider.QueryProviderManager.Providers
  fullName: Inflatable.QueryProvider.QueryProviderManager.Providers
  nameWithType: QueryProviderManager.Providers
- uid: Inflatable.QueryProvider.QueryProviderManager.Providers*
  name: Providers
  href: api/Inflatable.QueryProvider.QueryProviderManager.html#Inflatable_QueryProvider_QueryProviderManager_Providers_
  commentId: Overload:Inflatable.QueryProvider.QueryProviderManager.Providers
  isSpec: "True"
  fullName: Inflatable.QueryProvider.QueryProviderManager.Providers
  nameWithType: QueryProviderManager.Providers
- uid: Inflatable.QueryProvider.QueryResults
  name: QueryResults
  href: api/Inflatable.QueryProvider.QueryResults.html
  commentId: T:Inflatable.QueryProvider.QueryResults
  fullName: Inflatable.QueryProvider.QueryResults
  nameWithType: QueryResults
- uid: Inflatable.QueryProvider.QueryResults.#ctor(Inflatable.QueryProvider.Interfaces.IQuery,System.Collections.Generic.IEnumerable{BigBook.Dynamo},Inflatable.Sessions.ISession,Aspectus.Aspectus)
  name: QueryResults(IQuery, IEnumerable<Dynamo>, ISession, Aspectus)
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults__ctor_Inflatable_QueryProvider_Interfaces_IQuery_System_Collections_Generic_IEnumerable_BigBook_Dynamo__Inflatable_Sessions_ISession_Aspectus_Aspectus_
  commentId: M:Inflatable.QueryProvider.QueryResults.#ctor(Inflatable.QueryProvider.Interfaces.IQuery,System.Collections.Generic.IEnumerable{BigBook.Dynamo},Inflatable.Sessions.ISession,Aspectus.Aspectus)
  name.vb: New(IQuery, IEnumerable(Of Dynamo), ISession, Aspectus)
  fullName: Inflatable.QueryProvider.QueryResults.QueryResults(Inflatable.QueryProvider.Interfaces.IQuery, System.Collections.Generic.IEnumerable<BigBook.Dynamo>, Inflatable.Sessions.ISession, Aspectus.Aspectus)
  fullName.vb: Inflatable.QueryProvider.QueryResults.New(Inflatable.QueryProvider.Interfaces.IQuery, System.Collections.Generic.IEnumerable(Of BigBook.Dynamo), Inflatable.Sessions.ISession, Aspectus.Aspectus)
  nameWithType: QueryResults.QueryResults(IQuery, IEnumerable<Dynamo>, ISession, Aspectus)
  nameWithType.vb: QueryResults.New(IQuery, IEnumerable(Of Dynamo), ISession, Aspectus)
- uid: Inflatable.QueryProvider.QueryResults.#ctor*
  name: QueryResults
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults__ctor_
  commentId: Overload:Inflatable.QueryProvider.QueryResults.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.QueryProvider.QueryResults.QueryResults
  fullName.vb: Inflatable.QueryProvider.QueryResults.New
  nameWithType: QueryResults.QueryResults
  nameWithType.vb: QueryResults.New
- uid: Inflatable.QueryProvider.QueryResults.Aspectus
  name: Aspectus
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_Aspectus
  commentId: P:Inflatable.QueryProvider.QueryResults.Aspectus
  fullName: Inflatable.QueryProvider.QueryResults.Aspectus
  nameWithType: QueryResults.Aspectus
- uid: Inflatable.QueryProvider.QueryResults.Aspectus*
  name: Aspectus
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_Aspectus_
  commentId: Overload:Inflatable.QueryProvider.QueryResults.Aspectus
  isSpec: "True"
  fullName: Inflatable.QueryProvider.QueryResults.Aspectus
  nameWithType: QueryResults.Aspectus
- uid: Inflatable.QueryProvider.QueryResults.CacheValues(System.String,System.Collections.Generic.List{Inflatable.QueryProvider.QueryResults},DragonHoard.Core.Interfaces.ICache,Inflatable.Registration.InflatableOptions)
  name: CacheValues(string, List<QueryResults>, ICache?, InflatableOptions)
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_CacheValues_System_String_System_Collections_Generic_List_Inflatable_QueryProvider_QueryResults__DragonHoard_Core_Interfaces_ICache_Inflatable_Registration_InflatableOptions_
  commentId: M:Inflatable.QueryProvider.QueryResults.CacheValues(System.String,System.Collections.Generic.List{Inflatable.QueryProvider.QueryResults},DragonHoard.Core.Interfaces.ICache,Inflatable.Registration.InflatableOptions)
  name.vb: CacheValues(String, List(Of QueryResults), ICache, InflatableOptions)
  fullName: Inflatable.QueryProvider.QueryResults.CacheValues(string, System.Collections.Generic.List<Inflatable.QueryProvider.QueryResults>, DragonHoard.Core.Interfaces.ICache?, Inflatable.Registration.InflatableOptions)
  fullName.vb: Inflatable.QueryProvider.QueryResults.CacheValues(String, System.Collections.Generic.List(Of Inflatable.QueryProvider.QueryResults), DragonHoard.Core.Interfaces.ICache, Inflatable.Registration.InflatableOptions)
  nameWithType: QueryResults.CacheValues(string, List<QueryResults>, ICache?, InflatableOptions)
  nameWithType.vb: QueryResults.CacheValues(String, List(Of QueryResults), ICache, InflatableOptions)
- uid: Inflatable.QueryProvider.QueryResults.CacheValues*
  name: CacheValues
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_CacheValues_
  commentId: Overload:Inflatable.QueryProvider.QueryResults.CacheValues
  isSpec: "True"
  fullName: Inflatable.QueryProvider.QueryResults.CacheValues
  nameWithType: QueryResults.CacheValues
- uid: Inflatable.QueryProvider.QueryResults.CanCopy(Inflatable.QueryProvider.QueryResults,System.Collections.Generic.IEnumerable{Inflatable.ClassMapper.Interfaces.IIDProperty})
  name: CanCopy(QueryResults, IEnumerable<IIDProperty>)
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_CanCopy_Inflatable_QueryProvider_QueryResults_System_Collections_Generic_IEnumerable_Inflatable_ClassMapper_Interfaces_IIDProperty__
  commentId: M:Inflatable.QueryProvider.QueryResults.CanCopy(Inflatable.QueryProvider.QueryResults,System.Collections.Generic.IEnumerable{Inflatable.ClassMapper.Interfaces.IIDProperty})
  name.vb: CanCopy(QueryResults, IEnumerable(Of IIDProperty))
  fullName: Inflatable.QueryProvider.QueryResults.CanCopy(Inflatable.QueryProvider.QueryResults, System.Collections.Generic.IEnumerable<Inflatable.ClassMapper.Interfaces.IIDProperty>)
  fullName.vb: Inflatable.QueryProvider.QueryResults.CanCopy(Inflatable.QueryProvider.QueryResults, System.Collections.Generic.IEnumerable(Of Inflatable.ClassMapper.Interfaces.IIDProperty))
  nameWithType: QueryResults.CanCopy(QueryResults, IEnumerable<IIDProperty>)
  nameWithType.vb: QueryResults.CanCopy(QueryResults, IEnumerable(Of IIDProperty))
- uid: Inflatable.QueryProvider.QueryResults.CanCopy*
  name: CanCopy
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_CanCopy_
  commentId: Overload:Inflatable.QueryProvider.QueryResults.CanCopy
  isSpec: "True"
  fullName: Inflatable.QueryProvider.QueryResults.CanCopy
  nameWithType: QueryResults.CanCopy
- uid: Inflatable.QueryProvider.QueryResults.ConvertValues*
  name: ConvertValues
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_ConvertValues_
  commentId: Overload:Inflatable.QueryProvider.QueryResults.ConvertValues
  isSpec: "True"
  fullName: Inflatable.QueryProvider.QueryResults.ConvertValues
  nameWithType: QueryResults.ConvertValues
- uid: Inflatable.QueryProvider.QueryResults.ConvertValues``1
  name: ConvertValues<TObject>()
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_ConvertValues__1
  commentId: M:Inflatable.QueryProvider.QueryResults.ConvertValues``1
  name.vb: ConvertValues(Of TObject)()
  fullName: Inflatable.QueryProvider.QueryResults.ConvertValues<TObject>()
  fullName.vb: Inflatable.QueryProvider.QueryResults.ConvertValues(Of TObject)()
  nameWithType: QueryResults.ConvertValues<TObject>()
  nameWithType.vb: QueryResults.ConvertValues(Of TObject)()
- uid: Inflatable.QueryProvider.QueryResults.Copy(Inflatable.QueryProvider.QueryResults,System.Collections.Generic.IEnumerable{Inflatable.ClassMapper.Interfaces.IIDProperty})
  name: Copy(QueryResults, IEnumerable<IIDProperty>)
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_Copy_Inflatable_QueryProvider_QueryResults_System_Collections_Generic_IEnumerable_Inflatable_ClassMapper_Interfaces_IIDProperty__
  commentId: M:Inflatable.QueryProvider.QueryResults.Copy(Inflatable.QueryProvider.QueryResults,System.Collections.Generic.IEnumerable{Inflatable.ClassMapper.Interfaces.IIDProperty})
  name.vb: Copy(QueryResults, IEnumerable(Of IIDProperty))
  fullName: Inflatable.QueryProvider.QueryResults.Copy(Inflatable.QueryProvider.QueryResults, System.Collections.Generic.IEnumerable<Inflatable.ClassMapper.Interfaces.IIDProperty>)
  fullName.vb: Inflatable.QueryProvider.QueryResults.Copy(Inflatable.QueryProvider.QueryResults, System.Collections.Generic.IEnumerable(Of Inflatable.ClassMapper.Interfaces.IIDProperty))
  nameWithType: QueryResults.Copy(QueryResults, IEnumerable<IIDProperty>)
  nameWithType.vb: QueryResults.Copy(QueryResults, IEnumerable(Of IIDProperty))
- uid: Inflatable.QueryProvider.QueryResults.Copy*
  name: Copy
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_Copy_
  commentId: Overload:Inflatable.QueryProvider.QueryResults.Copy
  isSpec: "True"
  fullName: Inflatable.QueryProvider.QueryResults.Copy
  nameWithType: QueryResults.Copy
- uid: Inflatable.QueryProvider.QueryResults.CopyOrAdd(Inflatable.QueryProvider.QueryResults,System.Collections.Generic.IEnumerable{Inflatable.ClassMapper.Interfaces.IIDProperty})
  name: CopyOrAdd(QueryResults, IEnumerable<IIDProperty>)
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_CopyOrAdd_Inflatable_QueryProvider_QueryResults_System_Collections_Generic_IEnumerable_Inflatable_ClassMapper_Interfaces_IIDProperty__
  commentId: M:Inflatable.QueryProvider.QueryResults.CopyOrAdd(Inflatable.QueryProvider.QueryResults,System.Collections.Generic.IEnumerable{Inflatable.ClassMapper.Interfaces.IIDProperty})
  name.vb: CopyOrAdd(QueryResults, IEnumerable(Of IIDProperty))
  fullName: Inflatable.QueryProvider.QueryResults.CopyOrAdd(Inflatable.QueryProvider.QueryResults, System.Collections.Generic.IEnumerable<Inflatable.ClassMapper.Interfaces.IIDProperty>)
  fullName.vb: Inflatable.QueryProvider.QueryResults.CopyOrAdd(Inflatable.QueryProvider.QueryResults, System.Collections.Generic.IEnumerable(Of Inflatable.ClassMapper.Interfaces.IIDProperty))
  nameWithType: QueryResults.CopyOrAdd(QueryResults, IEnumerable<IIDProperty>)
  nameWithType.vb: QueryResults.CopyOrAdd(QueryResults, IEnumerable(Of IIDProperty))
- uid: Inflatable.QueryProvider.QueryResults.CopyOrAdd*
  name: CopyOrAdd
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_CopyOrAdd_
  commentId: Overload:Inflatable.QueryProvider.QueryResults.CopyOrAdd
  isSpec: "True"
  fullName: Inflatable.QueryProvider.QueryResults.CopyOrAdd
  nameWithType: QueryResults.CopyOrAdd
- uid: Inflatable.QueryProvider.QueryResults.Query
  name: Query
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_Query
  commentId: P:Inflatable.QueryProvider.QueryResults.Query
  fullName: Inflatable.QueryProvider.QueryResults.Query
  nameWithType: QueryResults.Query
- uid: Inflatable.QueryProvider.QueryResults.Query*
  name: Query
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_Query_
  commentId: Overload:Inflatable.QueryProvider.QueryResults.Query
  isSpec: "True"
  fullName: Inflatable.QueryProvider.QueryResults.Query
  nameWithType: QueryResults.Query
- uid: Inflatable.QueryProvider.QueryResults.RemoveCacheTag(System.String,DragonHoard.Core.Interfaces.ICache)
  name: RemoveCacheTag(string, ICache?)
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_RemoveCacheTag_System_String_DragonHoard_Core_Interfaces_ICache_
  commentId: M:Inflatable.QueryProvider.QueryResults.RemoveCacheTag(System.String,DragonHoard.Core.Interfaces.ICache)
  name.vb: RemoveCacheTag(String, ICache)
  fullName: Inflatable.QueryProvider.QueryResults.RemoveCacheTag(string, DragonHoard.Core.Interfaces.ICache?)
  fullName.vb: Inflatable.QueryProvider.QueryResults.RemoveCacheTag(String, DragonHoard.Core.Interfaces.ICache)
  nameWithType: QueryResults.RemoveCacheTag(string, ICache?)
  nameWithType.vb: QueryResults.RemoveCacheTag(String, ICache)
- uid: Inflatable.QueryProvider.QueryResults.RemoveCacheTag*
  name: RemoveCacheTag
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_RemoveCacheTag_
  commentId: Overload:Inflatable.QueryProvider.QueryResults.RemoveCacheTag
  isSpec: "True"
  fullName: Inflatable.QueryProvider.QueryResults.RemoveCacheTag
  nameWithType: QueryResults.RemoveCacheTag
- uid: Inflatable.QueryProvider.QueryResults.Session
  name: Session
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_Session
  commentId: P:Inflatable.QueryProvider.QueryResults.Session
  fullName: Inflatable.QueryProvider.QueryResults.Session
  nameWithType: QueryResults.Session
- uid: Inflatable.QueryProvider.QueryResults.Session*
  name: Session
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_Session_
  commentId: Overload:Inflatable.QueryProvider.QueryResults.Session
  isSpec: "True"
  fullName: Inflatable.QueryProvider.QueryResults.Session
  nameWithType: QueryResults.Session
- uid: Inflatable.QueryProvider.QueryResults.TryGetCached(System.String,DragonHoard.Core.Interfaces.ICache,System.Collections.Generic.List{Inflatable.QueryProvider.QueryResults}@)
  name: TryGetCached(string, ICache?, out List<QueryResults>)
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_TryGetCached_System_String_DragonHoard_Core_Interfaces_ICache_System_Collections_Generic_List_Inflatable_QueryProvider_QueryResults___
  commentId: M:Inflatable.QueryProvider.QueryResults.TryGetCached(System.String,DragonHoard.Core.Interfaces.ICache,System.Collections.Generic.List{Inflatable.QueryProvider.QueryResults}@)
  name.vb: TryGetCached(String, ICache, List(Of QueryResults))
  fullName: Inflatable.QueryProvider.QueryResults.TryGetCached(string, DragonHoard.Core.Interfaces.ICache?, out System.Collections.Generic.List<Inflatable.QueryProvider.QueryResults>)
  fullName.vb: Inflatable.QueryProvider.QueryResults.TryGetCached(String, DragonHoard.Core.Interfaces.ICache, System.Collections.Generic.List(Of Inflatable.QueryProvider.QueryResults))
  nameWithType: QueryResults.TryGetCached(string, ICache?, out List<QueryResults>)
  nameWithType.vb: QueryResults.TryGetCached(String, ICache, List(Of QueryResults))
- uid: Inflatable.QueryProvider.QueryResults.TryGetCached*
  name: TryGetCached
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_TryGetCached_
  commentId: Overload:Inflatable.QueryProvider.QueryResults.TryGetCached
  isSpec: "True"
  fullName: Inflatable.QueryProvider.QueryResults.TryGetCached
  nameWithType: QueryResults.TryGetCached
- uid: Inflatable.QueryProvider.QueryResults.Values
  name: Values
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_Values
  commentId: P:Inflatable.QueryProvider.QueryResults.Values
  fullName: Inflatable.QueryProvider.QueryResults.Values
  nameWithType: QueryResults.Values
- uid: Inflatable.QueryProvider.QueryResults.Values*
  name: Values
  href: api/Inflatable.QueryProvider.QueryResults.html#Inflatable_QueryProvider_QueryResults_Values_
  commentId: Overload:Inflatable.QueryProvider.QueryResults.Values
  isSpec: "True"
  fullName: Inflatable.QueryProvider.QueryResults.Values
  nameWithType: QueryResults.Values
- uid: Inflatable.Registration
  name: Inflatable.Registration
  href: api/Inflatable.Registration.html
  commentId: N:Inflatable.Registration
  fullName: Inflatable.Registration
  nameWithType: Inflatable.Registration
- uid: Inflatable.Registration.InflatableOptions
  name: InflatableOptions
  href: api/Inflatable.Registration.InflatableOptions.html
  commentId: T:Inflatable.Registration.InflatableOptions
  fullName: Inflatable.Registration.InflatableOptions
  nameWithType: InflatableOptions
- uid: Inflatable.Registration.InflatableOptions.AbsoluteExpirationQueriesKeptInCache
  name: AbsoluteExpirationQueriesKeptInCache
  href: api/Inflatable.Registration.InflatableOptions.html#Inflatable_Registration_InflatableOptions_AbsoluteExpirationQueriesKeptInCache
  commentId: P:Inflatable.Registration.InflatableOptions.AbsoluteExpirationQueriesKeptInCache
  fullName: Inflatable.Registration.InflatableOptions.AbsoluteExpirationQueriesKeptInCache
  nameWithType: InflatableOptions.AbsoluteExpirationQueriesKeptInCache
- uid: Inflatable.Registration.InflatableOptions.AbsoluteExpirationQueriesKeptInCache*
  name: AbsoluteExpirationQueriesKeptInCache
  href: api/Inflatable.Registration.InflatableOptions.html#Inflatable_Registration_InflatableOptions_AbsoluteExpirationQueriesKeptInCache_
  commentId: Overload:Inflatable.Registration.InflatableOptions.AbsoluteExpirationQueriesKeptInCache
  isSpec: "True"
  fullName: Inflatable.Registration.InflatableOptions.AbsoluteExpirationQueriesKeptInCache
  nameWithType: InflatableOptions.AbsoluteExpirationQueriesKeptInCache
- uid: Inflatable.Registration.InflatableOptions.Default
  name: Default
  href: api/Inflatable.Registration.InflatableOptions.html#Inflatable_Registration_InflatableOptions_Default
  commentId: P:Inflatable.Registration.InflatableOptions.Default
  fullName: Inflatable.Registration.InflatableOptions.Default
  nameWithType: InflatableOptions.Default
- uid: Inflatable.Registration.InflatableOptions.Default*
  name: Default
  href: api/Inflatable.Registration.InflatableOptions.html#Inflatable_Registration_InflatableOptions_Default_
  commentId: Overload:Inflatable.Registration.InflatableOptions.Default
  isSpec: "True"
  fullName: Inflatable.Registration.InflatableOptions.Default
  nameWithType: InflatableOptions.Default
- uid: Inflatable.Registration.InflatableOptions.MaxCacheSize
  name: MaxCacheSize
  href: api/Inflatable.Registration.InflatableOptions.html#Inflatable_Registration_InflatableOptions_MaxCacheSize
  commentId: P:Inflatable.Registration.InflatableOptions.MaxCacheSize
  fullName: Inflatable.Registration.InflatableOptions.MaxCacheSize
  nameWithType: InflatableOptions.MaxCacheSize
- uid: Inflatable.Registration.InflatableOptions.MaxCacheSize*
  name: MaxCacheSize
  href: api/Inflatable.Registration.InflatableOptions.html#Inflatable_Registration_InflatableOptions_MaxCacheSize_
  commentId: Overload:Inflatable.Registration.InflatableOptions.MaxCacheSize
  isSpec: "True"
  fullName: Inflatable.Registration.InflatableOptions.MaxCacheSize
  nameWithType: InflatableOptions.MaxCacheSize
- uid: Inflatable.Registration.InflatableOptions.ScanFrequency
  name: ScanFrequency
  href: api/Inflatable.Registration.InflatableOptions.html#Inflatable_Registration_InflatableOptions_ScanFrequency
  commentId: P:Inflatable.Registration.InflatableOptions.ScanFrequency
  fullName: Inflatable.Registration.InflatableOptions.ScanFrequency
  nameWithType: InflatableOptions.ScanFrequency
- uid: Inflatable.Registration.InflatableOptions.ScanFrequency*
  name: ScanFrequency
  href: api/Inflatable.Registration.InflatableOptions.html#Inflatable_Registration_InflatableOptions_ScanFrequency_
  commentId: Overload:Inflatable.Registration.InflatableOptions.ScanFrequency
  isSpec: "True"
  fullName: Inflatable.Registration.InflatableOptions.ScanFrequency
  nameWithType: InflatableOptions.ScanFrequency
- uid: Inflatable.Registration.InflatableOptions.SlidingExpirationQueriesKeptInCache
  name: SlidingExpirationQueriesKeptInCache
  href: api/Inflatable.Registration.InflatableOptions.html#Inflatable_Registration_InflatableOptions_SlidingExpirationQueriesKeptInCache
  commentId: P:Inflatable.Registration.InflatableOptions.SlidingExpirationQueriesKeptInCache
  fullName: Inflatable.Registration.InflatableOptions.SlidingExpirationQueriesKeptInCache
  nameWithType: InflatableOptions.SlidingExpirationQueriesKeptInCache
- uid: Inflatable.Registration.InflatableOptions.SlidingExpirationQueriesKeptInCache*
  name: SlidingExpirationQueriesKeptInCache
  href: api/Inflatable.Registration.InflatableOptions.html#Inflatable_Registration_InflatableOptions_SlidingExpirationQueriesKeptInCache_
  commentId: Overload:Inflatable.Registration.InflatableOptions.SlidingExpirationQueriesKeptInCache
  isSpec: "True"
  fullName: Inflatable.Registration.InflatableOptions.SlidingExpirationQueriesKeptInCache
  nameWithType: InflatableOptions.SlidingExpirationQueriesKeptInCache
- uid: Inflatable.Registration.InflatableOptions.Value
  name: Value
  href: api/Inflatable.Registration.InflatableOptions.html#Inflatable_Registration_InflatableOptions_Value
  commentId: P:Inflatable.Registration.InflatableOptions.Value
  fullName: Inflatable.Registration.InflatableOptions.Value
  nameWithType: InflatableOptions.Value
- uid: Inflatable.Registration.InflatableOptions.Value*
  name: Value
  href: api/Inflatable.Registration.InflatableOptions.html#Inflatable_Registration_InflatableOptions_Value_
  commentId: Overload:Inflatable.Registration.InflatableOptions.Value
  isSpec: "True"
  fullName: Inflatable.Registration.InflatableOptions.Value
  nameWithType: InflatableOptions.Value
- uid: Inflatable.Schema
  name: Inflatable.Schema
  href: api/Inflatable.Schema.html
  commentId: N:Inflatable.Schema
  fullName: Inflatable.Schema
  nameWithType: Inflatable.Schema
- uid: Inflatable.Schema.DataModel
  name: DataModel
  href: api/Inflatable.Schema.DataModel.html
  commentId: T:Inflatable.Schema.DataModel
  fullName: Inflatable.Schema.DataModel
  nameWithType: DataModel
- uid: Inflatable.Schema.DataModel.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.Configuration.IConfiguration,Data.Modeler.DataModeler,Holmes.Sherlock,SQLHelperDB.SQLHelper,Microsoft.Extensions.Logging.ILogger)
  name: DataModel(IMappingSource, IConfiguration, DataModeler, Sherlock, SQLHelper, ILogger?)
  href: api/Inflatable.Schema.DataModel.html#Inflatable_Schema_DataModel__ctor_Inflatable_ClassMapper_IMappingSource_Microsoft_Extensions_Configuration_IConfiguration_Data_Modeler_DataModeler_Holmes_Sherlock_SQLHelperDB_SQLHelper_Microsoft_Extensions_Logging_ILogger_
  commentId: M:Inflatable.Schema.DataModel.#ctor(Inflatable.ClassMapper.IMappingSource,Microsoft.Extensions.Configuration.IConfiguration,Data.Modeler.DataModeler,Holmes.Sherlock,SQLHelperDB.SQLHelper,Microsoft.Extensions.Logging.ILogger)
  name.vb: New(IMappingSource, IConfiguration, DataModeler, Sherlock, SQLHelper, ILogger)
  fullName: Inflatable.Schema.DataModel.DataModel(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.Configuration.IConfiguration, Data.Modeler.DataModeler, Holmes.Sherlock, SQLHelperDB.SQLHelper, Microsoft.Extensions.Logging.ILogger?)
  fullName.vb: Inflatable.Schema.DataModel.New(Inflatable.ClassMapper.IMappingSource, Microsoft.Extensions.Configuration.IConfiguration, Data.Modeler.DataModeler, Holmes.Sherlock, SQLHelperDB.SQLHelper, Microsoft.Extensions.Logging.ILogger)
  nameWithType: DataModel.DataModel(IMappingSource, IConfiguration, DataModeler, Sherlock, SQLHelper, ILogger?)
  nameWithType.vb: DataModel.New(IMappingSource, IConfiguration, DataModeler, Sherlock, SQLHelper, ILogger)
- uid: Inflatable.Schema.DataModel.#ctor*
  name: DataModel
  href: api/Inflatable.Schema.DataModel.html#Inflatable_Schema_DataModel__ctor_
  commentId: Overload:Inflatable.Schema.DataModel.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.Schema.DataModel.DataModel
  fullName.vb: Inflatable.Schema.DataModel.New
  nameWithType: DataModel.DataModel
  nameWithType.vb: DataModel.New
- uid: Inflatable.Schema.DataModel.GeneratedSchemaChanges
  name: GeneratedSchemaChanges
  href: api/Inflatable.Schema.DataModel.html#Inflatable_Schema_DataModel_GeneratedSchemaChanges
  commentId: P:Inflatable.Schema.DataModel.GeneratedSchemaChanges
  fullName: Inflatable.Schema.DataModel.GeneratedSchemaChanges
  nameWithType: DataModel.GeneratedSchemaChanges
- uid: Inflatable.Schema.DataModel.GeneratedSchemaChanges*
  name: GeneratedSchemaChanges
  href: api/Inflatable.Schema.DataModel.html#Inflatable_Schema_DataModel_GeneratedSchemaChanges_
  commentId: Overload:Inflatable.Schema.DataModel.GeneratedSchemaChanges
  isSpec: "True"
  fullName: Inflatable.Schema.DataModel.GeneratedSchemaChanges
  nameWithType: DataModel.GeneratedSchemaChanges
- uid: Inflatable.Schema.DataModel.SourceSpec
  name: SourceSpec
  href: api/Inflatable.Schema.DataModel.html#Inflatable_Schema_DataModel_SourceSpec
  commentId: P:Inflatable.Schema.DataModel.SourceSpec
  fullName: Inflatable.Schema.DataModel.SourceSpec
  nameWithType: DataModel.SourceSpec
- uid: Inflatable.Schema.DataModel.SourceSpec*
  name: SourceSpec
  href: api/Inflatable.Schema.DataModel.html#Inflatable_Schema_DataModel_SourceSpec_
  commentId: Overload:Inflatable.Schema.DataModel.SourceSpec
  isSpec: "True"
  fullName: Inflatable.Schema.DataModel.SourceSpec
  nameWithType: DataModel.SourceSpec
- uid: Inflatable.Schema.SchemaManager
  name: SchemaManager
  href: api/Inflatable.Schema.SchemaManager.html
  commentId: T:Inflatable.Schema.SchemaManager
  fullName: Inflatable.Schema.SchemaManager
  nameWithType: SchemaManager
- uid: Inflatable.Schema.SchemaManager.#ctor(Inflatable.ClassMapper.MappingManager,Microsoft.Extensions.Configuration.IConfiguration,Data.Modeler.DataModeler,Holmes.Sherlock,SQLHelperDB.SQLHelper,Microsoft.Extensions.Logging.ILogger{Inflatable.Schema.SchemaManager})
  name: SchemaManager(MappingManager, IConfiguration, DataModeler, Sherlock, SQLHelper, ILogger<SchemaManager>)
  href: api/Inflatable.Schema.SchemaManager.html#Inflatable_Schema_SchemaManager__ctor_Inflatable_ClassMapper_MappingManager_Microsoft_Extensions_Configuration_IConfiguration_Data_Modeler_DataModeler_Holmes_Sherlock_SQLHelperDB_SQLHelper_Microsoft_Extensions_Logging_ILogger_Inflatable_Schema_SchemaManager__
  commentId: M:Inflatable.Schema.SchemaManager.#ctor(Inflatable.ClassMapper.MappingManager,Microsoft.Extensions.Configuration.IConfiguration,Data.Modeler.DataModeler,Holmes.Sherlock,SQLHelperDB.SQLHelper,Microsoft.Extensions.Logging.ILogger{Inflatable.Schema.SchemaManager})
  name.vb: New(MappingManager, IConfiguration, DataModeler, Sherlock, SQLHelper, ILogger(Of SchemaManager))
  fullName: Inflatable.Schema.SchemaManager.SchemaManager(Inflatable.ClassMapper.MappingManager, Microsoft.Extensions.Configuration.IConfiguration, Data.Modeler.DataModeler, Holmes.Sherlock, SQLHelperDB.SQLHelper, Microsoft.Extensions.Logging.ILogger<Inflatable.Schema.SchemaManager>)
  fullName.vb: Inflatable.Schema.SchemaManager.New(Inflatable.ClassMapper.MappingManager, Microsoft.Extensions.Configuration.IConfiguration, Data.Modeler.DataModeler, Holmes.Sherlock, SQLHelperDB.SQLHelper, Microsoft.Extensions.Logging.ILogger(Of Inflatable.Schema.SchemaManager))
  nameWithType: SchemaManager.SchemaManager(MappingManager, IConfiguration, DataModeler, Sherlock, SQLHelper, ILogger<SchemaManager>)
  nameWithType.vb: SchemaManager.New(MappingManager, IConfiguration, DataModeler, Sherlock, SQLHelper, ILogger(Of SchemaManager))
- uid: Inflatable.Schema.SchemaManager.#ctor*
  name: SchemaManager
  href: api/Inflatable.Schema.SchemaManager.html#Inflatable_Schema_SchemaManager__ctor_
  commentId: Overload:Inflatable.Schema.SchemaManager.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.Schema.SchemaManager.SchemaManager
  fullName.vb: Inflatable.Schema.SchemaManager.New
  nameWithType: SchemaManager.SchemaManager
  nameWithType.vb: SchemaManager.New
- uid: Inflatable.Schema.SchemaManager.Models
  name: Models
  href: api/Inflatable.Schema.SchemaManager.html#Inflatable_Schema_SchemaManager_Models
  commentId: P:Inflatable.Schema.SchemaManager.Models
  fullName: Inflatable.Schema.SchemaManager.Models
  nameWithType: SchemaManager.Models
- uid: Inflatable.Schema.SchemaManager.Models*
  name: Models
  href: api/Inflatable.Schema.SchemaManager.html#Inflatable_Schema_SchemaManager_Models_
  commentId: Overload:Inflatable.Schema.SchemaManager.Models
  isSpec: "True"
  fullName: Inflatable.Schema.SchemaManager.Models
  nameWithType: SchemaManager.Models
- uid: Inflatable.Sessions
  name: Inflatable.Sessions
  href: api/Inflatable.Sessions.html
  commentId: N:Inflatable.Sessions
  fullName: Inflatable.Sessions
  nameWithType: Inflatable.Sessions
- uid: Inflatable.Sessions.Commands
  name: Inflatable.Sessions.Commands
  href: api/Inflatable.Sessions.Commands.html
  commentId: N:Inflatable.Sessions.Commands
  fullName: Inflatable.Sessions.Commands
  nameWithType: Inflatable.Sessions.Commands
- uid: Inflatable.Sessions.Commands.BaseClasses
  name: Inflatable.Sessions.Commands.BaseClasses
  href: api/Inflatable.Sessions.Commands.BaseClasses.html
  commentId: N:Inflatable.Sessions.Commands.BaseClasses
  fullName: Inflatable.Sessions.Commands.BaseClasses
  nameWithType: Inflatable.Sessions.Commands.BaseClasses
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass
  name: CommandBaseClass
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html
  commentId: T:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass
  nameWithType: CommandBaseClass
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.#ctor(Inflatable.ClassMapper.MappingManager,Inflatable.QueryProvider.QueryProviderManager,DragonHoard.Core.Interfaces.ICache,System.Object[])
  name: CommandBaseClass(MappingManager, QueryProviderManager, ICache, object[])
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass__ctor_Inflatable_ClassMapper_MappingManager_Inflatable_QueryProvider_QueryProviderManager_DragonHoard_Core_Interfaces_ICache_System_Object___
  commentId: M:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.#ctor(Inflatable.ClassMapper.MappingManager,Inflatable.QueryProvider.QueryProviderManager,DragonHoard.Core.Interfaces.ICache,System.Object[])
  name.vb: New(MappingManager, QueryProviderManager, ICache, Object())
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CommandBaseClass(Inflatable.ClassMapper.MappingManager, Inflatable.QueryProvider.QueryProviderManager, DragonHoard.Core.Interfaces.ICache, object[])
  fullName.vb: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.New(Inflatable.ClassMapper.MappingManager, Inflatable.QueryProvider.QueryProviderManager, DragonHoard.Core.Interfaces.ICache, Object())
  nameWithType: CommandBaseClass.CommandBaseClass(MappingManager, QueryProviderManager, ICache, object[])
  nameWithType.vb: CommandBaseClass.New(MappingManager, QueryProviderManager, ICache, Object())
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.#ctor*
  name: CommandBaseClass
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass__ctor_
  commentId: Overload:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CommandBaseClass
  fullName.vb: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.New
  nameWithType: CommandBaseClass.CommandBaseClass
  nameWithType.vb: CommandBaseClass.New
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Cache
  name: Cache
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_Cache
  commentId: P:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Cache
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Cache
  nameWithType: CommandBaseClass.Cache
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Cache*
  name: Cache
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_Cache_
  commentId: Overload:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Cache
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Cache
  nameWithType: CommandBaseClass.Cache
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CanExecute(System.Object,Inflatable.ClassMapper.IMappingSource)
  name: CanExecute(object, IMappingSource)
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_CanExecute_System_Object_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CanExecute(System.Object,Inflatable.ClassMapper.IMappingSource)
  name.vb: CanExecute(Object, IMappingSource)
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CanExecute(object, Inflatable.ClassMapper.IMappingSource)
  fullName.vb: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CanExecute(Object, Inflatable.ClassMapper.IMappingSource)
  nameWithType: CommandBaseClass.CanExecute(object, IMappingSource)
  nameWithType.vb: CommandBaseClass.CanExecute(Object, IMappingSource)
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CanExecute*
  name: CanExecute
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_CanExecute_
  commentId: Overload:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CanExecute
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CanExecute
  nameWithType: CommandBaseClass.CanExecute
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CommandType
  name: CommandType
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_CommandType
  commentId: P:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CommandType
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CommandType
  nameWithType: CommandBaseClass.CommandType
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CommandType*
  name: CommandType
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_CommandType_
  commentId: Overload:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CommandType
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CommandType
  nameWithType: CommandBaseClass.CommandType
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CompareObjects(System.Object,System.Object,Inflatable.ClassMapper.IMappingSource)
  name: CompareObjects(object, object, IMappingSource)
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_CompareObjects_System_Object_System_Object_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CompareObjects(System.Object,System.Object,Inflatable.ClassMapper.IMappingSource)
  name.vb: CompareObjects(Object, Object, IMappingSource)
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CompareObjects(object, object, Inflatable.ClassMapper.IMappingSource)
  fullName.vb: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CompareObjects(Object, Object, Inflatable.ClassMapper.IMappingSource)
  nameWithType: CommandBaseClass.CompareObjects(object, object, IMappingSource)
  nameWithType.vb: CommandBaseClass.CompareObjects(Object, Object, IMappingSource)
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CompareObjects*
  name: CompareObjects
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_CompareObjects_
  commentId: Overload:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CompareObjects
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.CompareObjects
  nameWithType: CommandBaseClass.CompareObjects
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Execute(Inflatable.ClassMapper.IMappingSource)
  name: Execute(IMappingSource)
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_Execute_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Execute(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Execute(Inflatable.ClassMapper.IMappingSource)
  nameWithType: CommandBaseClass.Execute(IMappingSource)
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Execute*
  name: Execute
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_Execute_
  commentId: Overload:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Execute
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Execute
  nameWithType: CommandBaseClass.Execute
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.ExecuteAsync(Inflatable.ClassMapper.IMappingSource)
  name: ExecuteAsync(IMappingSource)
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_ExecuteAsync_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.ExecuteAsync(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.ExecuteAsync(Inflatable.ClassMapper.IMappingSource)
  nameWithType: CommandBaseClass.ExecuteAsync(IMappingSource)
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.ExecuteAsync*
  name: ExecuteAsync
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_ExecuteAsync_
  commentId: Overload:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.ExecuteAsync
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.ExecuteAsync
  nameWithType: CommandBaseClass.ExecuteAsync
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.MappingManager
  name: MappingManager
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_MappingManager
  commentId: P:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.MappingManager
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.MappingManager
  nameWithType: CommandBaseClass.MappingManager
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.MappingManager*
  name: MappingManager
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_MappingManager_
  commentId: Overload:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.MappingManager
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.MappingManager
  nameWithType: CommandBaseClass.MappingManager
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Merge(Inflatable.Sessions.Commands.Interfaces.ICommand)
  name: Merge(ICommand)
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_Merge_Inflatable_Sessions_Commands_Interfaces_ICommand_
  commentId: M:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Merge(Inflatable.Sessions.Commands.Interfaces.ICommand)
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Merge(Inflatable.Sessions.Commands.Interfaces.ICommand)
  nameWithType: CommandBaseClass.Merge(ICommand)
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Merge*
  name: Merge
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_Merge_
  commentId: Overload:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Merge
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Merge
  nameWithType: CommandBaseClass.Merge
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Objects
  name: Objects
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_Objects
  commentId: P:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Objects
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Objects
  nameWithType: CommandBaseClass.Objects
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Objects*
  name: Objects
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_Objects_
  commentId: Overload:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Objects
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.Objects
  nameWithType: CommandBaseClass.Objects
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.QueryProviderManager
  name: QueryProviderManager
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_QueryProviderManager
  commentId: P:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.QueryProviderManager
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.QueryProviderManager
  nameWithType: CommandBaseClass.QueryProviderManager
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.QueryProviderManager*
  name: QueryProviderManager
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_QueryProviderManager_
  commentId: Overload:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.QueryProviderManager
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.QueryProviderManager
  nameWithType: CommandBaseClass.QueryProviderManager
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.RemoveItemsFromCache(System.Object)
  name: RemoveItemsFromCache(object)
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_RemoveItemsFromCache_System_Object_
  commentId: M:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.RemoveItemsFromCache(System.Object)
  name.vb: RemoveItemsFromCache(Object)
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.RemoveItemsFromCache(object)
  fullName.vb: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.RemoveItemsFromCache(Object)
  nameWithType: CommandBaseClass.RemoveItemsFromCache(object)
  nameWithType.vb: CommandBaseClass.RemoveItemsFromCache(Object)
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.RemoveItemsFromCache*
  name: RemoveItemsFromCache
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_RemoveItemsFromCache_
  commentId: Overload:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.RemoveItemsFromCache
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.RemoveItemsFromCache
  nameWithType: CommandBaseClass.RemoveItemsFromCache
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.WasObjectSeen(System.Object,System.Collections.Generic.IList{System.Object},Inflatable.ClassMapper.IMappingSource)
  name: WasObjectSeen(object, IList<object>, IMappingSource)
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_WasObjectSeen_System_Object_System_Collections_Generic_IList_System_Object__Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.WasObjectSeen(System.Object,System.Collections.Generic.IList{System.Object},Inflatable.ClassMapper.IMappingSource)
  name.vb: WasObjectSeen(Object, IList(Of Object), IMappingSource)
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.WasObjectSeen(object, System.Collections.Generic.IList<object>, Inflatable.ClassMapper.IMappingSource)
  fullName.vb: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.WasObjectSeen(Object, System.Collections.Generic.IList(Of Object), Inflatable.ClassMapper.IMappingSource)
  nameWithType: CommandBaseClass.WasObjectSeen(object, IList<object>, IMappingSource)
  nameWithType.vb: CommandBaseClass.WasObjectSeen(Object, IList(Of Object), IMappingSource)
- uid: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.WasObjectSeen*
  name: WasObjectSeen
  href: api/Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.html#Inflatable_Sessions_Commands_BaseClasses_CommandBaseClass_WasObjectSeen_
  commentId: Overload:Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.WasObjectSeen
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.BaseClasses.CommandBaseClass.WasObjectSeen
  nameWithType: CommandBaseClass.WasObjectSeen
- uid: Inflatable.Sessions.Commands.DeleteCommand
  name: DeleteCommand
  href: api/Inflatable.Sessions.Commands.DeleteCommand.html
  commentId: T:Inflatable.Sessions.Commands.DeleteCommand
  fullName: Inflatable.Sessions.Commands.DeleteCommand
  nameWithType: DeleteCommand
- uid: Inflatable.Sessions.Commands.DeleteCommand.#ctor(Inflatable.ClassMapper.MappingManager,Inflatable.QueryProvider.QueryProviderManager,DragonHoard.Core.Interfaces.ICache,System.Object[])
  name: DeleteCommand(MappingManager, QueryProviderManager, ICache, params object[])
  href: api/Inflatable.Sessions.Commands.DeleteCommand.html#Inflatable_Sessions_Commands_DeleteCommand__ctor_Inflatable_ClassMapper_MappingManager_Inflatable_QueryProvider_QueryProviderManager_DragonHoard_Core_Interfaces_ICache_System_Object___
  commentId: M:Inflatable.Sessions.Commands.DeleteCommand.#ctor(Inflatable.ClassMapper.MappingManager,Inflatable.QueryProvider.QueryProviderManager,DragonHoard.Core.Interfaces.ICache,System.Object[])
  name.vb: New(MappingManager, QueryProviderManager, ICache, ParamArray Object())
  fullName: Inflatable.Sessions.Commands.DeleteCommand.DeleteCommand(Inflatable.ClassMapper.MappingManager, Inflatable.QueryProvider.QueryProviderManager, DragonHoard.Core.Interfaces.ICache, params object[])
  fullName.vb: Inflatable.Sessions.Commands.DeleteCommand.New(Inflatable.ClassMapper.MappingManager, Inflatable.QueryProvider.QueryProviderManager, DragonHoard.Core.Interfaces.ICache, ParamArray Object())
  nameWithType: DeleteCommand.DeleteCommand(MappingManager, QueryProviderManager, ICache, params object[])
  nameWithType.vb: DeleteCommand.New(MappingManager, QueryProviderManager, ICache, ParamArray Object())
- uid: Inflatable.Sessions.Commands.DeleteCommand.#ctor*
  name: DeleteCommand
  href: api/Inflatable.Sessions.Commands.DeleteCommand.html#Inflatable_Sessions_Commands_DeleteCommand__ctor_
  commentId: Overload:Inflatable.Sessions.Commands.DeleteCommand.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.Sessions.Commands.DeleteCommand.DeleteCommand
  fullName.vb: Inflatable.Sessions.Commands.DeleteCommand.New
  nameWithType: DeleteCommand.DeleteCommand
  nameWithType.vb: DeleteCommand.New
- uid: Inflatable.Sessions.Commands.DeleteCommand.CommandType
  name: CommandType
  href: api/Inflatable.Sessions.Commands.DeleteCommand.html#Inflatable_Sessions_Commands_DeleteCommand_CommandType
  commentId: P:Inflatable.Sessions.Commands.DeleteCommand.CommandType
  fullName: Inflatable.Sessions.Commands.DeleteCommand.CommandType
  nameWithType: DeleteCommand.CommandType
- uid: Inflatable.Sessions.Commands.DeleteCommand.CommandType*
  name: CommandType
  href: api/Inflatable.Sessions.Commands.DeleteCommand.html#Inflatable_Sessions_Commands_DeleteCommand_CommandType_
  commentId: Overload:Inflatable.Sessions.Commands.DeleteCommand.CommandType
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.DeleteCommand.CommandType
  nameWithType: DeleteCommand.CommandType
- uid: Inflatable.Sessions.Commands.DeleteCommand.Execute(Inflatable.ClassMapper.IMappingSource)
  name: Execute(IMappingSource)
  href: api/Inflatable.Sessions.Commands.DeleteCommand.html#Inflatable_Sessions_Commands_DeleteCommand_Execute_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.Sessions.Commands.DeleteCommand.Execute(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.Sessions.Commands.DeleteCommand.Execute(Inflatable.ClassMapper.IMappingSource)
  nameWithType: DeleteCommand.Execute(IMappingSource)
- uid: Inflatable.Sessions.Commands.DeleteCommand.Execute*
  name: Execute
  href: api/Inflatable.Sessions.Commands.DeleteCommand.html#Inflatable_Sessions_Commands_DeleteCommand_Execute_
  commentId: Overload:Inflatable.Sessions.Commands.DeleteCommand.Execute
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.DeleteCommand.Execute
  nameWithType: DeleteCommand.Execute
- uid: Inflatable.Sessions.Commands.DeleteCommand.ExecuteAsync(Inflatable.ClassMapper.IMappingSource)
  name: ExecuteAsync(IMappingSource)
  href: api/Inflatable.Sessions.Commands.DeleteCommand.html#Inflatable_Sessions_Commands_DeleteCommand_ExecuteAsync_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.Sessions.Commands.DeleteCommand.ExecuteAsync(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.Sessions.Commands.DeleteCommand.ExecuteAsync(Inflatable.ClassMapper.IMappingSource)
  nameWithType: DeleteCommand.ExecuteAsync(IMappingSource)
- uid: Inflatable.Sessions.Commands.DeleteCommand.ExecuteAsync*
  name: ExecuteAsync
  href: api/Inflatable.Sessions.Commands.DeleteCommand.html#Inflatable_Sessions_Commands_DeleteCommand_ExecuteAsync_
  commentId: Overload:Inflatable.Sessions.Commands.DeleteCommand.ExecuteAsync
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.DeleteCommand.ExecuteAsync
  nameWithType: DeleteCommand.ExecuteAsync
- uid: Inflatable.Sessions.Commands.Enums
  name: Inflatable.Sessions.Commands.Enums
  href: api/Inflatable.Sessions.Commands.Enums.html
  commentId: N:Inflatable.Sessions.Commands.Enums
  fullName: Inflatable.Sessions.Commands.Enums
  nameWithType: Inflatable.Sessions.Commands.Enums
- uid: Inflatable.Sessions.Commands.Enums.CommandType
  name: CommandType
  href: api/Inflatable.Sessions.Commands.Enums.CommandType.html
  commentId: T:Inflatable.Sessions.Commands.Enums.CommandType
  fullName: Inflatable.Sessions.Commands.Enums.CommandType
  nameWithType: CommandType
- uid: Inflatable.Sessions.Commands.Enums.CommandType.Delete
  name: Delete
  href: api/Inflatable.Sessions.Commands.Enums.CommandType.html#Inflatable_Sessions_Commands_Enums_CommandType_Delete
  commentId: F:Inflatable.Sessions.Commands.Enums.CommandType.Delete
  fullName: Inflatable.Sessions.Commands.Enums.CommandType.Delete
  nameWithType: CommandType.Delete
- uid: Inflatable.Sessions.Commands.Enums.CommandType.Save
  name: Save
  href: api/Inflatable.Sessions.Commands.Enums.CommandType.html#Inflatable_Sessions_Commands_Enums_CommandType_Save
  commentId: F:Inflatable.Sessions.Commands.Enums.CommandType.Save
  fullName: Inflatable.Sessions.Commands.Enums.CommandType.Save
  nameWithType: CommandType.Save
- uid: Inflatable.Sessions.Commands.Interfaces
  name: Inflatable.Sessions.Commands.Interfaces
  href: api/Inflatable.Sessions.Commands.Interfaces.html
  commentId: N:Inflatable.Sessions.Commands.Interfaces
  fullName: Inflatable.Sessions.Commands.Interfaces
  nameWithType: Inflatable.Sessions.Commands.Interfaces
- uid: Inflatable.Sessions.Commands.Interfaces.ICommand
  name: ICommand
  href: api/Inflatable.Sessions.Commands.Interfaces.ICommand.html
  commentId: T:Inflatable.Sessions.Commands.Interfaces.ICommand
  fullName: Inflatable.Sessions.Commands.Interfaces.ICommand
  nameWithType: ICommand
- uid: Inflatable.Sessions.Commands.Interfaces.ICommand.CommandType
  name: CommandType
  href: api/Inflatable.Sessions.Commands.Interfaces.ICommand.html#Inflatable_Sessions_Commands_Interfaces_ICommand_CommandType
  commentId: P:Inflatable.Sessions.Commands.Interfaces.ICommand.CommandType
  fullName: Inflatable.Sessions.Commands.Interfaces.ICommand.CommandType
  nameWithType: ICommand.CommandType
- uid: Inflatable.Sessions.Commands.Interfaces.ICommand.CommandType*
  name: CommandType
  href: api/Inflatable.Sessions.Commands.Interfaces.ICommand.html#Inflatable_Sessions_Commands_Interfaces_ICommand_CommandType_
  commentId: Overload:Inflatable.Sessions.Commands.Interfaces.ICommand.CommandType
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.Interfaces.ICommand.CommandType
  nameWithType: ICommand.CommandType
- uid: Inflatable.Sessions.Commands.Interfaces.ICommand.Execute(Inflatable.ClassMapper.IMappingSource)
  name: Execute(IMappingSource)
  href: api/Inflatable.Sessions.Commands.Interfaces.ICommand.html#Inflatable_Sessions_Commands_Interfaces_ICommand_Execute_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.Sessions.Commands.Interfaces.ICommand.Execute(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.Sessions.Commands.Interfaces.ICommand.Execute(Inflatable.ClassMapper.IMappingSource)
  nameWithType: ICommand.Execute(IMappingSource)
- uid: Inflatable.Sessions.Commands.Interfaces.ICommand.Execute*
  name: Execute
  href: api/Inflatable.Sessions.Commands.Interfaces.ICommand.html#Inflatable_Sessions_Commands_Interfaces_ICommand_Execute_
  commentId: Overload:Inflatable.Sessions.Commands.Interfaces.ICommand.Execute
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.Interfaces.ICommand.Execute
  nameWithType: ICommand.Execute
- uid: Inflatable.Sessions.Commands.Interfaces.ICommand.ExecuteAsync(Inflatable.ClassMapper.IMappingSource)
  name: ExecuteAsync(IMappingSource)
  href: api/Inflatable.Sessions.Commands.Interfaces.ICommand.html#Inflatable_Sessions_Commands_Interfaces_ICommand_ExecuteAsync_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.Sessions.Commands.Interfaces.ICommand.ExecuteAsync(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.Sessions.Commands.Interfaces.ICommand.ExecuteAsync(Inflatable.ClassMapper.IMappingSource)
  nameWithType: ICommand.ExecuteAsync(IMappingSource)
- uid: Inflatable.Sessions.Commands.Interfaces.ICommand.ExecuteAsync*
  name: ExecuteAsync
  href: api/Inflatable.Sessions.Commands.Interfaces.ICommand.html#Inflatable_Sessions_Commands_Interfaces_ICommand_ExecuteAsync_
  commentId: Overload:Inflatable.Sessions.Commands.Interfaces.ICommand.ExecuteAsync
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.Interfaces.ICommand.ExecuteAsync
  nameWithType: ICommand.ExecuteAsync
- uid: Inflatable.Sessions.Commands.Interfaces.ICommand.Merge(Inflatable.Sessions.Commands.Interfaces.ICommand)
  name: Merge(ICommand)
  href: api/Inflatable.Sessions.Commands.Interfaces.ICommand.html#Inflatable_Sessions_Commands_Interfaces_ICommand_Merge_Inflatable_Sessions_Commands_Interfaces_ICommand_
  commentId: M:Inflatable.Sessions.Commands.Interfaces.ICommand.Merge(Inflatable.Sessions.Commands.Interfaces.ICommand)
  fullName: Inflatable.Sessions.Commands.Interfaces.ICommand.Merge(Inflatable.Sessions.Commands.Interfaces.ICommand)
  nameWithType: ICommand.Merge(ICommand)
- uid: Inflatable.Sessions.Commands.Interfaces.ICommand.Merge*
  name: Merge
  href: api/Inflatable.Sessions.Commands.Interfaces.ICommand.html#Inflatable_Sessions_Commands_Interfaces_ICommand_Merge_
  commentId: Overload:Inflatable.Sessions.Commands.Interfaces.ICommand.Merge
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.Interfaces.ICommand.Merge
  nameWithType: ICommand.Merge
- uid: Inflatable.Sessions.Commands.SaveCommand
  name: SaveCommand
  href: api/Inflatable.Sessions.Commands.SaveCommand.html
  commentId: T:Inflatable.Sessions.Commands.SaveCommand
  fullName: Inflatable.Sessions.Commands.SaveCommand
  nameWithType: SaveCommand
- uid: Inflatable.Sessions.Commands.SaveCommand.#ctor(Inflatable.ClassMapper.MappingManager,Inflatable.QueryProvider.QueryProviderManager,DragonHoard.Core.Interfaces.ICache,System.Object[])
  name: SaveCommand(MappingManager, QueryProviderManager, ICache, object[])
  href: api/Inflatable.Sessions.Commands.SaveCommand.html#Inflatable_Sessions_Commands_SaveCommand__ctor_Inflatable_ClassMapper_MappingManager_Inflatable_QueryProvider_QueryProviderManager_DragonHoard_Core_Interfaces_ICache_System_Object___
  commentId: M:Inflatable.Sessions.Commands.SaveCommand.#ctor(Inflatable.ClassMapper.MappingManager,Inflatable.QueryProvider.QueryProviderManager,DragonHoard.Core.Interfaces.ICache,System.Object[])
  name.vb: New(MappingManager, QueryProviderManager, ICache, Object())
  fullName: Inflatable.Sessions.Commands.SaveCommand.SaveCommand(Inflatable.ClassMapper.MappingManager, Inflatable.QueryProvider.QueryProviderManager, DragonHoard.Core.Interfaces.ICache, object[])
  fullName.vb: Inflatable.Sessions.Commands.SaveCommand.New(Inflatable.ClassMapper.MappingManager, Inflatable.QueryProvider.QueryProviderManager, DragonHoard.Core.Interfaces.ICache, Object())
  nameWithType: SaveCommand.SaveCommand(MappingManager, QueryProviderManager, ICache, object[])
  nameWithType.vb: SaveCommand.New(MappingManager, QueryProviderManager, ICache, Object())
- uid: Inflatable.Sessions.Commands.SaveCommand.#ctor*
  name: SaveCommand
  href: api/Inflatable.Sessions.Commands.SaveCommand.html#Inflatable_Sessions_Commands_SaveCommand__ctor_
  commentId: Overload:Inflatable.Sessions.Commands.SaveCommand.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.Sessions.Commands.SaveCommand.SaveCommand
  fullName.vb: Inflatable.Sessions.Commands.SaveCommand.New
  nameWithType: SaveCommand.SaveCommand
  nameWithType.vb: SaveCommand.New
- uid: Inflatable.Sessions.Commands.SaveCommand.CommandType
  name: CommandType
  href: api/Inflatable.Sessions.Commands.SaveCommand.html#Inflatable_Sessions_Commands_SaveCommand_CommandType
  commentId: P:Inflatable.Sessions.Commands.SaveCommand.CommandType
  fullName: Inflatable.Sessions.Commands.SaveCommand.CommandType
  nameWithType: SaveCommand.CommandType
- uid: Inflatable.Sessions.Commands.SaveCommand.CommandType*
  name: CommandType
  href: api/Inflatable.Sessions.Commands.SaveCommand.html#Inflatable_Sessions_Commands_SaveCommand_CommandType_
  commentId: Overload:Inflatable.Sessions.Commands.SaveCommand.CommandType
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.SaveCommand.CommandType
  nameWithType: SaveCommand.CommandType
- uid: Inflatable.Sessions.Commands.SaveCommand.Execute(Inflatable.ClassMapper.IMappingSource)
  name: Execute(IMappingSource)
  href: api/Inflatable.Sessions.Commands.SaveCommand.html#Inflatable_Sessions_Commands_SaveCommand_Execute_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.Sessions.Commands.SaveCommand.Execute(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.Sessions.Commands.SaveCommand.Execute(Inflatable.ClassMapper.IMappingSource)
  nameWithType: SaveCommand.Execute(IMappingSource)
- uid: Inflatable.Sessions.Commands.SaveCommand.Execute*
  name: Execute
  href: api/Inflatable.Sessions.Commands.SaveCommand.html#Inflatable_Sessions_Commands_SaveCommand_Execute_
  commentId: Overload:Inflatable.Sessions.Commands.SaveCommand.Execute
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.SaveCommand.Execute
  nameWithType: SaveCommand.Execute
- uid: Inflatable.Sessions.Commands.SaveCommand.ExecuteAsync(Inflatable.ClassMapper.IMappingSource)
  name: ExecuteAsync(IMappingSource)
  href: api/Inflatable.Sessions.Commands.SaveCommand.html#Inflatable_Sessions_Commands_SaveCommand_ExecuteAsync_Inflatable_ClassMapper_IMappingSource_
  commentId: M:Inflatable.Sessions.Commands.SaveCommand.ExecuteAsync(Inflatable.ClassMapper.IMappingSource)
  fullName: Inflatable.Sessions.Commands.SaveCommand.ExecuteAsync(Inflatable.ClassMapper.IMappingSource)
  nameWithType: SaveCommand.ExecuteAsync(IMappingSource)
- uid: Inflatable.Sessions.Commands.SaveCommand.ExecuteAsync*
  name: ExecuteAsync
  href: api/Inflatable.Sessions.Commands.SaveCommand.html#Inflatable_Sessions_Commands_SaveCommand_ExecuteAsync_
  commentId: Overload:Inflatable.Sessions.Commands.SaveCommand.ExecuteAsync
  isSpec: "True"
  fullName: Inflatable.Sessions.Commands.SaveCommand.ExecuteAsync
  nameWithType: SaveCommand.ExecuteAsync
- uid: Inflatable.Sessions.ISession
  name: ISession
  href: api/Inflatable.Sessions.ISession.html
  commentId: T:Inflatable.Sessions.ISession
  fullName: Inflatable.Sessions.ISession
  nameWithType: ISession
- uid: Inflatable.Sessions.ISession.ClearCache
  name: ClearCache()
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_ClearCache
  commentId: M:Inflatable.Sessions.ISession.ClearCache
  fullName: Inflatable.Sessions.ISession.ClearCache()
  nameWithType: ISession.ClearCache()
- uid: Inflatable.Sessions.ISession.ClearCache*
  name: ClearCache
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_ClearCache_
  commentId: Overload:Inflatable.Sessions.ISession.ClearCache
  isSpec: "True"
  fullName: Inflatable.Sessions.ISession.ClearCache
  nameWithType: ISession.ClearCache
- uid: Inflatable.Sessions.ISession.Delete*
  name: Delete
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_Delete_
  commentId: Overload:Inflatable.Sessions.ISession.Delete
  isSpec: "True"
  fullName: Inflatable.Sessions.ISession.Delete
  nameWithType: ISession.Delete
- uid: Inflatable.Sessions.ISession.Delete``1(``0[])
  name: Delete<TObject>(params TObject[])
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_Delete__1___0___
  commentId: M:Inflatable.Sessions.ISession.Delete``1(``0[])
  name.vb: Delete(Of TObject)(ParamArray TObject())
  fullName: Inflatable.Sessions.ISession.Delete<TObject>(params TObject[])
  fullName.vb: Inflatable.Sessions.ISession.Delete(Of TObject)(ParamArray TObject())
  nameWithType: ISession.Delete<TObject>(params TObject[])
  nameWithType.vb: ISession.Delete(Of TObject)(ParamArray TObject())
- uid: Inflatable.Sessions.ISession.Execute
  name: Execute()
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_Execute
  commentId: M:Inflatable.Sessions.ISession.Execute
  fullName: Inflatable.Sessions.ISession.Execute()
  nameWithType: ISession.Execute()
- uid: Inflatable.Sessions.ISession.Execute*
  name: Execute
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_Execute_
  commentId: Overload:Inflatable.Sessions.ISession.Execute
  isSpec: "True"
  fullName: Inflatable.Sessions.ISession.Execute
  nameWithType: ISession.Execute
- uid: Inflatable.Sessions.ISession.ExecuteAsync
  name: ExecuteAsync()
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_ExecuteAsync
  commentId: M:Inflatable.Sessions.ISession.ExecuteAsync
  fullName: Inflatable.Sessions.ISession.ExecuteAsync()
  nameWithType: ISession.ExecuteAsync()
- uid: Inflatable.Sessions.ISession.ExecuteAsync*
  name: ExecuteAsync
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_ExecuteAsync_
  commentId: Overload:Inflatable.Sessions.ISession.ExecuteAsync
  isSpec: "True"
  fullName: Inflatable.Sessions.ISession.ExecuteAsync
  nameWithType: ISession.ExecuteAsync
- uid: Inflatable.Sessions.ISession.ExecuteAsync``1(System.Collections.Generic.IDictionary{Inflatable.ClassMapper.IMappingSource,Inflatable.LinqExpression.QueryData{``0}})
  name: ExecuteAsync<TObject>(IDictionary<IMappingSource, QueryData<TObject>>)
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_ExecuteAsync__1_System_Collections_Generic_IDictionary_Inflatable_ClassMapper_IMappingSource_Inflatable_LinqExpression_QueryData___0___
  commentId: M:Inflatable.Sessions.ISession.ExecuteAsync``1(System.Collections.Generic.IDictionary{Inflatable.ClassMapper.IMappingSource,Inflatable.LinqExpression.QueryData{``0}})
  name.vb: ExecuteAsync(Of TObject)(IDictionary(Of IMappingSource, QueryData(Of TObject)))
  fullName: Inflatable.Sessions.ISession.ExecuteAsync<TObject>(System.Collections.Generic.IDictionary<Inflatable.ClassMapper.IMappingSource, Inflatable.LinqExpression.QueryData<TObject>>)
  fullName.vb: Inflatable.Sessions.ISession.ExecuteAsync(Of TObject)(System.Collections.Generic.IDictionary(Of Inflatable.ClassMapper.IMappingSource, Inflatable.LinqExpression.QueryData(Of TObject)))
  nameWithType: ISession.ExecuteAsync<TObject>(IDictionary<IMappingSource, QueryData<TObject>>)
  nameWithType.vb: ISession.ExecuteAsync(Of TObject)(IDictionary(Of IMappingSource, QueryData(Of TObject)))
- uid: Inflatable.Sessions.ISession.ExecuteAsync``1(System.String,System.Data.CommandType,System.String,System.Object[])
  name: ExecuteAsync<TObject>(string, CommandType, string, params object[])
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_ExecuteAsync__1_System_String_System_Data_CommandType_System_String_System_Object___
  commentId: M:Inflatable.Sessions.ISession.ExecuteAsync``1(System.String,System.Data.CommandType,System.String,System.Object[])
  name.vb: ExecuteAsync(Of TObject)(String, CommandType, String, ParamArray Object())
  fullName: Inflatable.Sessions.ISession.ExecuteAsync<TObject>(string, System.Data.CommandType, string, params object[])
  fullName.vb: Inflatable.Sessions.ISession.ExecuteAsync(Of TObject)(String, System.Data.CommandType, String, ParamArray Object())
  nameWithType: ISession.ExecuteAsync<TObject>(string, CommandType, string, params object[])
  nameWithType.vb: ISession.ExecuteAsync(Of TObject)(String, CommandType, String, ParamArray Object())
- uid: Inflatable.Sessions.ISession.ExecuteCountAsync*
  name: ExecuteCountAsync
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_ExecuteCountAsync_
  commentId: Overload:Inflatable.Sessions.ISession.ExecuteCountAsync
  isSpec: "True"
  fullName: Inflatable.Sessions.ISession.ExecuteCountAsync
  nameWithType: ISession.ExecuteCountAsync
- uid: Inflatable.Sessions.ISession.ExecuteCountAsync``1(System.Collections.Generic.IDictionary{Inflatable.ClassMapper.IMappingSource,Inflatable.LinqExpression.QueryData{``0}})
  name: ExecuteCountAsync<TObject>(IDictionary<IMappingSource, QueryData<TObject>>)
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_ExecuteCountAsync__1_System_Collections_Generic_IDictionary_Inflatable_ClassMapper_IMappingSource_Inflatable_LinqExpression_QueryData___0___
  commentId: M:Inflatable.Sessions.ISession.ExecuteCountAsync``1(System.Collections.Generic.IDictionary{Inflatable.ClassMapper.IMappingSource,Inflatable.LinqExpression.QueryData{``0}})
  name.vb: ExecuteCountAsync(Of TObject)(IDictionary(Of IMappingSource, QueryData(Of TObject)))
  fullName: Inflatable.Sessions.ISession.ExecuteCountAsync<TObject>(System.Collections.Generic.IDictionary<Inflatable.ClassMapper.IMappingSource, Inflatable.LinqExpression.QueryData<TObject>>)
  fullName.vb: Inflatable.Sessions.ISession.ExecuteCountAsync(Of TObject)(System.Collections.Generic.IDictionary(Of Inflatable.ClassMapper.IMappingSource, Inflatable.LinqExpression.QueryData(Of TObject)))
  nameWithType: ISession.ExecuteCountAsync<TObject>(IDictionary<IMappingSource, QueryData<TObject>>)
  nameWithType.vb: ISession.ExecuteCountAsync(Of TObject)(IDictionary(Of IMappingSource, QueryData(Of TObject)))
- uid: Inflatable.Sessions.ISession.ExecuteDynamicAsync(System.String,System.Data.CommandType,System.String,System.Object[])
  name: ExecuteDynamicAsync(string, CommandType, string, params object[])
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_ExecuteDynamicAsync_System_String_System_Data_CommandType_System_String_System_Object___
  commentId: M:Inflatable.Sessions.ISession.ExecuteDynamicAsync(System.String,System.Data.CommandType,System.String,System.Object[])
  name.vb: ExecuteDynamicAsync(String, CommandType, String, ParamArray Object())
  fullName: Inflatable.Sessions.ISession.ExecuteDynamicAsync(string, System.Data.CommandType, string, params object[])
  fullName.vb: Inflatable.Sessions.ISession.ExecuteDynamicAsync(String, System.Data.CommandType, String, ParamArray Object())
  nameWithType: ISession.ExecuteDynamicAsync(string, CommandType, string, params object[])
  nameWithType.vb: ISession.ExecuteDynamicAsync(String, CommandType, String, ParamArray Object())
- uid: Inflatable.Sessions.ISession.ExecuteDynamicAsync*
  name: ExecuteDynamicAsync
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_ExecuteDynamicAsync_
  commentId: Overload:Inflatable.Sessions.ISession.ExecuteDynamicAsync
  isSpec: "True"
  fullName: Inflatable.Sessions.ISession.ExecuteDynamicAsync
  nameWithType: ISession.ExecuteDynamicAsync
- uid: Inflatable.Sessions.ISession.ExecuteScalarAsync*
  name: ExecuteScalarAsync
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_ExecuteScalarAsync_
  commentId: Overload:Inflatable.Sessions.ISession.ExecuteScalarAsync
  isSpec: "True"
  fullName: Inflatable.Sessions.ISession.ExecuteScalarAsync
  nameWithType: ISession.ExecuteScalarAsync
- uid: Inflatable.Sessions.ISession.ExecuteScalarAsync``1(System.String,System.Data.CommandType,System.String,System.Object[])
  name: ExecuteScalarAsync<TObject>(string, CommandType, string, params object[])
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_ExecuteScalarAsync__1_System_String_System_Data_CommandType_System_String_System_Object___
  commentId: M:Inflatable.Sessions.ISession.ExecuteScalarAsync``1(System.String,System.Data.CommandType,System.String,System.Object[])
  name.vb: ExecuteScalarAsync(Of TObject)(String, CommandType, String, ParamArray Object())
  fullName: Inflatable.Sessions.ISession.ExecuteScalarAsync<TObject>(string, System.Data.CommandType, string, params object[])
  fullName.vb: Inflatable.Sessions.ISession.ExecuteScalarAsync(Of TObject)(String, System.Data.CommandType, String, ParamArray Object())
  nameWithType: ISession.ExecuteScalarAsync<TObject>(string, CommandType, string, params object[])
  nameWithType.vb: ISession.ExecuteScalarAsync(Of TObject)(String, CommandType, String, ParamArray Object())
- uid: Inflatable.Sessions.ISession.LoadProperties*
  name: LoadProperties
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_LoadProperties_
  commentId: Overload:Inflatable.Sessions.ISession.LoadProperties
  isSpec: "True"
  fullName: Inflatable.Sessions.ISession.LoadProperties
  nameWithType: ISession.LoadProperties
- uid: Inflatable.Sessions.ISession.LoadProperties``2(``0,System.String)
  name: LoadProperties<TObject, TData>(TObject, string)
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_LoadProperties__2___0_System_String_
  commentId: M:Inflatable.Sessions.ISession.LoadProperties``2(``0,System.String)
  name.vb: LoadProperties(Of TObject, TData)(TObject, String)
  fullName: Inflatable.Sessions.ISession.LoadProperties<TObject, TData>(TObject, string)
  fullName.vb: Inflatable.Sessions.ISession.LoadProperties(Of TObject, TData)(TObject, String)
  nameWithType: ISession.LoadProperties<TObject, TData>(TObject, string)
  nameWithType.vb: ISession.LoadProperties(Of TObject, TData)(TObject, String)
- uid: Inflatable.Sessions.ISession.LoadPropertiesAsync*
  name: LoadPropertiesAsync
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_LoadPropertiesAsync_
  commentId: Overload:Inflatable.Sessions.ISession.LoadPropertiesAsync
  isSpec: "True"
  fullName: Inflatable.Sessions.ISession.LoadPropertiesAsync
  nameWithType: ISession.LoadPropertiesAsync
- uid: Inflatable.Sessions.ISession.LoadPropertiesAsync``2(``0,System.String)
  name: LoadPropertiesAsync<TObject, TData>(TObject, string)
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_LoadPropertiesAsync__2___0_System_String_
  commentId: M:Inflatable.Sessions.ISession.LoadPropertiesAsync``2(``0,System.String)
  name.vb: LoadPropertiesAsync(Of TObject, TData)(TObject, String)
  fullName: Inflatable.Sessions.ISession.LoadPropertiesAsync<TObject, TData>(TObject, string)
  fullName.vb: Inflatable.Sessions.ISession.LoadPropertiesAsync(Of TObject, TData)(TObject, String)
  nameWithType: ISession.LoadPropertiesAsync<TObject, TData>(TObject, string)
  nameWithType.vb: ISession.LoadPropertiesAsync(Of TObject, TData)(TObject, String)
- uid: Inflatable.Sessions.ISession.LoadProperty*
  name: LoadProperty
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_LoadProperty_
  commentId: Overload:Inflatable.Sessions.ISession.LoadProperty
  isSpec: "True"
  fullName: Inflatable.Sessions.ISession.LoadProperty
  nameWithType: ISession.LoadProperty
- uid: Inflatable.Sessions.ISession.LoadProperty``2(``0,System.String)
  name: LoadProperty<TObject, TData>(TObject, string)
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_LoadProperty__2___0_System_String_
  commentId: M:Inflatable.Sessions.ISession.LoadProperty``2(``0,System.String)
  name.vb: LoadProperty(Of TObject, TData)(TObject, String)
  fullName: Inflatable.Sessions.ISession.LoadProperty<TObject, TData>(TObject, string)
  fullName.vb: Inflatable.Sessions.ISession.LoadProperty(Of TObject, TData)(TObject, String)
  nameWithType: ISession.LoadProperty<TObject, TData>(TObject, string)
  nameWithType.vb: ISession.LoadProperty(Of TObject, TData)(TObject, String)
- uid: Inflatable.Sessions.ISession.LoadPropertyAsync*
  name: LoadPropertyAsync
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_LoadPropertyAsync_
  commentId: Overload:Inflatable.Sessions.ISession.LoadPropertyAsync
  isSpec: "True"
  fullName: Inflatable.Sessions.ISession.LoadPropertyAsync
  nameWithType: ISession.LoadPropertyAsync
- uid: Inflatable.Sessions.ISession.LoadPropertyAsync``2(``0,System.String)
  name: LoadPropertyAsync<TObject, TData>(TObject, string)
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_LoadPropertyAsync__2___0_System_String_
  commentId: M:Inflatable.Sessions.ISession.LoadPropertyAsync``2(``0,System.String)
  name.vb: LoadPropertyAsync(Of TObject, TData)(TObject, String)
  fullName: Inflatable.Sessions.ISession.LoadPropertyAsync<TObject, TData>(TObject, string)
  fullName.vb: Inflatable.Sessions.ISession.LoadPropertyAsync(Of TObject, TData)(TObject, String)
  nameWithType: ISession.LoadPropertyAsync<TObject, TData>(TObject, string)
  nameWithType.vb: ISession.LoadPropertyAsync(Of TObject, TData)(TObject, String)
- uid: Inflatable.Sessions.ISession.Save*
  name: Save
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_Save_
  commentId: Overload:Inflatable.Sessions.ISession.Save
  isSpec: "True"
  fullName: Inflatable.Sessions.ISession.Save
  nameWithType: ISession.Save
- uid: Inflatable.Sessions.ISession.Save``1(``0[])
  name: Save<TObject>(params TObject[])
  href: api/Inflatable.Sessions.ISession.html#Inflatable_Sessions_ISession_Save__1___0___
  commentId: M:Inflatable.Sessions.ISession.Save``1(``0[])
  name.vb: Save(Of TObject)(ParamArray TObject())
  fullName: Inflatable.Sessions.ISession.Save<TObject>(params TObject[])
  fullName.vb: Inflatable.Sessions.ISession.Save(Of TObject)(ParamArray TObject())
  nameWithType: ISession.Save<TObject>(params TObject[])
  nameWithType.vb: ISession.Save(Of TObject)(ParamArray TObject())
- uid: Inflatable.Sessions.Session
  name: Session
  href: api/Inflatable.Sessions.Session.html
  commentId: T:Inflatable.Sessions.Session
  fullName: Inflatable.Sessions.Session
  nameWithType: Session
- uid: Inflatable.Sessions.Session.#ctor(Aspectus.Aspectus,ObjectCartographer.DataMapper,Inflatable.ClassMapper.MappingManager,Inflatable.Schema.SchemaManager,Inflatable.QueryProvider.QueryProviderManager,DragonHoard.Core.Cache,System.Collections.Generic.IEnumerable{Microsoft.Extensions.Options.IOptions{Inflatable.Registration.InflatableOptions}},System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Inflatable.Sessions.Session})
  name: Session(Aspectus, DataMapper, MappingManager, SchemaManager, QueryProviderManager, Cache, IEnumerable<IOptions<InflatableOptions>>, IServiceProvider, ILogger<Session>?)
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session__ctor_Aspectus_Aspectus_ObjectCartographer_DataMapper_Inflatable_ClassMapper_MappingManager_Inflatable_Schema_SchemaManager_Inflatable_QueryProvider_QueryProviderManager_DragonHoard_Core_Cache_System_Collections_Generic_IEnumerable_Microsoft_Extensions_Options_IOptions_Inflatable_Registration_InflatableOptions___System_IServiceProvider_Microsoft_Extensions_Logging_ILogger_Inflatable_Sessions_Session__
  commentId: M:Inflatable.Sessions.Session.#ctor(Aspectus.Aspectus,ObjectCartographer.DataMapper,Inflatable.ClassMapper.MappingManager,Inflatable.Schema.SchemaManager,Inflatable.QueryProvider.QueryProviderManager,DragonHoard.Core.Cache,System.Collections.Generic.IEnumerable{Microsoft.Extensions.Options.IOptions{Inflatable.Registration.InflatableOptions}},System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Inflatable.Sessions.Session})
  name.vb: New(Aspectus, DataMapper, MappingManager, SchemaManager, QueryProviderManager, Cache, IEnumerable(Of IOptions(Of InflatableOptions)), IServiceProvider, ILogger(Of Session))
  fullName: Inflatable.Sessions.Session.Session(Aspectus.Aspectus, ObjectCartographer.DataMapper, Inflatable.ClassMapper.MappingManager, Inflatable.Schema.SchemaManager, Inflatable.QueryProvider.QueryProviderManager, DragonHoard.Core.Cache, System.Collections.Generic.IEnumerable<Microsoft.Extensions.Options.IOptions<Inflatable.Registration.InflatableOptions>>, System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<Inflatable.Sessions.Session>?)
  fullName.vb: Inflatable.Sessions.Session.New(Aspectus.Aspectus, ObjectCartographer.DataMapper, Inflatable.ClassMapper.MappingManager, Inflatable.Schema.SchemaManager, Inflatable.QueryProvider.QueryProviderManager, DragonHoard.Core.Cache, System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.Options.IOptions(Of Inflatable.Registration.InflatableOptions)), System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of Inflatable.Sessions.Session))
  nameWithType: Session.Session(Aspectus, DataMapper, MappingManager, SchemaManager, QueryProviderManager, Cache, IEnumerable<IOptions<InflatableOptions>>, IServiceProvider, ILogger<Session>?)
  nameWithType.vb: Session.New(Aspectus, DataMapper, MappingManager, SchemaManager, QueryProviderManager, Cache, IEnumerable(Of IOptions(Of InflatableOptions)), IServiceProvider, ILogger(Of Session))
- uid: Inflatable.Sessions.Session.#ctor*
  name: Session
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session__ctor_
  commentId: Overload:Inflatable.Sessions.Session.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.Sessions.Session.Session
  fullName.vb: Inflatable.Sessions.Session.New
  nameWithType: Session.Session
  nameWithType.vb: Session.New
- uid: Inflatable.Sessions.Session.ClearCache
  name: ClearCache()
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_ClearCache
  commentId: M:Inflatable.Sessions.Session.ClearCache
  fullName: Inflatable.Sessions.Session.ClearCache()
  nameWithType: Session.ClearCache()
- uid: Inflatable.Sessions.Session.ClearCache*
  name: ClearCache
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_ClearCache_
  commentId: Overload:Inflatable.Sessions.Session.ClearCache
  isSpec: "True"
  fullName: Inflatable.Sessions.Session.ClearCache
  nameWithType: Session.ClearCache
- uid: Inflatable.Sessions.Session.Delete*
  name: Delete
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_Delete_
  commentId: Overload:Inflatable.Sessions.Session.Delete
  isSpec: "True"
  fullName: Inflatable.Sessions.Session.Delete
  nameWithType: Session.Delete
- uid: Inflatable.Sessions.Session.Delete``1(``0[])
  name: Delete<TObject>(params TObject[])
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_Delete__1___0___
  commentId: M:Inflatable.Sessions.Session.Delete``1(``0[])
  name.vb: Delete(Of TObject)(ParamArray TObject())
  fullName: Inflatable.Sessions.Session.Delete<TObject>(params TObject[])
  fullName.vb: Inflatable.Sessions.Session.Delete(Of TObject)(ParamArray TObject())
  nameWithType: Session.Delete<TObject>(params TObject[])
  nameWithType.vb: Session.Delete(Of TObject)(ParamArray TObject())
- uid: Inflatable.Sessions.Session.Execute
  name: Execute()
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_Execute
  commentId: M:Inflatable.Sessions.Session.Execute
  fullName: Inflatable.Sessions.Session.Execute()
  nameWithType: Session.Execute()
- uid: Inflatable.Sessions.Session.Execute*
  name: Execute
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_Execute_
  commentId: Overload:Inflatable.Sessions.Session.Execute
  isSpec: "True"
  fullName: Inflatable.Sessions.Session.Execute
  nameWithType: Session.Execute
- uid: Inflatable.Sessions.Session.ExecuteAsync
  name: ExecuteAsync()
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_ExecuteAsync
  commentId: M:Inflatable.Sessions.Session.ExecuteAsync
  fullName: Inflatable.Sessions.Session.ExecuteAsync()
  nameWithType: Session.ExecuteAsync()
- uid: Inflatable.Sessions.Session.ExecuteAsync*
  name: ExecuteAsync
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_ExecuteAsync_
  commentId: Overload:Inflatable.Sessions.Session.ExecuteAsync
  isSpec: "True"
  fullName: Inflatable.Sessions.Session.ExecuteAsync
  nameWithType: Session.ExecuteAsync
- uid: Inflatable.Sessions.Session.ExecuteAsync``1(System.Collections.Generic.IDictionary{Inflatable.ClassMapper.IMappingSource,Inflatable.LinqExpression.QueryData{``0}})
  name: ExecuteAsync<TObject>(IDictionary<IMappingSource, QueryData<TObject>>)
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_ExecuteAsync__1_System_Collections_Generic_IDictionary_Inflatable_ClassMapper_IMappingSource_Inflatable_LinqExpression_QueryData___0___
  commentId: M:Inflatable.Sessions.Session.ExecuteAsync``1(System.Collections.Generic.IDictionary{Inflatable.ClassMapper.IMappingSource,Inflatable.LinqExpression.QueryData{``0}})
  name.vb: ExecuteAsync(Of TObject)(IDictionary(Of IMappingSource, QueryData(Of TObject)))
  fullName: Inflatable.Sessions.Session.ExecuteAsync<TObject>(System.Collections.Generic.IDictionary<Inflatable.ClassMapper.IMappingSource, Inflatable.LinqExpression.QueryData<TObject>>)
  fullName.vb: Inflatable.Sessions.Session.ExecuteAsync(Of TObject)(System.Collections.Generic.IDictionary(Of Inflatable.ClassMapper.IMappingSource, Inflatable.LinqExpression.QueryData(Of TObject)))
  nameWithType: Session.ExecuteAsync<TObject>(IDictionary<IMappingSource, QueryData<TObject>>)
  nameWithType.vb: Session.ExecuteAsync(Of TObject)(IDictionary(Of IMappingSource, QueryData(Of TObject)))
- uid: Inflatable.Sessions.Session.ExecuteAsync``1(System.String,System.Data.CommandType,System.String,System.Object[])
  name: ExecuteAsync<TObject>(string, CommandType, string, params object[])
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_ExecuteAsync__1_System_String_System_Data_CommandType_System_String_System_Object___
  commentId: M:Inflatable.Sessions.Session.ExecuteAsync``1(System.String,System.Data.CommandType,System.String,System.Object[])
  name.vb: ExecuteAsync(Of TObject)(String, CommandType, String, ParamArray Object())
  fullName: Inflatable.Sessions.Session.ExecuteAsync<TObject>(string, System.Data.CommandType, string, params object[])
  fullName.vb: Inflatable.Sessions.Session.ExecuteAsync(Of TObject)(String, System.Data.CommandType, String, ParamArray Object())
  nameWithType: Session.ExecuteAsync<TObject>(string, CommandType, string, params object[])
  nameWithType.vb: Session.ExecuteAsync(Of TObject)(String, CommandType, String, ParamArray Object())
- uid: Inflatable.Sessions.Session.ExecuteCountAsync*
  name: ExecuteCountAsync
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_ExecuteCountAsync_
  commentId: Overload:Inflatable.Sessions.Session.ExecuteCountAsync
  isSpec: "True"
  fullName: Inflatable.Sessions.Session.ExecuteCountAsync
  nameWithType: Session.ExecuteCountAsync
- uid: Inflatable.Sessions.Session.ExecuteCountAsync``1(System.Collections.Generic.IDictionary{Inflatable.ClassMapper.IMappingSource,Inflatable.LinqExpression.QueryData{``0}})
  name: ExecuteCountAsync<TObject>(IDictionary<IMappingSource, QueryData<TObject>>)
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_ExecuteCountAsync__1_System_Collections_Generic_IDictionary_Inflatable_ClassMapper_IMappingSource_Inflatable_LinqExpression_QueryData___0___
  commentId: M:Inflatable.Sessions.Session.ExecuteCountAsync``1(System.Collections.Generic.IDictionary{Inflatable.ClassMapper.IMappingSource,Inflatable.LinqExpression.QueryData{``0}})
  name.vb: ExecuteCountAsync(Of TObject)(IDictionary(Of IMappingSource, QueryData(Of TObject)))
  fullName: Inflatable.Sessions.Session.ExecuteCountAsync<TObject>(System.Collections.Generic.IDictionary<Inflatable.ClassMapper.IMappingSource, Inflatable.LinqExpression.QueryData<TObject>>)
  fullName.vb: Inflatable.Sessions.Session.ExecuteCountAsync(Of TObject)(System.Collections.Generic.IDictionary(Of Inflatable.ClassMapper.IMappingSource, Inflatable.LinqExpression.QueryData(Of TObject)))
  nameWithType: Session.ExecuteCountAsync<TObject>(IDictionary<IMappingSource, QueryData<TObject>>)
  nameWithType.vb: Session.ExecuteCountAsync(Of TObject)(IDictionary(Of IMappingSource, QueryData(Of TObject)))
- uid: Inflatable.Sessions.Session.ExecuteDynamicAsync(System.String,System.Data.CommandType,System.String,System.Object[])
  name: ExecuteDynamicAsync(string, CommandType, string, params object[])
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_ExecuteDynamicAsync_System_String_System_Data_CommandType_System_String_System_Object___
  commentId: M:Inflatable.Sessions.Session.ExecuteDynamicAsync(System.String,System.Data.CommandType,System.String,System.Object[])
  name.vb: ExecuteDynamicAsync(String, CommandType, String, ParamArray Object())
  fullName: Inflatable.Sessions.Session.ExecuteDynamicAsync(string, System.Data.CommandType, string, params object[])
  fullName.vb: Inflatable.Sessions.Session.ExecuteDynamicAsync(String, System.Data.CommandType, String, ParamArray Object())
  nameWithType: Session.ExecuteDynamicAsync(string, CommandType, string, params object[])
  nameWithType.vb: Session.ExecuteDynamicAsync(String, CommandType, String, ParamArray Object())
- uid: Inflatable.Sessions.Session.ExecuteDynamicAsync*
  name: ExecuteDynamicAsync
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_ExecuteDynamicAsync_
  commentId: Overload:Inflatable.Sessions.Session.ExecuteDynamicAsync
  isSpec: "True"
  fullName: Inflatable.Sessions.Session.ExecuteDynamicAsync
  nameWithType: Session.ExecuteDynamicAsync
- uid: Inflatable.Sessions.Session.ExecuteScalarAsync*
  name: ExecuteScalarAsync
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_ExecuteScalarAsync_
  commentId: Overload:Inflatable.Sessions.Session.ExecuteScalarAsync
  isSpec: "True"
  fullName: Inflatable.Sessions.Session.ExecuteScalarAsync
  nameWithType: Session.ExecuteScalarAsync
- uid: Inflatable.Sessions.Session.ExecuteScalarAsync``1(System.String,System.Data.CommandType,System.String,System.Object[])
  name: ExecuteScalarAsync<TObject>(string, CommandType, string, params object[])
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_ExecuteScalarAsync__1_System_String_System_Data_CommandType_System_String_System_Object___
  commentId: M:Inflatable.Sessions.Session.ExecuteScalarAsync``1(System.String,System.Data.CommandType,System.String,System.Object[])
  name.vb: ExecuteScalarAsync(Of TObject)(String, CommandType, String, ParamArray Object())
  fullName: Inflatable.Sessions.Session.ExecuteScalarAsync<TObject>(string, System.Data.CommandType, string, params object[])
  fullName.vb: Inflatable.Sessions.Session.ExecuteScalarAsync(Of TObject)(String, System.Data.CommandType, String, ParamArray Object())
  nameWithType: Session.ExecuteScalarAsync<TObject>(string, CommandType, string, params object[])
  nameWithType.vb: Session.ExecuteScalarAsync(Of TObject)(String, CommandType, String, ParamArray Object())
- uid: Inflatable.Sessions.Session.LoadProperties*
  name: LoadProperties
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_LoadProperties_
  commentId: Overload:Inflatable.Sessions.Session.LoadProperties
  isSpec: "True"
  fullName: Inflatable.Sessions.Session.LoadProperties
  nameWithType: Session.LoadProperties
- uid: Inflatable.Sessions.Session.LoadProperties``2(``0,System.String)
  name: LoadProperties<TObject, TData>(TObject, string)
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_LoadProperties__2___0_System_String_
  commentId: M:Inflatable.Sessions.Session.LoadProperties``2(``0,System.String)
  name.vb: LoadProperties(Of TObject, TData)(TObject, String)
  fullName: Inflatable.Sessions.Session.LoadProperties<TObject, TData>(TObject, string)
  fullName.vb: Inflatable.Sessions.Session.LoadProperties(Of TObject, TData)(TObject, String)
  nameWithType: Session.LoadProperties<TObject, TData>(TObject, string)
  nameWithType.vb: Session.LoadProperties(Of TObject, TData)(TObject, String)
- uid: Inflatable.Sessions.Session.LoadPropertiesAsync*
  name: LoadPropertiesAsync
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_LoadPropertiesAsync_
  commentId: Overload:Inflatable.Sessions.Session.LoadPropertiesAsync
  isSpec: "True"
  fullName: Inflatable.Sessions.Session.LoadPropertiesAsync
  nameWithType: Session.LoadPropertiesAsync
- uid: Inflatable.Sessions.Session.LoadPropertiesAsync``2(``0,System.String)
  name: LoadPropertiesAsync<TObject, TData>(TObject, string)
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_LoadPropertiesAsync__2___0_System_String_
  commentId: M:Inflatable.Sessions.Session.LoadPropertiesAsync``2(``0,System.String)
  name.vb: LoadPropertiesAsync(Of TObject, TData)(TObject, String)
  fullName: Inflatable.Sessions.Session.LoadPropertiesAsync<TObject, TData>(TObject, string)
  fullName.vb: Inflatable.Sessions.Session.LoadPropertiesAsync(Of TObject, TData)(TObject, String)
  nameWithType: Session.LoadPropertiesAsync<TObject, TData>(TObject, string)
  nameWithType.vb: Session.LoadPropertiesAsync(Of TObject, TData)(TObject, String)
- uid: Inflatable.Sessions.Session.LoadProperty*
  name: LoadProperty
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_LoadProperty_
  commentId: Overload:Inflatable.Sessions.Session.LoadProperty
  isSpec: "True"
  fullName: Inflatable.Sessions.Session.LoadProperty
  nameWithType: Session.LoadProperty
- uid: Inflatable.Sessions.Session.LoadProperty``2(``0,System.String)
  name: LoadProperty<TObject, TData>(TObject, string)
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_LoadProperty__2___0_System_String_
  commentId: M:Inflatable.Sessions.Session.LoadProperty``2(``0,System.String)
  name.vb: LoadProperty(Of TObject, TData)(TObject, String)
  fullName: Inflatable.Sessions.Session.LoadProperty<TObject, TData>(TObject, string)
  fullName.vb: Inflatable.Sessions.Session.LoadProperty(Of TObject, TData)(TObject, String)
  nameWithType: Session.LoadProperty<TObject, TData>(TObject, string)
  nameWithType.vb: Session.LoadProperty(Of TObject, TData)(TObject, String)
- uid: Inflatable.Sessions.Session.LoadPropertyAsync*
  name: LoadPropertyAsync
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_LoadPropertyAsync_
  commentId: Overload:Inflatable.Sessions.Session.LoadPropertyAsync
  isSpec: "True"
  fullName: Inflatable.Sessions.Session.LoadPropertyAsync
  nameWithType: Session.LoadPropertyAsync
- uid: Inflatable.Sessions.Session.LoadPropertyAsync``2(``0,System.String)
  name: LoadPropertyAsync<TObject, TData>(TObject, string)
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_LoadPropertyAsync__2___0_System_String_
  commentId: M:Inflatable.Sessions.Session.LoadPropertyAsync``2(``0,System.String)
  name.vb: LoadPropertyAsync(Of TObject, TData)(TObject, String)
  fullName: Inflatable.Sessions.Session.LoadPropertyAsync<TObject, TData>(TObject, string)
  fullName.vb: Inflatable.Sessions.Session.LoadPropertyAsync(Of TObject, TData)(TObject, String)
  nameWithType: Session.LoadPropertyAsync<TObject, TData>(TObject, string)
  nameWithType.vb: Session.LoadPropertyAsync(Of TObject, TData)(TObject, String)
- uid: Inflatable.Sessions.Session.Save*
  name: Save
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_Save_
  commentId: Overload:Inflatable.Sessions.Session.Save
  isSpec: "True"
  fullName: Inflatable.Sessions.Session.Save
  nameWithType: Session.Save
- uid: Inflatable.Sessions.Session.Save``1(``0[])
  name: Save<TObject>(params TObject[])
  href: api/Inflatable.Sessions.Session.html#Inflatable_Sessions_Session_Save__1___0___
  commentId: M:Inflatable.Sessions.Session.Save``1(``0[])
  name.vb: Save(Of TObject)(ParamArray TObject())
  fullName: Inflatable.Sessions.Session.Save<TObject>(params TObject[])
  fullName.vb: Inflatable.Sessions.Session.Save(Of TObject)(ParamArray TObject())
  nameWithType: Session.Save<TObject>(params TObject[])
  nameWithType.vb: Session.Save(Of TObject)(ParamArray TObject())
- uid: Inflatable.Sessions.SessionQueryInfo
  name: SessionQueryInfo
  href: api/Inflatable.Sessions.SessionQueryInfo.html
  commentId: T:Inflatable.Sessions.SessionQueryInfo
  fullName: Inflatable.Sessions.SessionQueryInfo
  nameWithType: SessionQueryInfo
- uid: Inflatable.Sessions.SessionQueryInfo.#ctor(Inflatable.ClassMapper.IMappingSource,Inflatable.Interfaces.IMapping[],Inflatable.Interfaces.IMapping[])
  name: SessionQueryInfo(IMappingSource, IMapping[], IMapping[])
  href: api/Inflatable.Sessions.SessionQueryInfo.html#Inflatable_Sessions_SessionQueryInfo__ctor_Inflatable_ClassMapper_IMappingSource_Inflatable_Interfaces_IMapping___Inflatable_Interfaces_IMapping___
  commentId: M:Inflatable.Sessions.SessionQueryInfo.#ctor(Inflatable.ClassMapper.IMappingSource,Inflatable.Interfaces.IMapping[],Inflatable.Interfaces.IMapping[])
  name.vb: New(IMappingSource, IMapping(), IMapping())
  fullName: Inflatable.Sessions.SessionQueryInfo.SessionQueryInfo(Inflatable.ClassMapper.IMappingSource, Inflatable.Interfaces.IMapping[], Inflatable.Interfaces.IMapping[])
  fullName.vb: Inflatable.Sessions.SessionQueryInfo.New(Inflatable.ClassMapper.IMappingSource, Inflatable.Interfaces.IMapping(), Inflatable.Interfaces.IMapping())
  nameWithType: SessionQueryInfo.SessionQueryInfo(IMappingSource, IMapping[], IMapping[])
  nameWithType.vb: SessionQueryInfo.New(IMappingSource, IMapping(), IMapping())
- uid: Inflatable.Sessions.SessionQueryInfo.#ctor*
  name: SessionQueryInfo
  href: api/Inflatable.Sessions.SessionQueryInfo.html#Inflatable_Sessions_SessionQueryInfo__ctor_
  commentId: Overload:Inflatable.Sessions.SessionQueryInfo.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.Sessions.SessionQueryInfo.SessionQueryInfo
  fullName.vb: Inflatable.Sessions.SessionQueryInfo.New
  nameWithType: SessionQueryInfo.SessionQueryInfo
  nameWithType.vb: SessionQueryInfo.New
- uid: Inflatable.Sessions.SessionQueryInfo.AssociatedMapping
  name: AssociatedMapping
  href: api/Inflatable.Sessions.SessionQueryInfo.html#Inflatable_Sessions_SessionQueryInfo_AssociatedMapping
  commentId: P:Inflatable.Sessions.SessionQueryInfo.AssociatedMapping
  fullName: Inflatable.Sessions.SessionQueryInfo.AssociatedMapping
  nameWithType: SessionQueryInfo.AssociatedMapping
- uid: Inflatable.Sessions.SessionQueryInfo.AssociatedMapping*
  name: AssociatedMapping
  href: api/Inflatable.Sessions.SessionQueryInfo.html#Inflatable_Sessions_SessionQueryInfo_AssociatedMapping_
  commentId: Overload:Inflatable.Sessions.SessionQueryInfo.AssociatedMapping
  isSpec: "True"
  fullName: Inflatable.Sessions.SessionQueryInfo.AssociatedMapping
  nameWithType: SessionQueryInfo.AssociatedMapping
- uid: Inflatable.Sessions.SessionQueryInfo.ChildMappings
  name: ChildMappings
  href: api/Inflatable.Sessions.SessionQueryInfo.html#Inflatable_Sessions_SessionQueryInfo_ChildMappings
  commentId: P:Inflatable.Sessions.SessionQueryInfo.ChildMappings
  fullName: Inflatable.Sessions.SessionQueryInfo.ChildMappings
  nameWithType: SessionQueryInfo.ChildMappings
- uid: Inflatable.Sessions.SessionQueryInfo.ChildMappings*
  name: ChildMappings
  href: api/Inflatable.Sessions.SessionQueryInfo.html#Inflatable_Sessions_SessionQueryInfo_ChildMappings_
  commentId: Overload:Inflatable.Sessions.SessionQueryInfo.ChildMappings
  isSpec: "True"
  fullName: Inflatable.Sessions.SessionQueryInfo.ChildMappings
  nameWithType: SessionQueryInfo.ChildMappings
- uid: Inflatable.Sessions.SessionQueryInfo.IDColumnInfo
  name: IDColumnInfo
  href: api/Inflatable.Sessions.SessionQueryInfo.html#Inflatable_Sessions_SessionQueryInfo_IDColumnInfo
  commentId: P:Inflatable.Sessions.SessionQueryInfo.IDColumnInfo
  fullName: Inflatable.Sessions.SessionQueryInfo.IDColumnInfo
  nameWithType: SessionQueryInfo.IDColumnInfo
- uid: Inflatable.Sessions.SessionQueryInfo.IDColumnInfo*
  name: IDColumnInfo
  href: api/Inflatable.Sessions.SessionQueryInfo.html#Inflatable_Sessions_SessionQueryInfo_IDColumnInfo_
  commentId: Overload:Inflatable.Sessions.SessionQueryInfo.IDColumnInfo
  isSpec: "True"
  fullName: Inflatable.Sessions.SessionQueryInfo.IDColumnInfo
  nameWithType: SessionQueryInfo.IDColumnInfo
- uid: Inflatable.Sessions.SessionQueryInfo.IDProperties
  name: IDProperties
  href: api/Inflatable.Sessions.SessionQueryInfo.html#Inflatable_Sessions_SessionQueryInfo_IDProperties
  commentId: P:Inflatable.Sessions.SessionQueryInfo.IDProperties
  fullName: Inflatable.Sessions.SessionQueryInfo.IDProperties
  nameWithType: SessionQueryInfo.IDProperties
- uid: Inflatable.Sessions.SessionQueryInfo.IDProperties*
  name: IDProperties
  href: api/Inflatable.Sessions.SessionQueryInfo.html#Inflatable_Sessions_SessionQueryInfo_IDProperties_
  commentId: Overload:Inflatable.Sessions.SessionQueryInfo.IDProperties
  isSpec: "True"
  fullName: Inflatable.Sessions.SessionQueryInfo.IDProperties
  nameWithType: SessionQueryInfo.IDProperties
- uid: Inflatable.Sessions.SessionQueryInfo.ParentMappings
  name: ParentMappings
  href: api/Inflatable.Sessions.SessionQueryInfo.html#Inflatable_Sessions_SessionQueryInfo_ParentMappings
  commentId: P:Inflatable.Sessions.SessionQueryInfo.ParentMappings
  fullName: Inflatable.Sessions.SessionQueryInfo.ParentMappings
  nameWithType: SessionQueryInfo.ParentMappings
- uid: Inflatable.Sessions.SessionQueryInfo.ParentMappings*
  name: ParentMappings
  href: api/Inflatable.Sessions.SessionQueryInfo.html#Inflatable_Sessions_SessionQueryInfo_ParentMappings_
  commentId: Overload:Inflatable.Sessions.SessionQueryInfo.ParentMappings
  isSpec: "True"
  fullName: Inflatable.Sessions.SessionQueryInfo.ParentMappings
  nameWithType: SessionQueryInfo.ParentMappings
- uid: Inflatable.Sessions.SessionQueryInfo.Source
  name: Source
  href: api/Inflatable.Sessions.SessionQueryInfo.html#Inflatable_Sessions_SessionQueryInfo_Source
  commentId: P:Inflatable.Sessions.SessionQueryInfo.Source
  fullName: Inflatable.Sessions.SessionQueryInfo.Source
  nameWithType: SessionQueryInfo.Source
- uid: Inflatable.Sessions.SessionQueryInfo.Source*
  name: Source
  href: api/Inflatable.Sessions.SessionQueryInfo.html#Inflatable_Sessions_SessionQueryInfo_Source_
  commentId: Overload:Inflatable.Sessions.SessionQueryInfo.Source
  isSpec: "True"
  fullName: Inflatable.Sessions.SessionQueryInfo.Source
  nameWithType: SessionQueryInfo.Source
- uid: Inflatable.Utils
  name: Inflatable.Utils
  href: api/Inflatable.Utils.html
  commentId: N:Inflatable.Utils
  fullName: Inflatable.Utils
  nameWithType: Inflatable.Utils
- uid: Inflatable.Utils.ExpressionTypeConverter`2
  name: ExpressionTypeConverter<TData, TReturn>
  href: api/Inflatable.Utils.ExpressionTypeConverter-2.html
  commentId: T:Inflatable.Utils.ExpressionTypeConverter`2
  name.vb: ExpressionTypeConverter(Of TData, TReturn)
  fullName: Inflatable.Utils.ExpressionTypeConverter<TData, TReturn>
  fullName.vb: Inflatable.Utils.ExpressionTypeConverter(Of TData, TReturn)
  nameWithType: ExpressionTypeConverter<TData, TReturn>
  nameWithType.vb: ExpressionTypeConverter(Of TData, TReturn)
- uid: Inflatable.Utils.ExpressionTypeConverter`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})
  name: ExpressionTypeConverter(Expression<Func<TData, TReturn>>)
  href: api/Inflatable.Utils.ExpressionTypeConverter-2.html#Inflatable_Utils_ExpressionTypeConverter_2__ctor_System_Linq_Expressions_Expression_System_Func__0__1___
  commentId: M:Inflatable.Utils.ExpressionTypeConverter`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})
  name.vb: New(Expression(Of Func(Of TData, TReturn)))
  fullName: Inflatable.Utils.ExpressionTypeConverter<TData, TReturn>.ExpressionTypeConverter(System.Linq.Expressions.Expression<System.Func<TData, TReturn>>)
  fullName.vb: Inflatable.Utils.ExpressionTypeConverter(Of TData, TReturn).New(System.Linq.Expressions.Expression(Of System.Func(Of TData, TReturn)))
  nameWithType: ExpressionTypeConverter<TData, TReturn>.ExpressionTypeConverter(Expression<Func<TData, TReturn>>)
  nameWithType.vb: ExpressionTypeConverter(Of TData, TReturn).New(Expression(Of Func(Of TData, TReturn)))
- uid: Inflatable.Utils.ExpressionTypeConverter`2.#ctor*
  name: ExpressionTypeConverter
  href: api/Inflatable.Utils.ExpressionTypeConverter-2.html#Inflatable_Utils_ExpressionTypeConverter_2__ctor_
  commentId: Overload:Inflatable.Utils.ExpressionTypeConverter`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.Utils.ExpressionTypeConverter<TData, TReturn>.ExpressionTypeConverter
  fullName.vb: Inflatable.Utils.ExpressionTypeConverter(Of TData, TReturn).New
  nameWithType: ExpressionTypeConverter<TData, TReturn>.ExpressionTypeConverter
  nameWithType.vb: ExpressionTypeConverter(Of TData, TReturn).New
- uid: Inflatable.Utils.ExpressionTypeConverter`2.Convert*
  name: Convert
  href: api/Inflatable.Utils.ExpressionTypeConverter-2.html#Inflatable_Utils_ExpressionTypeConverter_2_Convert_
  commentId: Overload:Inflatable.Utils.ExpressionTypeConverter`2.Convert
  isSpec: "True"
  fullName: Inflatable.Utils.ExpressionTypeConverter<TData, TReturn>.Convert
  fullName.vb: Inflatable.Utils.ExpressionTypeConverter(Of TData, TReturn).Convert
  nameWithType: ExpressionTypeConverter<TData, TReturn>.Convert
  nameWithType.vb: ExpressionTypeConverter(Of TData, TReturn).Convert
- uid: Inflatable.Utils.ExpressionTypeConverter`2.Convert``1
  name: Convert<TNewType>()
  href: api/Inflatable.Utils.ExpressionTypeConverter-2.html#Inflatable_Utils_ExpressionTypeConverter_2_Convert__1
  commentId: M:Inflatable.Utils.ExpressionTypeConverter`2.Convert``1
  name.vb: Convert(Of TNewType)()
  fullName: Inflatable.Utils.ExpressionTypeConverter<TData, TReturn>.Convert<TNewType>()
  fullName.vb: Inflatable.Utils.ExpressionTypeConverter(Of TData, TReturn).Convert(Of TNewType)()
  nameWithType: ExpressionTypeConverter<TData, TReturn>.Convert<TNewType>()
  nameWithType.vb: ExpressionTypeConverter(Of TData, TReturn).Convert(Of TNewType)()
- uid: Inflatable.Utils.ExpressionTypeConverter`2.Expression
  name: Expression
  href: api/Inflatable.Utils.ExpressionTypeConverter-2.html#Inflatable_Utils_ExpressionTypeConverter_2_Expression
  commentId: P:Inflatable.Utils.ExpressionTypeConverter`2.Expression
  fullName: Inflatable.Utils.ExpressionTypeConverter<TData, TReturn>.Expression
  fullName.vb: Inflatable.Utils.ExpressionTypeConverter(Of TData, TReturn).Expression
  nameWithType: ExpressionTypeConverter<TData, TReturn>.Expression
  nameWithType.vb: ExpressionTypeConverter(Of TData, TReturn).Expression
- uid: Inflatable.Utils.ExpressionTypeConverter`2.Expression*
  name: Expression
  href: api/Inflatable.Utils.ExpressionTypeConverter-2.html#Inflatable_Utils_ExpressionTypeConverter_2_Expression_
  commentId: Overload:Inflatable.Utils.ExpressionTypeConverter`2.Expression
  isSpec: "True"
  fullName: Inflatable.Utils.ExpressionTypeConverter<TData, TReturn>.Expression
  fullName.vb: Inflatable.Utils.ExpressionTypeConverter(Of TData, TReturn).Expression
  nameWithType: ExpressionTypeConverter<TData, TReturn>.Expression
  nameWithType.vb: ExpressionTypeConverter(Of TData, TReturn).Expression
- uid: Inflatable.Utils.Tree`1
  name: Tree<TData>
  href: api/Inflatable.Utils.Tree-1.html
  commentId: T:Inflatable.Utils.Tree`1
  name.vb: Tree(Of TData)
  fullName: Inflatable.Utils.Tree<TData>
  fullName.vb: Inflatable.Utils.Tree(Of TData)
  nameWithType: Tree<TData>
  nameWithType.vb: Tree(Of TData)
- uid: Inflatable.Utils.Tree`1.#ctor(`0)
  name: Tree(TData)
  href: api/Inflatable.Utils.Tree-1.html#Inflatable_Utils_Tree_1__ctor__0_
  commentId: M:Inflatable.Utils.Tree`1.#ctor(`0)
  name.vb: New(TData)
  fullName: Inflatable.Utils.Tree<TData>.Tree(TData)
  fullName.vb: Inflatable.Utils.Tree(Of TData).New(TData)
  nameWithType: Tree<TData>.Tree(TData)
  nameWithType.vb: Tree(Of TData).New(TData)
- uid: Inflatable.Utils.Tree`1.#ctor*
  name: Tree
  href: api/Inflatable.Utils.Tree-1.html#Inflatable_Utils_Tree_1__ctor_
  commentId: Overload:Inflatable.Utils.Tree`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.Utils.Tree<TData>.Tree
  fullName.vb: Inflatable.Utils.Tree(Of TData).New
  nameWithType: Tree<TData>.Tree
  nameWithType.vb: Tree(Of TData).New
- uid: Inflatable.Utils.Tree`1.ContainsNode(`0,System.Func{`0,`0,System.Boolean})
  name: ContainsNode(TData, Func<TData, TData, bool>)
  href: api/Inflatable.Utils.Tree-1.html#Inflatable_Utils_Tree_1_ContainsNode__0_System_Func__0__0_System_Boolean__
  commentId: M:Inflatable.Utils.Tree`1.ContainsNode(`0,System.Func{`0,`0,System.Boolean})
  name.vb: ContainsNode(TData, Func(Of TData, TData, Boolean))
  fullName: Inflatable.Utils.Tree<TData>.ContainsNode(TData, System.Func<TData, TData, bool>)
  fullName.vb: Inflatable.Utils.Tree(Of TData).ContainsNode(TData, System.Func(Of TData, TData, Boolean))
  nameWithType: Tree<TData>.ContainsNode(TData, Func<TData, TData, bool>)
  nameWithType.vb: Tree(Of TData).ContainsNode(TData, Func(Of TData, TData, Boolean))
- uid: Inflatable.Utils.Tree`1.ContainsNode*
  name: ContainsNode
  href: api/Inflatable.Utils.Tree-1.html#Inflatable_Utils_Tree_1_ContainsNode_
  commentId: Overload:Inflatable.Utils.Tree`1.ContainsNode
  isSpec: "True"
  fullName: Inflatable.Utils.Tree<TData>.ContainsNode
  fullName.vb: Inflatable.Utils.Tree(Of TData).ContainsNode
  nameWithType: Tree<TData>.ContainsNode
  nameWithType.vb: Tree(Of TData).ContainsNode
- uid: Inflatable.Utils.Tree`1.Root
  name: Root
  href: api/Inflatable.Utils.Tree-1.html#Inflatable_Utils_Tree_1_Root
  commentId: P:Inflatable.Utils.Tree`1.Root
  fullName: Inflatable.Utils.Tree<TData>.Root
  fullName.vb: Inflatable.Utils.Tree(Of TData).Root
  nameWithType: Tree<TData>.Root
  nameWithType.vb: Tree(Of TData).Root
- uid: Inflatable.Utils.Tree`1.Root*
  name: Root
  href: api/Inflatable.Utils.Tree-1.html#Inflatable_Utils_Tree_1_Root_
  commentId: Overload:Inflatable.Utils.Tree`1.Root
  isSpec: "True"
  fullName: Inflatable.Utils.Tree<TData>.Root
  fullName.vb: Inflatable.Utils.Tree(Of TData).Root
  nameWithType: Tree<TData>.Root
  nameWithType.vb: Tree(Of TData).Root
- uid: Inflatable.Utils.Tree`1.ToList
  name: ToList()
  href: api/Inflatable.Utils.Tree-1.html#Inflatable_Utils_Tree_1_ToList
  commentId: M:Inflatable.Utils.Tree`1.ToList
  fullName: Inflatable.Utils.Tree<TData>.ToList()
  fullName.vb: Inflatable.Utils.Tree(Of TData).ToList()
  nameWithType: Tree<TData>.ToList()
  nameWithType.vb: Tree(Of TData).ToList()
- uid: Inflatable.Utils.Tree`1.ToList*
  name: ToList
  href: api/Inflatable.Utils.Tree-1.html#Inflatable_Utils_Tree_1_ToList_
  commentId: Overload:Inflatable.Utils.Tree`1.ToList
  isSpec: "True"
  fullName: Inflatable.Utils.Tree<TData>.ToList
  fullName.vb: Inflatable.Utils.Tree(Of TData).ToList
  nameWithType: Tree<TData>.ToList
  nameWithType.vb: Tree(Of TData).ToList
- uid: Inflatable.Utils.Tree`1.ToString
  name: ToString()
  href: api/Inflatable.Utils.Tree-1.html#Inflatable_Utils_Tree_1_ToString
  commentId: M:Inflatable.Utils.Tree`1.ToString
  fullName: Inflatable.Utils.Tree<TData>.ToString()
  fullName.vb: Inflatable.Utils.Tree(Of TData).ToString()
  nameWithType: Tree<TData>.ToString()
  nameWithType.vb: Tree(Of TData).ToString()
- uid: Inflatable.Utils.Tree`1.ToString*
  name: ToString
  href: api/Inflatable.Utils.Tree-1.html#Inflatable_Utils_Tree_1_ToString_
  commentId: Overload:Inflatable.Utils.Tree`1.ToString
  isSpec: "True"
  fullName: Inflatable.Utils.Tree<TData>.ToString
  fullName.vb: Inflatable.Utils.Tree(Of TData).ToString
  nameWithType: Tree<TData>.ToString
  nameWithType.vb: Tree(Of TData).ToString
- uid: Inflatable.Utils.TreeNode`1
  name: TreeNode<TData>
  href: api/Inflatable.Utils.TreeNode-1.html
  commentId: T:Inflatable.Utils.TreeNode`1
  name.vb: TreeNode(Of TData)
  fullName: Inflatable.Utils.TreeNode<TData>
  fullName.vb: Inflatable.Utils.TreeNode(Of TData)
  nameWithType: TreeNode<TData>
  nameWithType.vb: TreeNode(Of TData)
- uid: Inflatable.Utils.TreeNode`1.#ctor(`0,Inflatable.Utils.TreeNode{`0})
  name: TreeNode(TData, TreeNode<TData>?)
  href: api/Inflatable.Utils.TreeNode-1.html#Inflatable_Utils_TreeNode_1__ctor__0_Inflatable_Utils_TreeNode__0__
  commentId: M:Inflatable.Utils.TreeNode`1.#ctor(`0,Inflatable.Utils.TreeNode{`0})
  name.vb: New(TData, TreeNode(Of TData))
  fullName: Inflatable.Utils.TreeNode<TData>.TreeNode(TData, Inflatable.Utils.TreeNode<TData>?)
  fullName.vb: Inflatable.Utils.TreeNode(Of TData).New(TData, Inflatable.Utils.TreeNode(Of TData))
  nameWithType: TreeNode<TData>.TreeNode(TData, TreeNode<TData>?)
  nameWithType.vb: TreeNode(Of TData).New(TData, TreeNode(Of TData))
- uid: Inflatable.Utils.TreeNode`1.#ctor*
  name: TreeNode
  href: api/Inflatable.Utils.TreeNode-1.html#Inflatable_Utils_TreeNode_1__ctor_
  commentId: Overload:Inflatable.Utils.TreeNode`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.Utils.TreeNode<TData>.TreeNode
  fullName.vb: Inflatable.Utils.TreeNode(Of TData).New
  nameWithType: TreeNode<TData>.TreeNode
  nameWithType.vb: TreeNode(Of TData).New
- uid: Inflatable.Utils.TreeNode`1.AddNode(`0)
  name: AddNode(TData)
  href: api/Inflatable.Utils.TreeNode-1.html#Inflatable_Utils_TreeNode_1_AddNode__0_
  commentId: M:Inflatable.Utils.TreeNode`1.AddNode(`0)
  fullName: Inflatable.Utils.TreeNode<TData>.AddNode(TData)
  fullName.vb: Inflatable.Utils.TreeNode(Of TData).AddNode(TData)
  nameWithType: TreeNode<TData>.AddNode(TData)
  nameWithType.vb: TreeNode(Of TData).AddNode(TData)
- uid: Inflatable.Utils.TreeNode`1.AddNode*
  name: AddNode
  href: api/Inflatable.Utils.TreeNode-1.html#Inflatable_Utils_TreeNode_1_AddNode_
  commentId: Overload:Inflatable.Utils.TreeNode`1.AddNode
  isSpec: "True"
  fullName: Inflatable.Utils.TreeNode<TData>.AddNode
  fullName.vb: Inflatable.Utils.TreeNode(Of TData).AddNode
  nameWithType: TreeNode<TData>.AddNode
  nameWithType.vb: TreeNode(Of TData).AddNode
- uid: Inflatable.Utils.TreeNode`1.ContainsNode(`0,System.Func{`0,`0,System.Boolean})
  name: ContainsNode(TData, Func<TData, TData, bool>)
  href: api/Inflatable.Utils.TreeNode-1.html#Inflatable_Utils_TreeNode_1_ContainsNode__0_System_Func__0__0_System_Boolean__
  commentId: M:Inflatable.Utils.TreeNode`1.ContainsNode(`0,System.Func{`0,`0,System.Boolean})
  name.vb: ContainsNode(TData, Func(Of TData, TData, Boolean))
  fullName: Inflatable.Utils.TreeNode<TData>.ContainsNode(TData, System.Func<TData, TData, bool>)
  fullName.vb: Inflatable.Utils.TreeNode(Of TData).ContainsNode(TData, System.Func(Of TData, TData, Boolean))
  nameWithType: TreeNode<TData>.ContainsNode(TData, Func<TData, TData, bool>)
  nameWithType.vb: TreeNode(Of TData).ContainsNode(TData, Func(Of TData, TData, Boolean))
- uid: Inflatable.Utils.TreeNode`1.ContainsNode*
  name: ContainsNode
  href: api/Inflatable.Utils.TreeNode-1.html#Inflatable_Utils_TreeNode_1_ContainsNode_
  commentId: Overload:Inflatable.Utils.TreeNode`1.ContainsNode
  isSpec: "True"
  fullName: Inflatable.Utils.TreeNode<TData>.ContainsNode
  fullName.vb: Inflatable.Utils.TreeNode(Of TData).ContainsNode
  nameWithType: TreeNode<TData>.ContainsNode
  nameWithType.vb: TreeNode(Of TData).ContainsNode
- uid: Inflatable.Utils.TreeNode`1.Data
  name: Data
  href: api/Inflatable.Utils.TreeNode-1.html#Inflatable_Utils_TreeNode_1_Data
  commentId: P:Inflatable.Utils.TreeNode`1.Data
  fullName: Inflatable.Utils.TreeNode<TData>.Data
  fullName.vb: Inflatable.Utils.TreeNode(Of TData).Data
  nameWithType: TreeNode<TData>.Data
  nameWithType.vb: TreeNode(Of TData).Data
- uid: Inflatable.Utils.TreeNode`1.Data*
  name: Data
  href: api/Inflatable.Utils.TreeNode-1.html#Inflatable_Utils_TreeNode_1_Data_
  commentId: Overload:Inflatable.Utils.TreeNode`1.Data
  isSpec: "True"
  fullName: Inflatable.Utils.TreeNode<TData>.Data
  fullName.vb: Inflatable.Utils.TreeNode(Of TData).Data
  nameWithType: TreeNode<TData>.Data
  nameWithType.vb: TreeNode(Of TData).Data
- uid: Inflatable.Utils.TreeNode`1.Nodes
  name: Nodes
  href: api/Inflatable.Utils.TreeNode-1.html#Inflatable_Utils_TreeNode_1_Nodes
  commentId: P:Inflatable.Utils.TreeNode`1.Nodes
  fullName: Inflatable.Utils.TreeNode<TData>.Nodes
  fullName.vb: Inflatable.Utils.TreeNode(Of TData).Nodes
  nameWithType: TreeNode<TData>.Nodes
  nameWithType.vb: TreeNode(Of TData).Nodes
- uid: Inflatable.Utils.TreeNode`1.Nodes*
  name: Nodes
  href: api/Inflatable.Utils.TreeNode-1.html#Inflatable_Utils_TreeNode_1_Nodes_
  commentId: Overload:Inflatable.Utils.TreeNode`1.Nodes
  isSpec: "True"
  fullName: Inflatable.Utils.TreeNode<TData>.Nodes
  fullName.vb: Inflatable.Utils.TreeNode(Of TData).Nodes
  nameWithType: TreeNode<TData>.Nodes
  nameWithType.vb: TreeNode(Of TData).Nodes
- uid: Inflatable.Utils.TreeNode`1.Parent
  name: Parent
  href: api/Inflatable.Utils.TreeNode-1.html#Inflatable_Utils_TreeNode_1_Parent
  commentId: P:Inflatable.Utils.TreeNode`1.Parent
  fullName: Inflatable.Utils.TreeNode<TData>.Parent
  fullName.vb: Inflatable.Utils.TreeNode(Of TData).Parent
  nameWithType: TreeNode<TData>.Parent
  nameWithType.vb: TreeNode(Of TData).Parent
- uid: Inflatable.Utils.TreeNode`1.Parent*
  name: Parent
  href: api/Inflatable.Utils.TreeNode-1.html#Inflatable_Utils_TreeNode_1_Parent_
  commentId: Overload:Inflatable.Utils.TreeNode`1.Parent
  isSpec: "True"
  fullName: Inflatable.Utils.TreeNode<TData>.Parent
  fullName.vb: Inflatable.Utils.TreeNode(Of TData).Parent
  nameWithType: TreeNode<TData>.Parent
  nameWithType.vb: TreeNode(Of TData).Parent
- uid: Inflatable.Utils.TreeNode`1.Remove
  name: Remove()
  href: api/Inflatable.Utils.TreeNode-1.html#Inflatable_Utils_TreeNode_1_Remove
  commentId: M:Inflatable.Utils.TreeNode`1.Remove
  fullName: Inflatable.Utils.TreeNode<TData>.Remove()
  fullName.vb: Inflatable.Utils.TreeNode(Of TData).Remove()
  nameWithType: TreeNode<TData>.Remove()
  nameWithType.vb: TreeNode(Of TData).Remove()
- uid: Inflatable.Utils.TreeNode`1.Remove*
  name: Remove
  href: api/Inflatable.Utils.TreeNode-1.html#Inflatable_Utils_TreeNode_1_Remove_
  commentId: Overload:Inflatable.Utils.TreeNode`1.Remove
  isSpec: "True"
  fullName: Inflatable.Utils.TreeNode<TData>.Remove
  fullName.vb: Inflatable.Utils.TreeNode(Of TData).Remove
  nameWithType: TreeNode<TData>.Remove
  nameWithType.vb: TreeNode(Of TData).Remove
- uid: Inflatable.Utils.TreeNode`1.ToList
  name: ToList()
  href: api/Inflatable.Utils.TreeNode-1.html#Inflatable_Utils_TreeNode_1_ToList
  commentId: M:Inflatable.Utils.TreeNode`1.ToList
  fullName: Inflatable.Utils.TreeNode<TData>.ToList()
  fullName.vb: Inflatable.Utils.TreeNode(Of TData).ToList()
  nameWithType: TreeNode<TData>.ToList()
  nameWithType.vb: TreeNode(Of TData).ToList()
- uid: Inflatable.Utils.TreeNode`1.ToList*
  name: ToList
  href: api/Inflatable.Utils.TreeNode-1.html#Inflatable_Utils_TreeNode_1_ToList_
  commentId: Overload:Inflatable.Utils.TreeNode`1.ToList
  isSpec: "True"
  fullName: Inflatable.Utils.TreeNode<TData>.ToList
  fullName.vb: Inflatable.Utils.TreeNode(Of TData).ToList
  nameWithType: TreeNode<TData>.ToList
  nameWithType.vb: TreeNode(Of TData).ToList
- uid: Inflatable.Utils.TreeNode`1.ToString
  name: ToString()
  href: api/Inflatable.Utils.TreeNode-1.html#Inflatable_Utils_TreeNode_1_ToString
  commentId: M:Inflatable.Utils.TreeNode`1.ToString
  fullName: Inflatable.Utils.TreeNode<TData>.ToString()
  fullName.vb: Inflatable.Utils.TreeNode(Of TData).ToString()
  nameWithType: TreeNode<TData>.ToString()
  nameWithType.vb: TreeNode(Of TData).ToString()
- uid: Inflatable.Utils.TreeNode`1.ToString*
  name: ToString
  href: api/Inflatable.Utils.TreeNode-1.html#Inflatable_Utils_TreeNode_1_ToString_
  commentId: Overload:Inflatable.Utils.TreeNode`1.ToString
  isSpec: "True"
  fullName: Inflatable.Utils.TreeNode<TData>.ToString
  fullName.vb: Inflatable.Utils.TreeNode(Of TData).ToString
  nameWithType: TreeNode<TData>.ToString
  nameWithType.vb: TreeNode(Of TData).ToString
- uid: Inflatable.Utils.Visitor
  name: Visitor
  href: api/Inflatable.Utils.Visitor.html
  commentId: T:Inflatable.Utils.Visitor
  fullName: Inflatable.Utils.Visitor
  nameWithType: Visitor
- uid: Inflatable.Utils.Visitor.#ctor(System.Linq.Expressions.ParameterExpression)
  name: Visitor(ParameterExpression)
  href: api/Inflatable.Utils.Visitor.html#Inflatable_Utils_Visitor__ctor_System_Linq_Expressions_ParameterExpression_
  commentId: M:Inflatable.Utils.Visitor.#ctor(System.Linq.Expressions.ParameterExpression)
  name.vb: New(ParameterExpression)
  fullName: Inflatable.Utils.Visitor.Visitor(System.Linq.Expressions.ParameterExpression)
  fullName.vb: Inflatable.Utils.Visitor.New(System.Linq.Expressions.ParameterExpression)
  nameWithType: Visitor.Visitor(ParameterExpression)
  nameWithType.vb: Visitor.New(ParameterExpression)
- uid: Inflatable.Utils.Visitor.#ctor*
  name: Visitor
  href: api/Inflatable.Utils.Visitor.html#Inflatable_Utils_Visitor__ctor_
  commentId: Overload:Inflatable.Utils.Visitor.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Inflatable.Utils.Visitor.Visitor
  fullName.vb: Inflatable.Utils.Visitor.New
  nameWithType: Visitor.Visitor
  nameWithType.vb: Visitor.New
- uid: Inflatable.Utils.Visitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  name: VisitParameter(ParameterExpression)
  href: api/Inflatable.Utils.Visitor.html#Inflatable_Utils_Visitor_VisitParameter_System_Linq_Expressions_ParameterExpression_
  commentId: M:Inflatable.Utils.Visitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  fullName: Inflatable.Utils.Visitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  nameWithType: Visitor.VisitParameter(ParameterExpression)
- uid: Inflatable.Utils.Visitor.VisitParameter*
  name: VisitParameter
  href: api/Inflatable.Utils.Visitor.html#Inflatable_Utils_Visitor_VisitParameter_
  commentId: Overload:Inflatable.Utils.Visitor.VisitParameter
  isSpec: "True"
  fullName: Inflatable.Utils.Visitor.VisitParameter
  nameWithType: Visitor.VisitParameter
- uid: Microsoft.Extensions.DependencyInjection
  name: Microsoft.Extensions.DependencyInjection
  href: api/Microsoft.Extensions.DependencyInjection.html
  commentId: N:Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
- uid: Microsoft.Extensions.DependencyInjection.Registration
  name: Registration
  href: api/Microsoft.Extensions.DependencyInjection.Registration.html
  commentId: T:Microsoft.Extensions.DependencyInjection.Registration
  fullName: Microsoft.Extensions.DependencyInjection.Registration
  nameWithType: Registration
- uid: Microsoft.Extensions.DependencyInjection.Registration.RegisterInflatable(Canister.Interfaces.ICanisterConfiguration)
  name: RegisterInflatable(ICanisterConfiguration?)
  href: api/Microsoft.Extensions.DependencyInjection.Registration.html#Microsoft_Extensions_DependencyInjection_Registration_RegisterInflatable_Canister_Interfaces_ICanisterConfiguration_
  commentId: M:Microsoft.Extensions.DependencyInjection.Registration.RegisterInflatable(Canister.Interfaces.ICanisterConfiguration)
  name.vb: RegisterInflatable(ICanisterConfiguration)
  fullName: Microsoft.Extensions.DependencyInjection.Registration.RegisterInflatable(Canister.Interfaces.ICanisterConfiguration?)
  fullName.vb: Microsoft.Extensions.DependencyInjection.Registration.RegisterInflatable(Canister.Interfaces.ICanisterConfiguration)
  nameWithType: Registration.RegisterInflatable(ICanisterConfiguration?)
  nameWithType.vb: Registration.RegisterInflatable(ICanisterConfiguration)
- uid: Microsoft.Extensions.DependencyInjection.Registration.RegisterInflatable*
  name: RegisterInflatable
  href: api/Microsoft.Extensions.DependencyInjection.Registration.html#Microsoft_Extensions_DependencyInjection_Registration_RegisterInflatable_
  commentId: Overload:Microsoft.Extensions.DependencyInjection.Registration.RegisterInflatable
  isSpec: "True"
  fullName: Microsoft.Extensions.DependencyInjection.Registration.RegisterInflatable
  nameWithType: Registration.RegisterInflatable
